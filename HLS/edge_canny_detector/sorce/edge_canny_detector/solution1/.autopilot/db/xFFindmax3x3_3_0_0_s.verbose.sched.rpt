

================================================================
== Vitis HLS Report for 'xFFindmax3x3_3_0_0_s'
================================================================
* Date:           Tue Jan 24 22:05:13 2023

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        edge_canny_detector
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.496 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1|  10.000 ns|  10.000 ns|    1|    1|      yes|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.13>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%p_high_threshold_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_high_threshold" [source/imgproc/xf_canny_utils.hpp:38]   --->   Operation 3 'read' 'p_high_threshold_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%p_low_threshold_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_low_threshold" [source/imgproc/xf_canny_utils.hpp:38]   --->   Operation 4 'read' 'p_low_threshold_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%angle_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %angle" [source/imgproc/xf_canny_utils.hpp:38]   --->   Operation 5 'read' 'angle_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%p_i22_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %p_i22" [source/imgproc/xf_canny_utils.hpp:38]   --->   Operation 6 'read' 'p_i22_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_i21_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %p_i21" [source/imgproc/xf_canny_utils.hpp:38]   --->   Operation 7 'read' 'p_i21_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_i20_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %p_i20" [source/imgproc/xf_canny_utils.hpp:38]   --->   Operation 8 'read' 'p_i20_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_i12_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %p_i12" [source/imgproc/xf_canny_utils.hpp:38]   --->   Operation 9 'read' 'p_i12_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_i11_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %p_i11" [source/imgproc/xf_canny_utils.hpp:38]   --->   Operation 10 'read' 'p_i11_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_i10_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %p_i10" [source/imgproc/xf_canny_utils.hpp:38]   --->   Operation 11 'read' 'p_i10_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_i02_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %p_i02" [source/imgproc/xf_canny_utils.hpp:38]   --->   Operation 12 'read' 'p_i02_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_i01_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %p_i01" [source/imgproc/xf_canny_utils.hpp:38]   --->   Operation 13 'read' 'p_i01_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_i00_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %p_i00" [source/imgproc/xf_canny_utils.hpp:38]   --->   Operation 14 'read' 'p_i00_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln886 = zext i8 %p_low_threshold_read"   --->   Operation 15 'zext' 'zext_ln886' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (2.13ns)   --->   "%icmp_ln886 = icmp_slt  i16 %zext_ln886, i16 %p_i11_read"   --->   Operation 16 'icmp' 'icmp_ln886' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (1.31ns)   --->   "%icmp_ln870 = icmp_eq  i8 %angle_read, i8 0"   --->   Operation 17 'icmp' 'icmp_ln870' <Predicate = true> <Delay = 1.31> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (2.13ns)   --->   "%icmp_ln886_1 = icmp_sgt  i16 %p_i11_read, i16 %p_i10_read"   --->   Operation 18 'icmp' 'icmp_ln886_1' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (2.13ns)   --->   "%icmp_ln882 = icmp_slt  i16 %p_i11_read, i16 %p_i12_read"   --->   Operation 19 'icmp' 'icmp_ln882' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (1.31ns)   --->   "%icmp_ln870_5 = icmp_eq  i8 %angle_read, i8 45"   --->   Operation 20 'icmp' 'icmp_ln870_5' <Predicate = true> <Delay = 1.31> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln886_1 = zext i8 %p_high_threshold_read"   --->   Operation 21 'zext' 'zext_ln886_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (2.13ns)   --->   "%icmp_ln886_2 = icmp_slt  i16 %zext_ln886_1, i16 %p_i11_read"   --->   Operation 22 'icmp' 'icmp_ln886_2' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (2.13ns)   --->   "%icmp_ln886_3 = icmp_sgt  i16 %p_i11_read, i16 %p_i02_read"   --->   Operation 23 'icmp' 'icmp_ln886_3' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (2.13ns)   --->   "%icmp_ln886_4 = icmp_sgt  i16 %p_i11_read, i16 %p_i20_read"   --->   Operation 24 'icmp' 'icmp_ln886_4' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (1.31ns)   --->   "%icmp_ln870_6 = icmp_eq  i8 %angle_read, i8 90"   --->   Operation 25 'icmp' 'icmp_ln870_6' <Predicate = true> <Delay = 1.31> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (2.13ns)   --->   "%icmp_ln886_5 = icmp_sgt  i16 %p_i11_read, i16 %p_i01_read"   --->   Operation 26 'icmp' 'icmp_ln886_5' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (2.13ns)   --->   "%icmp_ln882_1 = icmp_slt  i16 %p_i11_read, i16 %p_i21_read"   --->   Operation 27 'icmp' 'icmp_ln882_1' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (1.31ns)   --->   "%icmp_ln870_7 = icmp_eq  i8 %angle_read, i8 135"   --->   Operation 28 'icmp' 'icmp_ln870_7' <Predicate = true> <Delay = 1.31> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (2.13ns)   --->   "%icmp_ln886_6 = icmp_sgt  i16 %p_i11_read, i16 %p_i00_read"   --->   Operation 29 'icmp' 'icmp_ln886_6' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (2.13ns)   --->   "%icmp_ln886_7 = icmp_sgt  i16 %p_i11_read, i16 %p_i22_read"   --->   Operation 30 'icmp' 'icmp_ln886_7' <Predicate = true> <Delay = 2.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 6.49>
ST_2 : Operation 31 [1/1] (0.80ns)   --->   "%xor_ln882 = xor i1 %icmp_ln882, i1 1"   --->   Operation 31 'xor' 'xor_ln882' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.44ns)   --->   "%NMS = select i1 %icmp_ln886_2, i8 0, i8 128" [source/imgproc/xf_canny_utils.hpp:49]   --->   Operation 32 'select' 'NMS' <Predicate = (icmp_ln886)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.80ns)   --->   "%xor_ln882_1 = xor i1 %icmp_ln882_1, i1 1"   --->   Operation 33 'xor' 'xor_ln882_1' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node and_ln870)   --->   "%xor_ln870 = xor i1 %icmp_ln870, i1 1"   --->   Operation 34 'xor' 'xor_ln870' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln870 = and i1 %icmp_ln886, i1 %xor_ln870"   --->   Operation 35 'and' 'and_ln870' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node and_ln870_1)   --->   "%xor_ln870_1 = xor i1 %icmp_ln870_5, i1 1"   --->   Operation 36 'xor' 'xor_ln870_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln870_1 = and i1 %and_ln870, i1 %xor_ln870_1"   --->   Operation 37 'and' 'and_ln870_1' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node and_ln870_2)   --->   "%xor_ln870_2 = xor i1 %icmp_ln870_6, i1 1"   --->   Operation 38 'xor' 'xor_ln870_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln870_2 = and i1 %and_ln870_1, i1 %xor_ln870_2"   --->   Operation 39 'and' 'and_ln870_2' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node NMS_1)   --->   "%and_ln86 = and i1 %and_ln870_2, i1 %icmp_ln870_7" [source/imgproc/xf_canny_utils.hpp:86]   --->   Operation 40 'and' 'and_ln86' <Predicate = (icmp_ln886)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node NMS_1)   --->   "%and_ln86_1 = and i1 %icmp_ln886_7, i1 %icmp_ln886_6" [source/imgproc/xf_canny_utils.hpp:86]   --->   Operation 41 'and' 'and_ln86_1' <Predicate = (icmp_ln886)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node NMS_1)   --->   "%and_ln86_2 = and i1 %and_ln86_1, i1 %and_ln86" [source/imgproc/xf_canny_utils.hpp:86]   --->   Operation 42 'and' 'and_ln86_2' <Predicate = (icmp_ln886)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.80ns) (out node of the LUT)   --->   "%NMS_1 = select i1 %and_ln86_2, i8 %NMS, i8 255" [source/imgproc/xf_canny_utils.hpp:86]   --->   Operation 43 'select' 'NMS_1' <Predicate = (icmp_ln886)> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.80ns)   --->   "%and_ln870_3 = and i1 %and_ln870_1, i1 %icmp_ln870_6"   --->   Operation 44 'and' 'and_ln870_3' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node NMS_2)   --->   "%and_ln73 = and i1 %xor_ln882_1, i1 %and_ln870_3" [source/imgproc/xf_canny_utils.hpp:73]   --->   Operation 45 'and' 'and_ln73' <Predicate = (icmp_ln886)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node NMS_2)   --->   "%and_ln73_1 = and i1 %and_ln73, i1 %icmp_ln886_5" [source/imgproc/xf_canny_utils.hpp:73]   --->   Operation 46 'and' 'and_ln73_1' <Predicate = (icmp_ln886)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.80ns) (out node of the LUT)   --->   "%NMS_2 = select i1 %and_ln73_1, i8 %NMS, i8 %NMS_1" [source/imgproc/xf_canny_utils.hpp:73]   --->   Operation 47 'select' 'NMS_2' <Predicate = (icmp_ln886)> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.80ns)   --->   "%and_ln870_4 = and i1 %and_ln870, i1 %icmp_ln870_5"   --->   Operation 48 'and' 'and_ln870_4' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node NMS_3)   --->   "%and_ln59 = and i1 %icmp_ln886_4, i1 %and_ln870_4" [source/imgproc/xf_canny_utils.hpp:59]   --->   Operation 49 'and' 'and_ln59' <Predicate = (icmp_ln886)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node NMS_3)   --->   "%and_ln59_1 = and i1 %and_ln59, i1 %icmp_ln886_3" [source/imgproc/xf_canny_utils.hpp:59]   --->   Operation 50 'and' 'and_ln59_1' <Predicate = (icmp_ln886)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.80ns) (out node of the LUT)   --->   "%NMS_3 = select i1 %and_ln59_1, i8 %NMS, i8 %NMS_2" [source/imgproc/xf_canny_utils.hpp:59]   --->   Operation 51 'select' 'NMS_3' <Predicate = (icmp_ln886)> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.80ns)   --->   "%and_ln870_5 = and i1 %icmp_ln886, i1 %icmp_ln870"   --->   Operation 52 'and' 'and_ln870_5' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node NMS_5)   --->   "%and_ln46 = and i1 %xor_ln882, i1 %and_ln870_5" [source/imgproc/xf_canny_utils.hpp:46]   --->   Operation 53 'and' 'and_ln46' <Predicate = (icmp_ln886)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node NMS_5)   --->   "%and_ln46_1 = and i1 %and_ln46, i1 %icmp_ln886_1" [source/imgproc/xf_canny_utils.hpp:46]   --->   Operation 54 'and' 'and_ln46_1' <Predicate = (icmp_ln886)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node NMS_5)   --->   "%NMS_4 = select i1 %and_ln46_1, i8 %NMS, i8 %NMS_3" [source/imgproc/xf_canny_utils.hpp:46]   --->   Operation 55 'select' 'NMS_4' <Predicate = (icmp_ln886)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.80ns) (out node of the LUT)   --->   "%NMS_5 = select i1 %icmp_ln886, i8 %NMS_4, i8 255"   --->   Operation 56 'select' 'NMS_5' <Predicate = true> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node or_ln59)   --->   "%and_ln46_2 = and i1 %icmp_ln886_1, i1 %xor_ln882" [source/imgproc/xf_canny_utils.hpp:46]   --->   Operation 57 'and' 'and_ln46_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node or_ln59)   --->   "%xor_ln46 = xor i1 %and_ln46_2, i1 1" [source/imgproc/xf_canny_utils.hpp:46]   --->   Operation 58 'xor' 'xor_ln46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node or_ln59)   --->   "%and_ln46_3 = and i1 %and_ln870_5, i1 %xor_ln46" [source/imgproc/xf_canny_utils.hpp:46]   --->   Operation 59 'and' 'and_ln46_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node or_ln59)   --->   "%and_ln59_2 = and i1 %icmp_ln886_3, i1 %icmp_ln886_4" [source/imgproc/xf_canny_utils.hpp:59]   --->   Operation 60 'and' 'and_ln59_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node or_ln59)   --->   "%xor_ln59 = xor i1 %and_ln59_2, i1 1" [source/imgproc/xf_canny_utils.hpp:59]   --->   Operation 61 'xor' 'xor_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node or_ln59)   --->   "%and_ln59_3 = and i1 %and_ln870_4, i1 %xor_ln59" [source/imgproc/xf_canny_utils.hpp:59]   --->   Operation 62 'and' 'and_ln59_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.80ns) (out node of the LUT)   --->   "%or_ln59 = or i1 %and_ln59_3, i1 %and_ln46_3" [source/imgproc/xf_canny_utils.hpp:59]   --->   Operation 63 'or' 'or_ln59' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.44ns) (out node of the LUT)   --->   "%NMS_6 = select i1 %or_ln59, i8 255, i8 %NMS_5" [source/imgproc/xf_canny_utils.hpp:59]   --->   Operation 64 'select' 'NMS_6' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node or_ln870)   --->   "%and_ln73_2 = and i1 %icmp_ln886_5, i1 %xor_ln882_1" [source/imgproc/xf_canny_utils.hpp:73]   --->   Operation 65 'and' 'and_ln73_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node or_ln870)   --->   "%xor_ln73 = xor i1 %and_ln73_2, i1 1" [source/imgproc/xf_canny_utils.hpp:73]   --->   Operation 66 'xor' 'xor_ln73' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node or_ln870)   --->   "%and_ln73_3 = and i1 %and_ln870_3, i1 %xor_ln73" [source/imgproc/xf_canny_utils.hpp:73]   --->   Operation 67 'and' 'and_ln73_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node or_ln870)   --->   "%xor_ln870_3 = xor i1 %icmp_ln870_7, i1 1"   --->   Operation 68 'xor' 'xor_ln870_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node or_ln870)   --->   "%and_ln870_6 = and i1 %and_ln870_2, i1 %xor_ln870_3"   --->   Operation 69 'and' 'and_ln870_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node select_ln870)   --->   "%xor_ln870_4 = xor i1 %icmp_ln886, i1 1"   --->   Operation 70 'xor' 'xor_ln870_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node select_ln870)   --->   "%or_ln870_1 = or i1 %icmp_ln870, i1 %xor_ln870_4"   --->   Operation 71 'or' 'or_ln870_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node select_ln870)   --->   "%or_ln870_2 = or i1 %icmp_ln870_5, i1 %or_ln870_1"   --->   Operation 72 'or' 'or_ln870_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node select_ln870)   --->   "%or_ln870_3 = or i1 %icmp_ln870_6, i1 %or_ln870_2"   --->   Operation 73 'or' 'or_ln870_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node select_ln870)   --->   "%or_ln870_4 = or i1 %icmp_ln870_7, i1 %or_ln870_3"   --->   Operation 74 'or' 'or_ln870_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.81ns) (out node of the LUT)   --->   "%select_ln870 = select i1 %or_ln870_4, i8 255, i8 0"   --->   Operation 75 'select' 'select_ln870' <Predicate = true> <Delay = 0.81> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.80ns) (out node of the LUT)   --->   "%or_ln870 = or i1 %and_ln870_6, i1 %and_ln73_3"   --->   Operation 76 'or' 'or_ln870' <Predicate = true> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (0.44ns) (out node of the LUT)   --->   "%NMS_7 = select i1 %or_ln870, i8 %select_ln870, i8 %NMS_6"   --->   Operation 77 'select' 'NMS_7' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%ret_ln99 = ret i8 %NMS_7" [source/imgproc/xf_canny_utils.hpp:99]   --->   Operation 78 'ret' 'ret_ln99' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 2.14ns
The critical path consists of the following:
	wire read on port 'p_low_threshold' (source/imgproc/xf_canny_utils.hpp:38) [14]  (0 ns)
	'icmp' operation ('icmp_ln886') [26]  (2.14 ns)

 <State 2>: 6.5ns
The critical path consists of the following:
	'xor' operation ('xor_ln870') [44]  (0 ns)
	'and' operation ('and_ln870') [45]  (0.8 ns)
	'and' operation ('and_ln870_1') [47]  (0.8 ns)
	'and' operation ('and_ln870_2') [49]  (0.8 ns)
	'and' operation ('and_ln86', source/imgproc/xf_canny_utils.hpp:86) [50]  (0 ns)
	'and' operation ('and_ln86_2', source/imgproc/xf_canny_utils.hpp:86) [52]  (0 ns)
	'select' operation ('NMS', source/imgproc/xf_canny_utils.hpp:86) [53]  (0.8 ns)
	'select' operation ('NMS', source/imgproc/xf_canny_utils.hpp:73) [57]  (0.8 ns)
	'select' operation ('NMS', source/imgproc/xf_canny_utils.hpp:59) [61]  (0.8 ns)
	'select' operation ('NMS', source/imgproc/xf_canny_utils.hpp:46) [65]  (0 ns)
	'select' operation ('NMS') [66]  (0.8 ns)
	'select' operation ('NMS', source/imgproc/xf_canny_utils.hpp:59) [74]  (0.448 ns)
	'select' operation ('NMS') [87]  (0.448 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
