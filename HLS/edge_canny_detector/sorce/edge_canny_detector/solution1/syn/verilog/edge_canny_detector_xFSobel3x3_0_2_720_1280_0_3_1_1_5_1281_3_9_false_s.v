// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module edge_canny_detector_xFSobel3x3_0_2_720_1280_0_3_1_1_5_1281_3_9_false_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        gaussian_mat_4209_dout,
        gaussian_mat_4209_empty_n,
        gaussian_mat_4209_read,
        gradx_mat_4210_din,
        gradx_mat_4210_full_n,
        gradx_mat_4210_write,
        grady_mat_4213_din,
        grady_mat_4213_full_n,
        grady_mat_4213_write
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_pp1_stage0 = 11'd16;
parameter    ap_ST_fsm_state7 = 11'd32;
parameter    ap_ST_fsm_pp2_stage0 = 11'd64;
parameter    ap_ST_fsm_state10 = 11'd128;
parameter    ap_ST_fsm_state11 = 11'd256;
parameter    ap_ST_fsm_pp3_stage0 = 11'd512;
parameter    ap_ST_fsm_state17 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] gaussian_mat_4209_dout;
input   gaussian_mat_4209_empty_n;
output   gaussian_mat_4209_read;
output  [15:0] gradx_mat_4210_din;
input   gradx_mat_4210_full_n;
output   gradx_mat_4210_write;
output  [15:0] grady_mat_4213_din;
input   grady_mat_4213_full_n;
output   grady_mat_4213_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg gaussian_mat_4209_read;
reg gradx_mat_4210_write;
reg grady_mat_4213_write;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gaussian_mat_4209_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln878_5_reg_1070;
reg   [0:0] and_ln203_reg_1081;
reg    gradx_mat_4210_blk_n;
reg    ap_enable_reg_pp3_iter4;
reg   [0:0] icmp_ln878_5_reg_1070_pp3_iter3_reg;
reg   [0:0] icmp_ln882_reg_1103;
reg   [0:0] icmp_ln882_reg_1103_pp3_iter3_reg;
reg    grady_mat_4213_blk_n;
reg   [10:0] col_V_reg_275;
reg   [10:0] col_V_4_reg_287;
reg   [10:0] col_V_7_reg_343;
reg   [10:0] col_V_7_reg_343_pp3_iter1_reg;
wire    ap_block_state12_pp3_stage0_iter0;
reg    ap_predicate_op134_read_state13;
reg    ap_block_state13_pp3_stage0_iter1;
wire    ap_block_state14_pp3_stage0_iter2;
wire    ap_block_state15_pp3_stage0_iter3;
reg    ap_predicate_op211_write_state16;
reg    ap_predicate_op212_write_state16;
reg    ap_block_state16_pp3_stage0_iter4;
reg    ap_block_pp3_stage0_11001;
reg   [7:0] src_buf_V_2_0_reg_355;
reg   [7:0] src_buf_V_2_0_0_reg_366;
reg   [7:0] src_buf_V_1_2_3_reg_377;
reg   [7:0] src_buf_V_1_0_0_reg_388;
reg   [7:0] src_buf_V_0_2_3_reg_399;
reg   [7:0] src_buf_V_0_0_0_reg_410;
reg   [7:0] src_buf_V_1_0_1_reg_421;
reg   [7:0] src_buf_V_0_0_11_reg_433;
reg   [7:0] storemerge_reg_445;
wire   [1:0] init_row_ind_fu_457_p2;
wire    ap_CS_fsm_state2;
reg   [12:0] row_ind_V_0_0_load_reg_953;
reg   [12:0] row_ind_V_1_0_load_reg_958;
reg   [12:0] row_ind_V_2_0_load_reg_965;
wire   [63:0] zext_ln534_fu_497_p1;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln456_fu_500_p1;
reg   [63:0] zext_ln456_reg_979;
wire   [0:0] icmp_ln878_2_fu_503_p2;
wire    ap_CS_fsm_state4;
wire   [1:0] trunc_ln466_fu_508_p1;
reg   [1:0] trunc_ln466_reg_988;
wire   [1:0] trunc_ln480_fu_512_p1;
reg   [1:0] trunc_ln480_reg_992;
wire   [10:0] col_V_6_fu_515_p2;
reg   [10:0] col_V_6_reg_997;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state5_pp1_stage0_iter0;
reg    ap_block_state6_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln878_3_fu_521_p2;
reg   [0:0] icmp_ln878_3_reg_1002;
wire   [63:0] add_ln456_fu_534_p2;
wire    ap_CS_fsm_state7;
wire   [10:0] col_V_5_fu_540_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state9_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln878_4_fu_546_p2;
reg   [0:0] icmp_ln878_4_reg_1016;
reg   [10:0] buf_V_0_addr_reg_1020;
wire   [0:0] icmp_ln485_fu_571_p2;
wire    ap_CS_fsm_state11;
wire   [0:0] cmp_i_i283_i_fu_577_p2;
reg   [0:0] cmp_i_i283_i_reg_1040;
wire   [1:0] sub_i210_i_fu_603_p2;
reg   [1:0] sub_i210_i_reg_1045;
wire   [0:0] spec_select54_fu_615_p2;
reg   [0:0] spec_select54_reg_1050;
wire   [1:0] trunc_ln343_fu_621_p1;
reg   [1:0] trunc_ln343_reg_1055;
wire   [1:0] trunc_ln343_1_fu_625_p1;
reg   [1:0] trunc_ln343_1_reg_1060;
wire   [10:0] col_V_8_fu_629_p2;
reg   [10:0] col_V_8_reg_1065;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln878_5_fu_635_p2;
reg   [0:0] icmp_ln878_5_reg_1070_pp3_iter1_reg;
reg   [0:0] icmp_ln878_5_reg_1070_pp3_iter2_reg;
wire   [0:0] icmp_ln878_6_fu_641_p2;
reg   [0:0] icmp_ln878_6_reg_1074;
reg   [0:0] icmp_ln878_6_reg_1074_pp3_iter1_reg;
reg   [0:0] icmp_ln878_6_reg_1074_pp3_iter2_reg;
wire   [0:0] and_ln203_fu_647_p2;
wire   [0:0] icmp_ln882_fu_670_p2;
wire   [7:0] src_buf_V_1_1_fu_748_p3;
reg   [7:0] src_buf_V_1_1_reg_1107;
reg    ap_enable_reg_pp3_iter3;
wire   [7:0] src_buf_V_0_1_fu_756_p3;
reg   [7:0] src_buf_V_0_1_reg_1112;
wire   [7:0] src_buf_V_2_0_2_fu_764_p3;
reg   [7:0] src_buf_V_2_0_2_reg_1117;
wire   [8:0] ret_fu_804_p2;
reg   [8:0] ret_reg_1122;
wire   [8:0] ret_1_fu_818_p2;
reg   [8:0] ret_1_reg_1127;
wire   [9:0] g_x_V_3_fu_824_p2;
reg   [9:0] g_x_V_3_reg_1132;
wire   [8:0] r_2_fu_830_p3;
reg   [8:0] r_2_reg_1137;
wire   [8:0] r_3_fu_838_p3;
reg   [8:0] r_3_reg_1142;
wire   [9:0] g_y_V_3_fu_866_p2;
reg   [9:0] g_y_V_3_reg_1147;
wire   [9:0] row_V_2_fu_924_p2;
wire    ap_CS_fsm_state17;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
reg    ap_enable_reg_pp2_iter1;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_flush_enable;
reg    ap_enable_reg_pp3_iter2;
reg    ap_condition_pp3_exit_iter3_state15;
reg   [10:0] buf_V_0_address0;
reg    buf_V_0_ce0;
wire   [7:0] buf_V_0_q0;
reg   [10:0] buf_V_0_address1;
reg    buf_V_0_ce1;
reg    buf_V_0_we1;
reg   [7:0] buf_V_0_d1;
reg   [10:0] buf_V_1_address0;
reg    buf_V_1_ce0;
wire   [7:0] buf_V_1_q0;
reg   [10:0] buf_V_1_address1;
reg    buf_V_1_ce1;
reg    buf_V_1_we1;
reg   [10:0] buf_V_2_address0;
reg    buf_V_2_ce0;
wire   [7:0] buf_V_2_q0;
reg   [10:0] buf_V_2_address1;
reg    buf_V_2_ce1;
reg    buf_V_2_we1;
wire   [1:0] ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4;
reg   [1:0] row_ind_V_0_2_reg_254;
wire   [0:0] icmp_ln878_fu_472_p2;
reg   [63:0] init_buf_reg_265;
reg   [10:0] ap_phi_mux_col_V_phi_fu_279_p4;
reg   [12:0] row_ind_V_2_reg_319;
reg   [12:0] row_ind_V_1_1_reg_298;
wire    ap_CS_fsm_state10;
reg   [12:0] row_ind_V_0_reg_308;
reg   [9:0] row_V_reg_331;
reg   [10:0] ap_phi_mux_col_V_7_phi_fu_347_p4;
reg   [7:0] ap_phi_mux_src_buf_V_2_0_phi_fu_359_p4;
reg   [7:0] ap_phi_mux_src_buf_V_2_0_0_phi_fu_370_p4;
reg   [7:0] ap_phi_mux_src_buf_V_1_2_3_phi_fu_381_p4;
reg   [7:0] ap_phi_mux_src_buf_V_1_0_0_phi_fu_392_p4;
reg   [7:0] ap_phi_mux_src_buf_V_0_2_3_phi_fu_403_p4;
reg   [7:0] ap_phi_mux_src_buf_V_0_0_0_phi_fu_414_p4;
wire   [7:0] ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_421;
wire   [7:0] ap_phi_reg_pp3_iter3_src_buf_V_0_0_11_reg_433;
wire   [7:0] ap_phi_reg_pp3_iter3_storemerge_reg_445;
wire   [63:0] zext_ln534_3_fu_527_p1;
wire   [63:0] conv_i90_fu_552_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln534_4_fu_652_p1;
wire   [63:0] conv_i152_i_fu_663_p1;
reg   [12:0] row_ind_V_0_0_fu_96;
wire   [12:0] zext_ln301_fu_478_p1;
reg   [12:0] row_ind_V_1_0_fu_100;
reg   [12:0] row_ind_V_2_0_fu_104;
reg    ap_block_pp3_stage0_01001;
wire   [1:0] trunc_ln456_fu_659_p1;
wire   [7:0] tmp_fu_559_p5;
wire   [10:0] row_V_cast_fu_589_p1;
wire   [1:0] empty_fu_593_p1;
wire   [10:0] sub_i_i227_i_fu_597_p2;
wire   [0:0] cmp_i_i253_i_fu_583_p2;
wire   [0:0] cmp_i_i198_i_2_fu_609_p2;
wire   [12:0] tmp_s_fu_698_p5;
wire   [1:0] tmp_1_fu_713_p4;
wire   [1:0] tmp_2_fu_729_p4;
wire   [7:0] tmp_1_fu_713_p5;
wire   [7:0] tmp_2_fu_729_p5;
wire   [7:0] src_buf_V_1_2_fu_687_p5;
wire   [7:0] src_buf_V_0_2_fu_676_p5;
wire   [7:0] arrayidx261_i534_load_0_2_fu_741_p3;
wire   [8:0] r_fu_772_p3;
wire   [8:0] r_1_fu_784_p3;
wire   [8:0] zext_ln1346_1_fu_800_p1;
wire   [8:0] zext_ln1346_fu_796_p1;
wire   [8:0] zext_ln1346_3_fu_814_p1;
wire   [8:0] zext_ln1346_2_fu_810_p1;
wire   [9:0] zext_ln1497_1_fu_792_p1;
wire   [9:0] zext_ln1497_fu_780_p1;
wire   [8:0] ret_2_fu_846_p2;
wire   [8:0] ret_3_fu_852_p2;
wire   [9:0] zext_ln121_fu_858_p1;
wire   [9:0] zext_ln69_1_fu_862_p1;
wire  signed [10:0] sext_ln69_fu_878_p1;
wire   [10:0] zext_ln100_fu_872_p1;
wire   [10:0] g_x_V_4_fu_881_p2;
wire   [10:0] zext_ln69_fu_875_p1;
wire   [10:0] g_x_V_fu_887_p2;
wire  signed [10:0] sext_ln69_1_fu_904_p1;
wire   [10:0] zext_ln1497_2_fu_898_p1;
wire   [10:0] g_y_V_4_fu_907_p2;
wire   [10:0] zext_ln1497_3_fu_901_p1;
wire   [10:0] g_y_V_fu_913_p2;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
end

edge_canny_detector_xFAverageGaussianMask3x3_0_0_720_1280_0_1_1_1280_s_buf_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_0_address0),
    .ce0(buf_V_0_ce0),
    .q0(buf_V_0_q0),
    .address1(buf_V_0_address1),
    .ce1(buf_V_0_ce1),
    .we1(buf_V_0_we1),
    .d1(buf_V_0_d1)
);

edge_canny_detector_xFAverageGaussianMask3x3_0_0_720_1280_0_1_1_1280_s_buf_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_address0),
    .ce0(buf_V_1_ce0),
    .q0(buf_V_1_q0),
    .address1(buf_V_1_address1),
    .ce1(buf_V_1_ce1),
    .we1(buf_V_1_we1),
    .d1(gaussian_mat_4209_dout)
);

edge_canny_detector_xFAverageGaussianMask3x3_0_0_720_1280_0_1_1_1280_s_buf_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_address0),
    .ce0(buf_V_2_ce0),
    .q0(buf_V_2_q0),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .we1(buf_V_2_we1),
    .d1(gaussian_mat_4209_dout)
);

edge_canny_detector_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U36(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln480_reg_992),
    .dout(tmp_fu_559_p5)
);

edge_canny_detector_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U37(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln343_reg_1055),
    .dout(src_buf_V_0_2_fu_676_p5)
);

edge_canny_detector_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U38(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln343_1_reg_1060),
    .dout(src_buf_V_1_2_fu_687_p5)
);

edge_canny_detector_mux_32_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 13 ))
mux_32_13_1_1_U39(
    .din0(row_ind_V_2_reg_319),
    .din1(row_ind_V_0_reg_308),
    .din2(row_ind_V_1_1_reg_298),
    .din3(sub_i210_i_reg_1045),
    .dout(tmp_s_fu_698_p5)
);

edge_canny_detector_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U40(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(tmp_1_fu_713_p4),
    .dout(tmp_1_fu_713_p5)
);

edge_canny_detector_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U41(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(tmp_2_fu_729_p4),
    .dout(tmp_2_fu_729_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_2_fu_503_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_2_fu_503_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_2_fu_503_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_2_fu_503_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp3_flush_enable)) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((icmp_ln485_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b0) & (1'b1 == ap_condition_pp3_exit_iter3_state15)) | ((icmp_ln485_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
            ap_enable_reg_pp3_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter3_state15))) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter2;
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if (((icmp_ln485_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_2_fu_503_p2 == 1'd0))) begin
        col_V_4_reg_287 <= 11'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln878_4_fu_546_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        col_V_4_reg_287 <= col_V_5_fu_540_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_5_reg_1070 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_7_reg_343 <= col_V_8_reg_1065;
    end else if (((icmp_ln485_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        col_V_7_reg_343 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln878_3_reg_1002 == 1'd0))) begin
        col_V_reg_275 <= col_V_6_reg_997;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_2_fu_503_p2 == 1'd1))) begin
        col_V_reg_275 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        init_buf_reg_265 <= zext_ln534_fu_497_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        init_buf_reg_265 <= add_ln456_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        row_V_reg_331 <= 10'd1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        row_V_reg_331 <= row_V_2_fu_924_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_472_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_0_2_reg_254 <= init_row_ind_fu_457_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        row_ind_V_0_2_reg_254 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        row_ind_V_0_reg_308 <= row_ind_V_1_0_load_reg_958;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        row_ind_V_0_reg_308 <= row_ind_V_1_1_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        row_ind_V_1_1_reg_298 <= row_ind_V_2_0_load_reg_965;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        row_ind_V_1_1_reg_298 <= row_ind_V_2_reg_319;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        row_ind_V_2_reg_319 <= row_ind_V_0_0_load_reg_953;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        row_ind_V_2_reg_319 <= row_ind_V_0_reg_308;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        src_buf_V_0_0_0_reg_410 <= src_buf_V_0_0_11_reg_433;
    end else if (((icmp_ln485_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        src_buf_V_0_0_0_reg_410 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        if (((icmp_ln882_reg_1103 == 1'd1) & (icmp_ln878_5_reg_1070_pp3_iter2_reg == 1'd0))) begin
            src_buf_V_0_0_11_reg_433 <= src_buf_V_0_1_fu_756_p3;
        end else if (((icmp_ln882_reg_1103 == 1'd0) & (icmp_ln878_5_reg_1070_pp3_iter2_reg == 1'd0))) begin
            src_buf_V_0_0_11_reg_433 <= ap_phi_mux_src_buf_V_0_2_3_phi_fu_403_p4;
        end else if ((1'b1 == 1'b1)) begin
            src_buf_V_0_0_11_reg_433 <= ap_phi_reg_pp3_iter3_src_buf_V_0_0_11_reg_433;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        src_buf_V_0_2_3_reg_399 <= src_buf_V_0_1_reg_1112;
    end else if (((icmp_ln485_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        src_buf_V_0_2_3_reg_399 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        src_buf_V_1_0_0_reg_388 <= src_buf_V_1_0_1_reg_421;
    end else if (((icmp_ln485_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        src_buf_V_1_0_0_reg_388 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        if (((icmp_ln882_reg_1103 == 1'd1) & (icmp_ln878_5_reg_1070_pp3_iter2_reg == 1'd0))) begin
            src_buf_V_1_0_1_reg_421 <= src_buf_V_1_1_fu_748_p3;
        end else if (((icmp_ln882_reg_1103 == 1'd0) & (icmp_ln878_5_reg_1070_pp3_iter2_reg == 1'd0))) begin
            src_buf_V_1_0_1_reg_421 <= ap_phi_mux_src_buf_V_1_2_3_phi_fu_381_p4;
        end else if ((1'b1 == 1'b1)) begin
            src_buf_V_1_0_1_reg_421 <= ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_421;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        src_buf_V_1_2_3_reg_377 <= src_buf_V_1_1_reg_1107;
    end else if (((icmp_ln485_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        src_buf_V_1_2_3_reg_377 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        src_buf_V_2_0_0_reg_366 <= storemerge_reg_445;
    end else if (((icmp_ln485_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        src_buf_V_2_0_0_reg_366 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        src_buf_V_2_0_reg_355 <= src_buf_V_2_0_2_reg_1117;
    end else if (((icmp_ln485_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        src_buf_V_2_0_reg_355 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        if (((icmp_ln882_reg_1103 == 1'd1) & (icmp_ln878_5_reg_1070_pp3_iter2_reg == 1'd0))) begin
            storemerge_reg_445 <= src_buf_V_2_0_2_fu_764_p3;
        end else if (((icmp_ln882_reg_1103 == 1'd0) & (icmp_ln878_5_reg_1070_pp3_iter2_reg == 1'd0))) begin
            storemerge_reg_445 <= ap_phi_mux_src_buf_V_2_0_phi_fu_359_p4;
        end else if ((1'b1 == 1'b1)) begin
            storemerge_reg_445 <= ap_phi_reg_pp3_iter3_storemerge_reg_445;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_5_fu_635_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        and_ln203_reg_1081 <= and_ln203_fu_647_p2;
        icmp_ln878_6_reg_1074 <= icmp_ln878_6_fu_641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln878_4_fu_546_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_0_addr_reg_1020 <= conv_i90_fu_552_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln485_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        cmp_i_i283_i_reg_1040 <= cmp_i_i283_i_fu_577_p2;
        spec_select54_reg_1050 <= spec_select54_fu_615_p2;
        sub_i210_i_reg_1045 <= sub_i210_i_fu_603_p2;
        trunc_ln343_1_reg_1060 <= trunc_ln343_1_fu_625_p1;
        trunc_ln343_reg_1055 <= trunc_ln343_fu_621_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        col_V_6_reg_997 <= col_V_6_fu_515_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_7_reg_343_pp3_iter1_reg <= col_V_7_reg_343;
        icmp_ln878_5_reg_1070 <= icmp_ln878_5_fu_635_p2;
        icmp_ln878_5_reg_1070_pp3_iter1_reg <= icmp_ln878_5_reg_1070;
        icmp_ln878_6_reg_1074_pp3_iter1_reg <= icmp_ln878_6_reg_1074;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_8_reg_1065 <= col_V_8_fu_629_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_5_reg_1070_pp3_iter2_reg == 1'd0))) begin
        g_x_V_3_reg_1132[9 : 1] <= g_x_V_3_fu_824_p2[9 : 1];
        g_y_V_3_reg_1147 <= g_y_V_3_fu_866_p2;
        r_2_reg_1137[8 : 1] <= r_2_fu_830_p3[8 : 1];
        r_3_reg_1142[8 : 1] <= r_3_fu_838_p3[8 : 1];
        ret_1_reg_1127 <= ret_1_fu_818_p2;
        ret_reg_1122 <= ret_fu_804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln878_3_reg_1002 <= icmp_ln878_3_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln878_4_reg_1016 <= icmp_ln878_4_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln878_5_reg_1070_pp3_iter2_reg <= icmp_ln878_5_reg_1070_pp3_iter1_reg;
        icmp_ln878_5_reg_1070_pp3_iter3_reg <= icmp_ln878_5_reg_1070_pp3_iter2_reg;
        icmp_ln878_6_reg_1074_pp3_iter2_reg <= icmp_ln878_6_reg_1074_pp3_iter1_reg;
        icmp_ln882_reg_1103_pp3_iter3_reg <= icmp_ln882_reg_1103;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_5_reg_1070_pp3_iter1_reg == 1'd0))) begin
        icmp_ln882_reg_1103 <= icmp_ln882_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_472_p2 == 1'd0) & (ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_0_0_fu_96[1 : 0] <= zext_ln301_fu_478_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_ind_V_0_0_load_reg_953[1 : 0] <= row_ind_V_0_0_fu_96[1 : 0];
        row_ind_V_1_0_load_reg_958[1 : 0] <= row_ind_V_1_0_fu_100[1 : 0];
        row_ind_V_2_0_load_reg_965[1 : 0] <= row_ind_V_2_0_fu_104[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_472_p2 == 1'd0) & (ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_1_0_fu_100[1 : 0] <= zext_ln301_fu_478_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 == 2'd1) & ~(ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 == 2'd0) & (icmp_ln878_fu_472_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_2_0_fu_104[1 : 0] <= zext_ln301_fu_478_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln878_5_reg_1070_pp3_iter2_reg == 1'd0))) begin
        src_buf_V_0_1_reg_1112 <= src_buf_V_0_1_fu_756_p3;
        src_buf_V_1_1_reg_1107 <= src_buf_V_1_1_fu_748_p3;
        src_buf_V_2_0_2_reg_1117 <= src_buf_V_2_0_2_fu_764_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_2_fu_503_p2 == 1'd1))) begin
        trunc_ln466_reg_988 <= trunc_ln466_fu_508_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_2_fu_503_p2 == 1'd0))) begin
        trunc_ln480_reg_992 <= trunc_ln480_fu_512_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln456_reg_979[1 : 0] <= zext_ln456_fu_500_p1[1 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln878_3_fu_521_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln878_4_fu_546_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        ap_condition_pp3_exit_iter3_state15 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter3_state15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln878_5_fu_635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_condition_pp3_flush_enable = 1'b1;
    end else begin
        ap_condition_pp3_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln485_fu_571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_5_reg_1070 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_col_V_7_phi_fu_347_p4 = col_V_8_reg_1065;
    end else begin
        ap_phi_mux_col_V_7_phi_fu_347_p4 = col_V_7_reg_343;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln878_3_reg_1002 == 1'd0))) begin
        ap_phi_mux_col_V_phi_fu_279_p4 = col_V_6_reg_997;
    end else begin
        ap_phi_mux_col_V_phi_fu_279_p4 = col_V_reg_275;
    end
end

always @ (*) begin
    if (((icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_src_buf_V_0_0_0_phi_fu_414_p4 = src_buf_V_0_0_11_reg_433;
    end else begin
        ap_phi_mux_src_buf_V_0_0_0_phi_fu_414_p4 = src_buf_V_0_0_0_reg_410;
    end
end

always @ (*) begin
    if (((icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_src_buf_V_0_2_3_phi_fu_403_p4 = src_buf_V_0_1_reg_1112;
    end else begin
        ap_phi_mux_src_buf_V_0_2_3_phi_fu_403_p4 = src_buf_V_0_2_3_reg_399;
    end
end

always @ (*) begin
    if (((icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_src_buf_V_1_0_0_phi_fu_392_p4 = src_buf_V_1_0_1_reg_421;
    end else begin
        ap_phi_mux_src_buf_V_1_0_0_phi_fu_392_p4 = src_buf_V_1_0_0_reg_388;
    end
end

always @ (*) begin
    if (((icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_src_buf_V_1_2_3_phi_fu_381_p4 = src_buf_V_1_1_reg_1107;
    end else begin
        ap_phi_mux_src_buf_V_1_2_3_phi_fu_381_p4 = src_buf_V_1_2_3_reg_377;
    end
end

always @ (*) begin
    if (((icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_src_buf_V_2_0_0_phi_fu_370_p4 = storemerge_reg_445;
    end else begin
        ap_phi_mux_src_buf_V_2_0_0_phi_fu_370_p4 = src_buf_V_2_0_0_reg_366;
    end
end

always @ (*) begin
    if (((icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_src_buf_V_2_0_phi_fu_359_p4 = src_buf_V_2_0_2_reg_1117;
    end else begin
        ap_phi_mux_src_buf_V_2_0_phi_fu_359_p4 = src_buf_V_2_0_reg_355;
    end
end

always @ (*) begin
    if (((icmp_ln485_fu_571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_V_0_address0 = conv_i152_i_fu_663_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_0_address0 = conv_i90_fu_552_p1;
    end else begin
        buf_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_V_0_address1 = zext_ln534_4_fu_652_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_0_address1 = buf_V_0_addr_reg_1020;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_0_address1 = zext_ln534_3_fu_527_p1;
    end else begin
        buf_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        buf_V_0_ce0 = 1'b1;
    end else begin
        buf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_0_ce1 = 1'b1;
    end else begin
        buf_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_0_d1 = tmp_fu_559_p5;
    end else if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_0_d1 = gaussian_mat_4209_dout;
    end else begin
        buf_V_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln203_reg_1081) & (icmp_ln878_5_reg_1070 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln456_fu_659_p1 == 2'd0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln878_4_reg_1016 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln466_reg_988 == 2'd0)))) begin
        buf_V_0_we1 = 1'b1;
    end else begin
        buf_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_V_1_address0 = conv_i152_i_fu_663_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_1_address0 = conv_i90_fu_552_p1;
    end else begin
        buf_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_V_1_address1 = zext_ln534_4_fu_652_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_1_address1 = zext_ln534_3_fu_527_p1;
    end else begin
        buf_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln203_reg_1081) & (icmp_ln878_5_reg_1070 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (trunc_ln456_fu_659_p1 == 2'd1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (trunc_ln466_reg_988 == 2'd1)))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_V_2_address0 = conv_i152_i_fu_663_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_2_address0 = conv_i90_fu_552_p1;
    end else begin
        buf_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_V_2_address1 = zext_ln534_4_fu_652_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_2_address1 = zext_ln534_3_fu_527_p1;
    end else begin
        buf_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln456_fu_659_p1 == 2'd0) & ~(trunc_ln456_fu_659_p1 == 2'd1) & (1'd1 == and_ln203_reg_1081) & (icmp_ln878_5_reg_1070 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~(trunc_ln466_reg_988 == 2'd0) & ~(trunc_ln466_reg_988 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln203_reg_1081) & (icmp_ln878_5_reg_1070 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        gaussian_mat_4209_blk_n = gaussian_mat_4209_empty_n;
    end else begin
        gaussian_mat_4209_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_predicate_op134_read_state13 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        gaussian_mat_4209_read = 1'b1;
    end else begin
        gaussian_mat_4209_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln882_reg_1103_pp3_iter3_reg == 1'd0) & (icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        gradx_mat_4210_blk_n = gradx_mat_4210_full_n;
    end else begin
        gradx_mat_4210_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_predicate_op211_write_state16 == 1'b1))) begin
        gradx_mat_4210_write = 1'b1;
    end else begin
        gradx_mat_4210_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln882_reg_1103_pp3_iter3_reg == 1'd0) & (icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grady_mat_4213_blk_n = grady_mat_4213_full_n;
    end else begin
        grady_mat_4213_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_predicate_op212_write_state16 == 1'b1))) begin
        grady_mat_4213_write = 1'b1;
    end else begin
        grady_mat_4213_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln878_fu_472_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_2_fu_503_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln878_3_fu_521_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln878_3_fu_521_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln878_4_fu_546_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln878_4_fu_546_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln485_fu_571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln456_fu_534_p2 = (init_buf_reg_265 + 64'd1);

assign and_ln203_fu_647_p2 = (icmp_ln878_6_fu_641_p2 & cmp_i_i283_i_reg_1040);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (gaussian_mat_4209_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & (gaussian_mat_4209_empty_n == 1'b0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = (((ap_enable_reg_pp3_iter4 == 1'b1) & (((grady_mat_4213_full_n == 1'b0) & (ap_predicate_op212_write_state16 == 1'b1)) | ((gradx_mat_4210_full_n == 1'b0) & (ap_predicate_op211_write_state16 == 1'b1)))) | ((ap_predicate_op134_read_state13 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (gaussian_mat_4209_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((ap_enable_reg_pp3_iter4 == 1'b1) & (((grady_mat_4213_full_n == 1'b0) & (ap_predicate_op212_write_state16 == 1'b1)) | ((gradx_mat_4210_full_n == 1'b0) & (ap_predicate_op211_write_state16 == 1'b1)))) | ((ap_predicate_op134_read_state13 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (gaussian_mat_4209_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((ap_enable_reg_pp3_iter4 == 1'b1) & (((grady_mat_4213_full_n == 1'b0) & (ap_predicate_op212_write_state16 == 1'b1)) | ((gradx_mat_4210_full_n == 1'b0) & (ap_predicate_op211_write_state16 == 1'b1)))) | ((ap_predicate_op134_read_state13 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (gaussian_mat_4209_empty_n == 1'b0)));
end

assign ap_block_state12_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp3_stage0_iter1 = ((ap_predicate_op134_read_state13 == 1'b1) & (gaussian_mat_4209_empty_n == 1'b0));
end

assign ap_block_state14_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp3_stage0_iter4 = (((grady_mat_4213_full_n == 1'b0) & (ap_predicate_op212_write_state16 == 1'b1)) | ((gradx_mat_4210_full_n == 1'b0) & (ap_predicate_op211_write_state16 == 1'b1)));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp1_stage0_iter1 = (gaussian_mat_4209_empty_n == 1'b0);
end

assign ap_block_state8_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_mux_row_ind_V_0_2_phi_fu_258_p4 = row_ind_V_0_2_reg_254;

assign ap_phi_reg_pp3_iter3_src_buf_V_0_0_11_reg_433 = 'bx;

assign ap_phi_reg_pp3_iter3_src_buf_V_1_0_1_reg_421 = 'bx;

assign ap_phi_reg_pp3_iter3_storemerge_reg_445 = 'bx;

always @ (*) begin
    ap_predicate_op134_read_state13 = ((1'd1 == and_ln203_reg_1081) & (icmp_ln878_5_reg_1070 == 1'd0));
end

always @ (*) begin
    ap_predicate_op211_write_state16 = ((icmp_ln882_reg_1103_pp3_iter3_reg == 1'd0) & (icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op212_write_state16 = ((icmp_ln882_reg_1103_pp3_iter3_reg == 1'd0) & (icmp_ln878_5_reg_1070_pp3_iter3_reg == 1'd0));
end

assign arrayidx261_i534_load_0_2_fu_741_p3 = ((spec_select54_reg_1050[0:0] == 1'b1) ? tmp_1_fu_713_p5 : tmp_2_fu_729_p5);

assign cmp_i_i198_i_2_fu_609_p2 = (($signed(sub_i_i227_i_fu_597_p2) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign cmp_i_i253_i_fu_583_p2 = ((row_V_reg_331 > 10'd719) ? 1'b1 : 1'b0);

assign cmp_i_i283_i_fu_577_p2 = ((row_V_reg_331 < 10'd720) ? 1'b1 : 1'b0);

assign col_V_5_fu_540_p2 = (col_V_4_reg_287 + 11'd1);

assign col_V_6_fu_515_p2 = (ap_phi_mux_col_V_phi_fu_279_p4 + 11'd1);

assign col_V_8_fu_629_p2 = (ap_phi_mux_col_V_7_phi_fu_347_p4 + 11'd1);

assign conv_i152_i_fu_663_p1 = col_V_7_reg_343_pp3_iter1_reg;

assign conv_i90_fu_552_p1 = col_V_4_reg_287;

assign empty_fu_593_p1 = row_V_reg_331[1:0];

assign g_x_V_3_fu_824_p2 = (zext_ln1497_1_fu_792_p1 - zext_ln1497_fu_780_p1);

assign g_x_V_4_fu_881_p2 = ($signed(sext_ln69_fu_878_p1) + $signed(zext_ln100_fu_872_p1));

assign g_x_V_fu_887_p2 = (g_x_V_4_fu_881_p2 - zext_ln69_fu_875_p1);

assign g_y_V_3_fu_866_p2 = (zext_ln121_fu_858_p1 - zext_ln69_1_fu_862_p1);

assign g_y_V_4_fu_907_p2 = ($signed(sext_ln69_1_fu_904_p1) - $signed(zext_ln1497_2_fu_898_p1));

assign g_y_V_fu_913_p2 = (g_y_V_4_fu_907_p2 + zext_ln1497_3_fu_901_p1);

assign gradx_mat_4210_din = $signed(g_x_V_fu_887_p2);

assign grady_mat_4213_din = $signed(g_y_V_fu_913_p2);

assign icmp_ln485_fu_571_p2 = ((row_V_reg_331 == 10'd721) ? 1'b1 : 1'b0);

assign icmp_ln878_2_fu_503_p2 = (($signed(init_buf_reg_265) < $signed(zext_ln456_reg_979)) ? 1'b1 : 1'b0);

assign icmp_ln878_3_fu_521_p2 = ((ap_phi_mux_col_V_phi_fu_279_p4 == 11'd1280) ? 1'b1 : 1'b0);

assign icmp_ln878_4_fu_546_p2 = ((col_V_4_reg_287 == 11'd1280) ? 1'b1 : 1'b0);

assign icmp_ln878_5_fu_635_p2 = ((ap_phi_mux_col_V_7_phi_fu_347_p4 == 11'd1281) ? 1'b1 : 1'b0);

assign icmp_ln878_6_fu_641_p2 = ((ap_phi_mux_col_V_7_phi_fu_347_p4 < 11'd1280) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_472_p2 = ((row_ind_V_0_2_reg_254 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln882_fu_670_p2 = ((col_V_7_reg_343_pp3_iter1_reg == 11'd0) ? 1'b1 : 1'b0);

assign init_row_ind_fu_457_p2 = (row_ind_V_0_2_reg_254 + 2'd1);

assign r_1_fu_784_p3 = {{src_buf_V_1_1_fu_748_p3}, {1'd0}};

assign r_2_fu_830_p3 = {{ap_phi_mux_src_buf_V_0_2_3_phi_fu_403_p4}, {1'd0}};

assign r_3_fu_838_p3 = {{ap_phi_mux_src_buf_V_2_0_phi_fu_359_p4}, {1'd0}};

assign r_fu_772_p3 = {{ap_phi_mux_src_buf_V_1_0_0_phi_fu_392_p4}, {1'd0}};

assign ret_1_fu_818_p2 = (zext_ln1346_3_fu_814_p1 + zext_ln1346_2_fu_810_p1);

assign ret_2_fu_846_p2 = (zext_ln1346_3_fu_814_p1 + zext_ln1346_1_fu_800_p1);

assign ret_3_fu_852_p2 = (zext_ln1346_2_fu_810_p1 + zext_ln1346_fu_796_p1);

assign ret_fu_804_p2 = (zext_ln1346_1_fu_800_p1 + zext_ln1346_fu_796_p1);

assign row_V_2_fu_924_p2 = (row_V_reg_331 + 10'd1);

assign row_V_cast_fu_589_p1 = row_V_reg_331;

assign sext_ln69_1_fu_904_p1 = $signed(g_y_V_3_reg_1147);

assign sext_ln69_fu_878_p1 = $signed(g_x_V_3_reg_1132);

assign spec_select54_fu_615_p2 = (cmp_i_i253_i_fu_583_p2 & cmp_i_i198_i_2_fu_609_p2);

assign src_buf_V_0_1_fu_756_p3 = ((icmp_ln878_6_reg_1074_pp3_iter2_reg[0:0] == 1'b1) ? src_buf_V_0_2_fu_676_p5 : ap_phi_mux_src_buf_V_0_2_3_phi_fu_403_p4);

assign src_buf_V_1_1_fu_748_p3 = ((icmp_ln878_6_reg_1074_pp3_iter2_reg[0:0] == 1'b1) ? src_buf_V_1_2_fu_687_p5 : ap_phi_mux_src_buf_V_1_2_3_phi_fu_381_p4);

assign src_buf_V_2_0_2_fu_764_p3 = ((icmp_ln878_6_reg_1074_pp3_iter2_reg[0:0] == 1'b1) ? arrayidx261_i534_load_0_2_fu_741_p3 : ap_phi_mux_src_buf_V_2_0_phi_fu_359_p4);

assign sub_i210_i_fu_603_p2 = (2'd1 - empty_fu_593_p1);

assign sub_i_i227_i_fu_597_p2 = ($signed(row_V_cast_fu_589_p1) + $signed(11'd1329));

assign tmp_1_fu_713_p4 = tmp_s_fu_698_p5[1:0];

assign tmp_2_fu_729_p4 = row_ind_V_1_1_reg_298[1:0];

assign trunc_ln343_1_fu_625_p1 = row_ind_V_0_reg_308[1:0];

assign trunc_ln343_fu_621_p1 = row_ind_V_2_reg_319[1:0];

assign trunc_ln456_fu_659_p1 = row_ind_V_1_1_reg_298[1:0];

assign trunc_ln466_fu_508_p1 = init_buf_reg_265[1:0];

assign trunc_ln480_fu_512_p1 = row_ind_V_1_0_load_reg_958[1:0];

assign zext_ln100_fu_872_p1 = ret_reg_1122;

assign zext_ln121_fu_858_p1 = ret_2_fu_846_p2;

assign zext_ln1346_1_fu_800_p1 = src_buf_V_2_0_2_fu_764_p3;

assign zext_ln1346_2_fu_810_p1 = ap_phi_mux_src_buf_V_0_0_0_phi_fu_414_p4;

assign zext_ln1346_3_fu_814_p1 = ap_phi_mux_src_buf_V_2_0_0_phi_fu_370_p4;

assign zext_ln1346_fu_796_p1 = src_buf_V_0_1_fu_756_p3;

assign zext_ln1497_1_fu_792_p1 = r_1_fu_784_p3;

assign zext_ln1497_2_fu_898_p1 = r_2_reg_1137;

assign zext_ln1497_3_fu_901_p1 = r_3_reg_1142;

assign zext_ln1497_fu_780_p1 = r_fu_772_p3;

assign zext_ln301_fu_478_p1 = row_ind_V_0_2_reg_254;

assign zext_ln456_fu_500_p1 = row_ind_V_2_0_load_reg_965;

assign zext_ln534_3_fu_527_p1 = col_V_reg_275;

assign zext_ln534_4_fu_652_p1 = col_V_7_reg_343;

assign zext_ln534_fu_497_p1 = row_ind_V_1_0_load_reg_958;

assign zext_ln69_1_fu_862_p1 = ret_3_fu_852_p2;

assign zext_ln69_fu_875_p1 = ret_1_reg_1127;

always @ (posedge ap_clk) begin
    row_ind_V_0_0_load_reg_953[12:2] <= 11'b00000000000;
    row_ind_V_1_0_load_reg_958[12:2] <= 11'b00000000000;
    row_ind_V_2_0_load_reg_965[12:2] <= 11'b00000000000;
    zext_ln456_reg_979[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    g_x_V_3_reg_1132[0] <= 1'b0;
    r_2_reg_1137[0] <= 1'b0;
    r_3_reg_1142[0] <= 1'b0;
    row_ind_V_0_0_fu_96[12:2] <= 11'b00000000000;
    row_ind_V_1_0_fu_100[12:2] <= 11'b00000000000;
    row_ind_V_2_0_fu_104[12:2] <= 11'b00000000000;
end

endmodule //edge_canny_detector_xFSobel3x3_0_2_720_1280_0_3_1_1_5_1281_3_9_false_s
