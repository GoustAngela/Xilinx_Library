// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module edge_canny_detector_xFMagnitudeKernel_2_2_720_1280_3_3_1_5_5_1280_3840_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        gradx1_mat_4211_dout,
        gradx1_mat_4211_empty_n,
        gradx1_mat_4211_read,
        grady1_mat_4214_dout,
        grady1_mat_4214_empty_n,
        grady1_mat_4214_read,
        magnitude_mat_4216_din,
        magnitude_mat_4216_full_n,
        magnitude_mat_4216_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state17 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] gradx1_mat_4211_dout;
input   gradx1_mat_4211_empty_n;
output   gradx1_mat_4211_read;
input  [15:0] grady1_mat_4214_dout;
input   grady1_mat_4214_empty_n;
output   grady1_mat_4214_read;
output  [15:0] magnitude_mat_4216_din;
input   magnitude_mat_4216_full_n;
output   magnitude_mat_4216_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg gradx1_mat_4211_read;
reg grady1_mat_4214_read;
reg magnitude_mat_4216_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gradx1_mat_4211_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln79_reg_1806;
reg    grady1_mat_4214_blk_n;
reg    magnitude_mat_4216_blk_n;
reg    ap_enable_reg_pp0_iter13;
reg   [0:0] icmp_ln79_reg_1806_pp0_iter12_reg;
reg   [10:0] j_reg_280;
wire   [9:0] i_2_fu_291_p2;
reg   [9:0] i_2_reg_1792;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln72_fu_297_p2;
wire   [10:0] j_2_fu_303_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
reg    ap_block_state16_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln79_fu_309_p2;
reg   [0:0] icmp_ln79_reg_1806_pp0_iter1_reg;
reg   [0:0] icmp_ln79_reg_1806_pp0_iter2_reg;
reg   [0:0] icmp_ln79_reg_1806_pp0_iter3_reg;
reg   [0:0] icmp_ln79_reg_1806_pp0_iter4_reg;
reg   [0:0] icmp_ln79_reg_1806_pp0_iter5_reg;
reg   [0:0] icmp_ln79_reg_1806_pp0_iter6_reg;
reg   [0:0] icmp_ln79_reg_1806_pp0_iter7_reg;
reg   [0:0] icmp_ln79_reg_1806_pp0_iter8_reg;
reg   [0:0] icmp_ln79_reg_1806_pp0_iter9_reg;
reg   [0:0] icmp_ln79_reg_1806_pp0_iter10_reg;
reg   [0:0] icmp_ln79_reg_1806_pp0_iter11_reg;
wire   [15:0] p_1_fu_329_p3;
reg   [15:0] p_1_reg_1810;
reg   [15:0] p_1_reg_1810_pp0_iter2_reg;
wire   [15:0] q_1_fu_351_p3;
reg   [15:0] q_1_reg_1815;
wire  signed [31:0] sext_ln106_fu_359_p1;
wire  signed [31:0] sext_ln105_fu_362_p1;
wire  signed [31:0] grp_fu_1761_p2;
wire   [1:0] trunc_ln67_fu_365_p1;
reg   [1:0] trunc_ln67_reg_1837;
reg   [1:0] trunc_ln67_reg_1837_pp0_iter7_reg;
reg   [1:0] trunc_ln67_reg_1837_pp0_iter8_reg;
reg   [1:0] trunc_ln67_reg_1837_pp0_iter9_reg;
reg   [1:0] trunc_ln67_reg_1837_pp0_iter10_reg;
reg   [1:0] trunc_ln67_reg_1837_pp0_iter11_reg;
reg   [1:0] trunc_ln67_reg_1837_pp0_iter12_reg;
wire   [0:0] icmp_ln3471_fu_377_p2;
reg   [0:0] icmp_ln3471_reg_1842;
reg   [0:0] icmp_ln3471_reg_1842_pp0_iter7_reg;
reg   [0:0] icmp_ln3471_reg_1842_pp0_iter8_reg;
reg   [0:0] icmp_ln3471_reg_1842_pp0_iter9_reg;
reg   [0:0] icmp_ln3471_reg_1842_pp0_iter10_reg;
reg   [0:0] icmp_ln3471_reg_1842_pp0_iter11_reg;
reg   [0:0] icmp_ln3471_reg_1842_pp0_iter12_reg;
wire   [0:0] tmp_5_fu_489_p3;
reg   [0:0] tmp_5_reg_1860;
wire   [0:0] xor_ln3471_fu_497_p2;
reg   [0:0] xor_ln3471_reg_1865;
reg   [0:0] xor_ln3471_reg_1865_pp0_iter7_reg;
reg   [0:0] xor_ln3471_reg_1865_pp0_iter8_reg;
reg   [0:0] xor_ln3471_reg_1865_pp0_iter9_reg;
reg   [0:0] xor_ln3471_reg_1865_pp0_iter10_reg;
reg   [0:0] xor_ln3471_reg_1865_pp0_iter11_reg;
reg   [0:0] xor_ln3471_reg_1865_pp0_iter12_reg;
wire   [8:0] sub_ln3459_1_fu_544_p2;
reg   [8:0] sub_ln3459_1_reg_1883;
wire   [8:0] add_ln3469_1_fu_560_p2;
reg   [8:0] add_ln3469_1_reg_1888;
reg   [1:0] tmp_3_cast_reg_1893;
reg   [1:0] tmp_4_cast_reg_1898;
reg   [1:0] tmp_5_cast_reg_1903;
reg   [1:0] tmp_5_cast_reg_1903_pp0_iter7_reg;
reg   [1:0] tmp_6_cast_reg_1908;
reg   [1:0] tmp_6_cast_reg_1908_pp0_iter7_reg;
reg   [1:0] tmp_7_cast_reg_1913;
reg   [1:0] tmp_7_cast_reg_1913_pp0_iter7_reg;
reg   [1:0] tmp_7_cast_reg_1913_pp0_iter8_reg;
reg   [1:0] tmp_8_cast_reg_1918;
reg   [1:0] tmp_8_cast_reg_1918_pp0_iter7_reg;
reg   [1:0] tmp_8_cast_reg_1918_pp0_iter8_reg;
reg   [1:0] tmp_9_cast_reg_1923;
reg   [1:0] tmp_9_cast_reg_1923_pp0_iter7_reg;
reg   [1:0] tmp_9_cast_reg_1923_pp0_iter8_reg;
reg   [1:0] tmp_9_cast_reg_1923_pp0_iter9_reg;
reg   [1:0] tmp_10_cast_reg_1928;
reg   [1:0] tmp_10_cast_reg_1928_pp0_iter7_reg;
reg   [1:0] tmp_10_cast_reg_1928_pp0_iter8_reg;
reg   [1:0] tmp_10_cast_reg_1928_pp0_iter9_reg;
reg   [1:0] tmp_11_cast_reg_1933;
reg   [1:0] tmp_11_cast_reg_1933_pp0_iter7_reg;
reg   [1:0] tmp_11_cast_reg_1933_pp0_iter8_reg;
reg   [1:0] tmp_11_cast_reg_1933_pp0_iter9_reg;
reg   [1:0] tmp_11_cast_reg_1933_pp0_iter10_reg;
reg   [1:0] tmp_12_cast_reg_1938;
reg   [1:0] tmp_12_cast_reg_1938_pp0_iter7_reg;
reg   [1:0] tmp_12_cast_reg_1938_pp0_iter8_reg;
reg   [1:0] tmp_12_cast_reg_1938_pp0_iter9_reg;
reg   [1:0] tmp_12_cast_reg_1938_pp0_iter10_reg;
reg   [1:0] tmp_1313_cast_reg_1943;
reg   [1:0] tmp_1313_cast_reg_1943_pp0_iter7_reg;
reg   [1:0] tmp_1313_cast_reg_1943_pp0_iter8_reg;
reg   [1:0] tmp_1313_cast_reg_1943_pp0_iter9_reg;
reg   [1:0] tmp_1313_cast_reg_1943_pp0_iter10_reg;
reg   [1:0] tmp_1313_cast_reg_1943_pp0_iter11_reg;
reg   [1:0] tmp_14_cast_reg_1948;
reg   [1:0] tmp_14_cast_reg_1948_pp0_iter7_reg;
reg   [1:0] tmp_14_cast_reg_1948_pp0_iter8_reg;
reg   [1:0] tmp_14_cast_reg_1948_pp0_iter9_reg;
reg   [1:0] tmp_14_cast_reg_1948_pp0_iter10_reg;
reg   [1:0] tmp_14_cast_reg_1948_pp0_iter11_reg;
wire   [0:0] xor_ln3471_1_fu_687_p2;
reg   [0:0] xor_ln3471_1_reg_1953;
reg   [0:0] xor_ln3471_1_reg_1953_pp0_iter8_reg;
reg   [0:0] xor_ln3471_1_reg_1953_pp0_iter9_reg;
reg   [0:0] xor_ln3471_1_reg_1953_pp0_iter10_reg;
reg   [0:0] xor_ln3471_1_reg_1953_pp0_iter11_reg;
reg   [0:0] xor_ln3471_1_reg_1953_pp0_iter12_reg;
wire   [0:0] xor_ln3471_2_fu_762_p2;
reg   [0:0] xor_ln3471_2_reg_1969;
reg   [0:0] xor_ln3471_2_reg_1969_pp0_iter8_reg;
reg   [0:0] xor_ln3471_2_reg_1969_pp0_iter9_reg;
reg   [0:0] xor_ln3471_2_reg_1969_pp0_iter10_reg;
reg   [0:0] xor_ln3471_2_reg_1969_pp0_iter11_reg;
reg   [0:0] xor_ln3471_2_reg_1969_pp0_iter12_reg;
wire   [14:0] select_ln3450_3_fu_823_p3;
reg   [14:0] select_ln3450_3_reg_1985;
reg   [0:0] tmp_8_reg_1990;
wire   [0:0] xor_ln3471_3_fu_839_p2;
reg   [0:0] xor_ln3471_3_reg_1996;
reg   [0:0] xor_ln3471_3_reg_1996_pp0_iter9_reg;
reg   [0:0] xor_ln3471_3_reg_1996_pp0_iter10_reg;
reg   [0:0] xor_ln3471_3_reg_1996_pp0_iter11_reg;
reg   [0:0] xor_ln3471_3_reg_1996_pp0_iter12_reg;
wire   [0:0] xor_ln3471_4_fu_913_p2;
reg   [0:0] xor_ln3471_4_reg_2010;
reg   [0:0] xor_ln3471_4_reg_2010_pp0_iter9_reg;
reg   [0:0] xor_ln3471_4_reg_2010_pp0_iter10_reg;
reg   [0:0] xor_ln3471_4_reg_2010_pp0_iter11_reg;
reg   [0:0] xor_ln3471_4_reg_2010_pp0_iter12_reg;
wire   [20:0] select_ln3450_5_fu_976_p3;
reg   [20:0] select_ln3450_5_reg_2024;
reg   [0:0] tmp_10_reg_2029;
wire   [0:0] xor_ln3471_5_fu_992_p2;
reg   [0:0] xor_ln3471_5_reg_2035;
reg   [0:0] xor_ln3471_5_reg_2035_pp0_iter10_reg;
reg   [0:0] xor_ln3471_5_reg_2035_pp0_iter11_reg;
reg   [0:0] xor_ln3471_5_reg_2035_pp0_iter12_reg;
wire   [0:0] xor_ln3471_6_fu_1068_p2;
reg   [0:0] xor_ln3471_6_reg_2047;
reg   [0:0] xor_ln3471_6_reg_2047_pp0_iter10_reg;
reg   [0:0] xor_ln3471_6_reg_2047_pp0_iter11_reg;
reg   [0:0] xor_ln3471_6_reg_2047_pp0_iter12_reg;
wire   [26:0] select_ln3450_7_fu_1133_p3;
reg   [26:0] select_ln3450_7_reg_2059;
reg   [0:0] tmp_12_reg_2064;
wire   [0:0] xor_ln3471_7_fu_1149_p2;
reg   [0:0] xor_ln3471_7_reg_2070;
reg   [0:0] xor_ln3471_7_reg_2070_pp0_iter11_reg;
reg   [0:0] xor_ln3471_7_reg_2070_pp0_iter12_reg;
wire   [0:0] xor_ln3471_8_fu_1227_p2;
reg   [0:0] xor_ln3471_8_reg_2080;
reg   [0:0] xor_ln3471_8_reg_2080_pp0_iter11_reg;
reg   [0:0] xor_ln3471_8_reg_2080_pp0_iter12_reg;
reg   [0:0] tmp_14_reg_2090;
wire   [29:0] empty_fu_1306_p1;
reg   [29:0] empty_reg_2096;
wire   [0:0] xor_ln3471_9_fu_1310_p2;
reg   [0:0] xor_ln3471_9_reg_2101;
reg   [0:0] xor_ln3471_9_reg_2101_pp0_iter12_reg;
wire   [0:0] xor_ln3471_10_fu_1386_p2;
reg   [0:0] xor_ln3471_10_reg_2109;
reg   [0:0] xor_ln3471_10_reg_2109_pp0_iter12_reg;
reg   [0:0] tmp_16_reg_2117;
wire   [29:0] empty_44_fu_1471_p1;
reg   [29:0] empty_44_reg_2123;
wire   [0:0] xor_ln3471_11_fu_1475_p2;
reg   [0:0] xor_ln3471_11_reg_2128;
wire   [0:0] xor_ln3471_12_fu_1553_p2;
reg   [0:0] xor_ln3471_12_reg_2134;
reg   [0:0] tmp_18_reg_2140;
wire   [29:0] empty_46_fu_1640_p1;
reg   [29:0] empty_46_reg_2146;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg   [9:0] i_reg_269;
reg    ap_block_state1;
wire    ap_CS_fsm_state17;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] tmp_1_fu_315_p3;
wire   [15:0] sub_ln98_fu_323_p2;
wire   [0:0] tmp_3_fu_337_p3;
wire   [15:0] sub_ln99_fu_345_p2;
wire  signed [31:0] grp_fu_1767_p3;
wire   [1:0] tmp_4_fu_368_p4;
wire   [1:0] tmp_2_fu_392_p4;
wire   [3:0] R_2_fu_401_p3;
wire   [4:0] R_2_0_cast_fu_409_p1;
wire   [4:0] tmpR_1_fu_413_p2;
wire   [2:0] tmp_fu_419_p4;
wire   [1:0] tmp_13_cast_fu_383_p4;
wire   [4:0] R_1_1_fu_429_p3;
wire   [2:0] tmpQ_s_fu_441_p3;
wire   [2:0] or_ln3457_fu_449_p2;
wire  signed [5:0] R_1_1_cast_fu_437_p1;
wire   [5:0] zext_ln3459_fu_455_p1;
wire   [2:0] or_ln3467_fu_465_p2;
wire   [5:0] zext_ln3469_fu_471_p1;
wire   [5:0] sub_ln3459_fu_459_p2;
wire   [5:0] add_ln3469_fu_475_p2;
wire   [5:0] select_ln3450_fu_481_p3;
wire   [1:0] tmp_2_cast_fu_503_p4;
wire   [7:0] R_1_2_fu_512_p3;
wire   [3:0] tmpQ_1_fu_524_p4;
wire   [3:0] or_ln3457_1_fu_534_p2;
wire  signed [8:0] R_1_2_cast_fu_520_p1;
wire   [8:0] zext_ln3459_1_fu_540_p1;
wire   [3:0] or_ln3467_1_fu_550_p2;
wire   [8:0] zext_ln3469_1_fu_556_p1;
wire   [8:0] select_ln3450_1_fu_674_p3;
wire   [0:0] tmp_6_fu_679_p3;
wire   [10:0] R_1_3_fu_693_p3;
wire   [4:0] tmpQ_3_fu_704_p5;
wire   [4:0] or_ln3457_2_fu_714_p2;
wire  signed [11:0] R_1_3_cast_fu_700_p1;
wire   [11:0] zext_ln3459_2_fu_720_p1;
wire   [4:0] or_ln3467_2_fu_730_p2;
wire   [11:0] zext_ln3469_2_fu_736_p1;
wire   [11:0] add_ln3469_2_fu_740_p2;
wire   [11:0] sub_ln3459_2_fu_724_p2;
wire   [11:0] select_ln3450_2_fu_746_p3;
wire   [0:0] tmp_7_fu_754_p3;
wire   [13:0] R_1_4_fu_768_p3;
wire   [5:0] tmpQ_4_fu_779_p6;
wire   [5:0] or_ln3457_3_fu_791_p2;
wire  signed [14:0] R_1_4_cast_fu_775_p1;
wire   [14:0] zext_ln3459_3_fu_797_p1;
wire   [5:0] or_ln3467_3_fu_807_p2;
wire   [14:0] zext_ln3469_3_fu_813_p1;
wire   [14:0] add_ln3469_3_fu_817_p2;
wire   [14:0] sub_ln3459_3_fu_801_p2;
wire   [16:0] R_1_5_fu_844_p3;
wire   [6:0] tmpQ_5_fu_854_p7;
wire   [6:0] or_ln3457_4_fu_866_p2;
wire  signed [17:0] R_1_5_cast_fu_850_p1;
wire   [17:0] zext_ln3459_4_fu_872_p1;
wire   [6:0] or_ln3467_4_fu_882_p2;
wire   [17:0] zext_ln3469_4_fu_888_p1;
wire   [17:0] add_ln3469_4_fu_892_p2;
wire   [17:0] sub_ln3459_4_fu_876_p2;
wire   [17:0] select_ln3450_4_fu_898_p3;
wire   [0:0] tmp_9_fu_905_p3;
wire   [19:0] R_1_6_fu_919_p3;
wire   [7:0] tmpQ_6_fu_930_p8;
wire   [7:0] or_ln3457_5_fu_944_p2;
wire  signed [20:0] R_1_6_cast_fu_926_p1;
wire   [20:0] zext_ln3459_5_fu_950_p1;
wire   [7:0] or_ln3467_5_fu_960_p2;
wire   [20:0] zext_ln3469_5_fu_966_p1;
wire   [20:0] add_ln3469_5_fu_970_p2;
wire   [20:0] sub_ln3459_5_fu_954_p2;
wire   [22:0] R_1_7_fu_997_p3;
wire   [8:0] tmpQ_7_fu_1007_p9;
wire   [8:0] or_ln3457_6_fu_1021_p2;
wire  signed [23:0] R_1_7_cast_fu_1003_p1;
wire   [23:0] zext_ln3459_6_fu_1027_p1;
wire   [8:0] or_ln3467_6_fu_1037_p2;
wire   [23:0] zext_ln3469_6_fu_1043_p1;
wire   [23:0] add_ln3469_6_fu_1047_p2;
wire   [23:0] sub_ln3459_6_fu_1031_p2;
wire   [23:0] select_ln3450_6_fu_1053_p3;
wire   [0:0] tmp_11_fu_1060_p3;
wire   [25:0] R_1_8_fu_1074_p3;
wire   [9:0] tmpQ_8_fu_1085_p10;
wire   [9:0] or_ln3457_7_fu_1101_p2;
wire  signed [26:0] R_1_8_cast_fu_1081_p1;
wire   [26:0] zext_ln3459_7_fu_1107_p1;
wire   [9:0] or_ln3467_7_fu_1117_p2;
wire   [26:0] zext_ln3469_7_fu_1123_p1;
wire   [26:0] add_ln3469_7_fu_1127_p2;
wire   [26:0] sub_ln3459_7_fu_1111_p2;
wire   [28:0] R_1_9_fu_1154_p3;
wire   [10:0] tmpQ_9_fu_1164_p11;
wire   [10:0] or_ln3457_8_fu_1180_p2;
wire  signed [29:0] R_1_9_cast_fu_1160_p1;
wire   [29:0] zext_ln3459_8_fu_1186_p1;
wire   [10:0] or_ln3467_8_fu_1196_p2;
wire   [29:0] zext_ln3469_8_fu_1202_p1;
wire   [29:0] add_ln3469_8_fu_1206_p2;
wire   [29:0] sub_ln3459_8_fu_1190_p2;
wire   [29:0] select_ln3450_8_fu_1212_p3;
wire   [0:0] tmp_13_fu_1219_p3;
wire   [11:0] tmpQ_2_fu_1240_p12;
wire   [11:0] or_ln3457_9_fu_1258_p2;
wire   [31:0] R_1_s_fu_1233_p3;
wire   [31:0] zext_ln3459_9_fu_1264_p1;
wire   [11:0] or_ln3467_9_fu_1274_p2;
wire   [31:0] zext_ln3469_9_fu_1280_p1;
wire   [31:0] add_ln3469_9_fu_1284_p2;
wire   [31:0] sub_ln3459_9_fu_1268_p2;
wire   [31:0] select_ln3450_9_fu_1290_p3;
wire   [12:0] tmpQ_10_fu_1321_p13;
wire   [12:0] or_ln3457_10_fu_1339_p2;
wire   [31:0] R_1_10_fu_1315_p3;
wire   [31:0] zext_ln3459_10_fu_1345_p1;
wire   [12:0] or_ln3467_10_fu_1355_p2;
wire   [31:0] zext_ln3469_10_fu_1361_p1;
wire   [31:0] add_ln3469_10_fu_1365_p2;
wire   [31:0] sub_ln3459_10_fu_1349_p2;
wire   [31:0] select_ln3450_10_fu_1371_p3;
wire   [0:0] tmp_15_fu_1378_p3;
wire   [29:0] empty_43_fu_1392_p1;
wire   [13:0] tmpQ_11_fu_1403_p14;
wire   [13:0] or_ln3457_11_fu_1423_p2;
wire   [31:0] R_1_11_fu_1396_p3;
wire   [31:0] zext_ln3459_11_fu_1429_p1;
wire   [13:0] or_ln3467_11_fu_1439_p2;
wire   [31:0] zext_ln3469_11_fu_1445_p1;
wire   [31:0] add_ln3469_11_fu_1449_p2;
wire   [31:0] sub_ln3459_11_fu_1433_p2;
wire   [31:0] select_ln3450_11_fu_1455_p3;
wire   [14:0] tmpQ_12_fu_1486_p15;
wire   [14:0] or_ln3457_12_fu_1506_p2;
wire   [31:0] R_1_12_fu_1480_p3;
wire   [31:0] zext_ln3459_12_fu_1512_p1;
wire   [14:0] or_ln3467_12_fu_1522_p2;
wire   [31:0] zext_ln3469_12_fu_1528_p1;
wire   [31:0] add_ln3469_12_fu_1532_p2;
wire   [31:0] sub_ln3459_12_fu_1516_p2;
wire   [31:0] select_ln3450_12_fu_1538_p3;
wire   [0:0] tmp_17_fu_1545_p3;
wire   [29:0] empty_45_fu_1559_p1;
wire   [15:0] tmpQ_13_fu_1570_p16;
wire   [15:0] or_ln3457_13_fu_1592_p2;
wire   [31:0] R_1_13_fu_1563_p3;
wire   [31:0] zext_ln3459_13_fu_1598_p1;
wire   [15:0] or_ln3467_13_fu_1608_p2;
wire   [31:0] zext_ln3469_13_fu_1614_p1;
wire   [31:0] add_ln3469_13_fu_1618_p2;
wire   [31:0] sub_ln3459_13_fu_1602_p2;
wire   [31:0] select_ln3450_13_fu_1624_p3;
wire   [0:0] xor_ln3471_13_fu_1644_p2;
wire   [16:0] tmpQ_14_fu_1655_p17;
wire   [16:0] or_ln3457_14_fu_1677_p2;
wire   [31:0] R_1_14_fu_1649_p3;
wire   [31:0] zext_ln3459_14_fu_1683_p1;
wire   [16:0] or_ln3467_14_fu_1693_p2;
wire   [31:0] zext_ln3469_14_fu_1699_p1;
wire   [31:0] add_ln3469_14_fu_1703_p2;
wire   [31:0] sub_ln3459_14_fu_1687_p2;
wire   [0:0] tmp_19_fu_1709_p3;
wire   [0:0] tmp_20_fu_1717_p3;
wire   [0:0] select_ln3450_14_fu_1725_p3;
wire   [0:0] xor_ln3471_14_fu_1732_p2;
wire  signed [15:0] grp_fu_1761_p0;
wire  signed [15:0] grp_fu_1761_p1;
wire  signed [15:0] grp_fu_1767_p0;
wire  signed [15:0] grp_fu_1767_p1;
reg    grp_fu_1761_ce;
reg    grp_fu_1767_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

edge_canny_detector_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1761_p0),
    .din1(grp_fu_1761_p1),
    .ce(grp_fu_1761_ce),
    .dout(grp_fu_1761_p2)
);

edge_canny_detector_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1767_p0),
    .din1(grp_fu_1767_p1),
    .din2(grp_fu_1761_p2),
    .ce(grp_fu_1767_ce),
    .dout(grp_fu_1767_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln72_fu_297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln72_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end else if (((icmp_ln72_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_reg_269 <= i_2_reg_1792;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_269 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln79_fu_309_p2 == 1'd0))) begin
        j_reg_280 <= j_2_fu_303_p2;
    end else if (((icmp_ln72_fu_297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_280 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1806_pp0_iter5_reg == 1'd0))) begin
        add_ln3469_1_reg_1888 <= add_ln3469_1_fu_560_p2;
        icmp_ln3471_reg_1842 <= icmp_ln3471_fu_377_p2;
        sub_ln3459_1_reg_1883 <= sub_ln3459_1_fu_544_p2;
        tmp_10_cast_reg_1928 <= {{grp_fu_1767_p3[11:10]}};
        tmp_11_cast_reg_1933 <= {{grp_fu_1767_p3[9:8]}};
        tmp_12_cast_reg_1938 <= {{grp_fu_1767_p3[7:6]}};
        tmp_1313_cast_reg_1943 <= {{grp_fu_1767_p3[5:4]}};
        tmp_14_cast_reg_1948 <= {{grp_fu_1767_p3[3:2]}};
        tmp_3_cast_reg_1893 <= {{grp_fu_1767_p3[25:24]}};
        tmp_4_cast_reg_1898 <= {{grp_fu_1767_p3[23:22]}};
        tmp_5_cast_reg_1903 <= {{grp_fu_1767_p3[21:20]}};
        tmp_5_reg_1860 <= select_ln3450_fu_481_p3[32'd5];
        tmp_6_cast_reg_1908 <= {{grp_fu_1767_p3[19:18]}};
        tmp_7_cast_reg_1913 <= {{grp_fu_1767_p3[17:16]}};
        tmp_8_cast_reg_1918 <= {{grp_fu_1767_p3[15:14]}};
        tmp_9_cast_reg_1923 <= {{grp_fu_1767_p3[13:12]}};
        trunc_ln67_reg_1837 <= trunc_ln67_fu_365_p1;
        xor_ln3471_reg_1865 <= xor_ln3471_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1806_pp0_iter10_reg == 1'd0))) begin
        empty_44_reg_2123 <= empty_44_fu_1471_p1;
        tmp_16_reg_2117 <= select_ln3450_11_fu_1455_p3[32'd31];
        xor_ln3471_10_reg_2109 <= xor_ln3471_10_fu_1386_p2;
        xor_ln3471_9_reg_2101 <= xor_ln3471_9_fu_1310_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1806_pp0_iter11_reg == 1'd0))) begin
        empty_46_reg_2146 <= empty_46_fu_1640_p1;
        tmp_18_reg_2140 <= select_ln3450_13_fu_1624_p3[32'd31];
        xor_ln3471_11_reg_2128 <= xor_ln3471_11_fu_1475_p2;
        xor_ln3471_12_reg_2134 <= xor_ln3471_12_fu_1553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1806_pp0_iter9_reg == 1'd0))) begin
        empty_reg_2096 <= empty_fu_1306_p1;
        tmp_14_reg_2090 <= select_ln3450_9_fu_1290_p3[32'd31];
        xor_ln3471_7_reg_2070 <= xor_ln3471_7_fu_1149_p2;
        xor_ln3471_8_reg_2080 <= xor_ln3471_8_fu_1227_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_1792 <= i_2_fu_291_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln3471_reg_1842_pp0_iter10_reg <= icmp_ln3471_reg_1842_pp0_iter9_reg;
        icmp_ln3471_reg_1842_pp0_iter11_reg <= icmp_ln3471_reg_1842_pp0_iter10_reg;
        icmp_ln3471_reg_1842_pp0_iter12_reg <= icmp_ln3471_reg_1842_pp0_iter11_reg;
        icmp_ln3471_reg_1842_pp0_iter7_reg <= icmp_ln3471_reg_1842;
        icmp_ln3471_reg_1842_pp0_iter8_reg <= icmp_ln3471_reg_1842_pp0_iter7_reg;
        icmp_ln3471_reg_1842_pp0_iter9_reg <= icmp_ln3471_reg_1842_pp0_iter8_reg;
        icmp_ln79_reg_1806_pp0_iter10_reg <= icmp_ln79_reg_1806_pp0_iter9_reg;
        icmp_ln79_reg_1806_pp0_iter11_reg <= icmp_ln79_reg_1806_pp0_iter10_reg;
        icmp_ln79_reg_1806_pp0_iter12_reg <= icmp_ln79_reg_1806_pp0_iter11_reg;
        icmp_ln79_reg_1806_pp0_iter2_reg <= icmp_ln79_reg_1806_pp0_iter1_reg;
        icmp_ln79_reg_1806_pp0_iter3_reg <= icmp_ln79_reg_1806_pp0_iter2_reg;
        icmp_ln79_reg_1806_pp0_iter4_reg <= icmp_ln79_reg_1806_pp0_iter3_reg;
        icmp_ln79_reg_1806_pp0_iter5_reg <= icmp_ln79_reg_1806_pp0_iter4_reg;
        icmp_ln79_reg_1806_pp0_iter6_reg <= icmp_ln79_reg_1806_pp0_iter5_reg;
        icmp_ln79_reg_1806_pp0_iter7_reg <= icmp_ln79_reg_1806_pp0_iter6_reg;
        icmp_ln79_reg_1806_pp0_iter8_reg <= icmp_ln79_reg_1806_pp0_iter7_reg;
        icmp_ln79_reg_1806_pp0_iter9_reg <= icmp_ln79_reg_1806_pp0_iter8_reg;
        p_1_reg_1810_pp0_iter2_reg <= p_1_reg_1810;
        tmp_10_cast_reg_1928_pp0_iter7_reg <= tmp_10_cast_reg_1928;
        tmp_10_cast_reg_1928_pp0_iter8_reg <= tmp_10_cast_reg_1928_pp0_iter7_reg;
        tmp_10_cast_reg_1928_pp0_iter9_reg <= tmp_10_cast_reg_1928_pp0_iter8_reg;
        tmp_11_cast_reg_1933_pp0_iter10_reg <= tmp_11_cast_reg_1933_pp0_iter9_reg;
        tmp_11_cast_reg_1933_pp0_iter7_reg <= tmp_11_cast_reg_1933;
        tmp_11_cast_reg_1933_pp0_iter8_reg <= tmp_11_cast_reg_1933_pp0_iter7_reg;
        tmp_11_cast_reg_1933_pp0_iter9_reg <= tmp_11_cast_reg_1933_pp0_iter8_reg;
        tmp_12_cast_reg_1938_pp0_iter10_reg <= tmp_12_cast_reg_1938_pp0_iter9_reg;
        tmp_12_cast_reg_1938_pp0_iter7_reg <= tmp_12_cast_reg_1938;
        tmp_12_cast_reg_1938_pp0_iter8_reg <= tmp_12_cast_reg_1938_pp0_iter7_reg;
        tmp_12_cast_reg_1938_pp0_iter9_reg <= tmp_12_cast_reg_1938_pp0_iter8_reg;
        tmp_1313_cast_reg_1943_pp0_iter10_reg <= tmp_1313_cast_reg_1943_pp0_iter9_reg;
        tmp_1313_cast_reg_1943_pp0_iter11_reg <= tmp_1313_cast_reg_1943_pp0_iter10_reg;
        tmp_1313_cast_reg_1943_pp0_iter7_reg <= tmp_1313_cast_reg_1943;
        tmp_1313_cast_reg_1943_pp0_iter8_reg <= tmp_1313_cast_reg_1943_pp0_iter7_reg;
        tmp_1313_cast_reg_1943_pp0_iter9_reg <= tmp_1313_cast_reg_1943_pp0_iter8_reg;
        tmp_14_cast_reg_1948_pp0_iter10_reg <= tmp_14_cast_reg_1948_pp0_iter9_reg;
        tmp_14_cast_reg_1948_pp0_iter11_reg <= tmp_14_cast_reg_1948_pp0_iter10_reg;
        tmp_14_cast_reg_1948_pp0_iter7_reg <= tmp_14_cast_reg_1948;
        tmp_14_cast_reg_1948_pp0_iter8_reg <= tmp_14_cast_reg_1948_pp0_iter7_reg;
        tmp_14_cast_reg_1948_pp0_iter9_reg <= tmp_14_cast_reg_1948_pp0_iter8_reg;
        tmp_5_cast_reg_1903_pp0_iter7_reg <= tmp_5_cast_reg_1903;
        tmp_6_cast_reg_1908_pp0_iter7_reg <= tmp_6_cast_reg_1908;
        tmp_7_cast_reg_1913_pp0_iter7_reg <= tmp_7_cast_reg_1913;
        tmp_7_cast_reg_1913_pp0_iter8_reg <= tmp_7_cast_reg_1913_pp0_iter7_reg;
        tmp_8_cast_reg_1918_pp0_iter7_reg <= tmp_8_cast_reg_1918;
        tmp_8_cast_reg_1918_pp0_iter8_reg <= tmp_8_cast_reg_1918_pp0_iter7_reg;
        tmp_9_cast_reg_1923_pp0_iter7_reg <= tmp_9_cast_reg_1923;
        tmp_9_cast_reg_1923_pp0_iter8_reg <= tmp_9_cast_reg_1923_pp0_iter7_reg;
        tmp_9_cast_reg_1923_pp0_iter9_reg <= tmp_9_cast_reg_1923_pp0_iter8_reg;
        trunc_ln67_reg_1837_pp0_iter10_reg <= trunc_ln67_reg_1837_pp0_iter9_reg;
        trunc_ln67_reg_1837_pp0_iter11_reg <= trunc_ln67_reg_1837_pp0_iter10_reg;
        trunc_ln67_reg_1837_pp0_iter12_reg <= trunc_ln67_reg_1837_pp0_iter11_reg;
        trunc_ln67_reg_1837_pp0_iter7_reg <= trunc_ln67_reg_1837;
        trunc_ln67_reg_1837_pp0_iter8_reg <= trunc_ln67_reg_1837_pp0_iter7_reg;
        trunc_ln67_reg_1837_pp0_iter9_reg <= trunc_ln67_reg_1837_pp0_iter8_reg;
        xor_ln3471_10_reg_2109_pp0_iter12_reg <= xor_ln3471_10_reg_2109;
        xor_ln3471_1_reg_1953_pp0_iter10_reg <= xor_ln3471_1_reg_1953_pp0_iter9_reg;
        xor_ln3471_1_reg_1953_pp0_iter11_reg <= xor_ln3471_1_reg_1953_pp0_iter10_reg;
        xor_ln3471_1_reg_1953_pp0_iter12_reg <= xor_ln3471_1_reg_1953_pp0_iter11_reg;
        xor_ln3471_1_reg_1953_pp0_iter8_reg <= xor_ln3471_1_reg_1953;
        xor_ln3471_1_reg_1953_pp0_iter9_reg <= xor_ln3471_1_reg_1953_pp0_iter8_reg;
        xor_ln3471_2_reg_1969_pp0_iter10_reg <= xor_ln3471_2_reg_1969_pp0_iter9_reg;
        xor_ln3471_2_reg_1969_pp0_iter11_reg <= xor_ln3471_2_reg_1969_pp0_iter10_reg;
        xor_ln3471_2_reg_1969_pp0_iter12_reg <= xor_ln3471_2_reg_1969_pp0_iter11_reg;
        xor_ln3471_2_reg_1969_pp0_iter8_reg <= xor_ln3471_2_reg_1969;
        xor_ln3471_2_reg_1969_pp0_iter9_reg <= xor_ln3471_2_reg_1969_pp0_iter8_reg;
        xor_ln3471_3_reg_1996_pp0_iter10_reg <= xor_ln3471_3_reg_1996_pp0_iter9_reg;
        xor_ln3471_3_reg_1996_pp0_iter11_reg <= xor_ln3471_3_reg_1996_pp0_iter10_reg;
        xor_ln3471_3_reg_1996_pp0_iter12_reg <= xor_ln3471_3_reg_1996_pp0_iter11_reg;
        xor_ln3471_3_reg_1996_pp0_iter9_reg <= xor_ln3471_3_reg_1996;
        xor_ln3471_4_reg_2010_pp0_iter10_reg <= xor_ln3471_4_reg_2010_pp0_iter9_reg;
        xor_ln3471_4_reg_2010_pp0_iter11_reg <= xor_ln3471_4_reg_2010_pp0_iter10_reg;
        xor_ln3471_4_reg_2010_pp0_iter12_reg <= xor_ln3471_4_reg_2010_pp0_iter11_reg;
        xor_ln3471_4_reg_2010_pp0_iter9_reg <= xor_ln3471_4_reg_2010;
        xor_ln3471_5_reg_2035_pp0_iter10_reg <= xor_ln3471_5_reg_2035;
        xor_ln3471_5_reg_2035_pp0_iter11_reg <= xor_ln3471_5_reg_2035_pp0_iter10_reg;
        xor_ln3471_5_reg_2035_pp0_iter12_reg <= xor_ln3471_5_reg_2035_pp0_iter11_reg;
        xor_ln3471_6_reg_2047_pp0_iter10_reg <= xor_ln3471_6_reg_2047;
        xor_ln3471_6_reg_2047_pp0_iter11_reg <= xor_ln3471_6_reg_2047_pp0_iter10_reg;
        xor_ln3471_6_reg_2047_pp0_iter12_reg <= xor_ln3471_6_reg_2047_pp0_iter11_reg;
        xor_ln3471_7_reg_2070_pp0_iter11_reg <= xor_ln3471_7_reg_2070;
        xor_ln3471_7_reg_2070_pp0_iter12_reg <= xor_ln3471_7_reg_2070_pp0_iter11_reg;
        xor_ln3471_8_reg_2080_pp0_iter11_reg <= xor_ln3471_8_reg_2080;
        xor_ln3471_8_reg_2080_pp0_iter12_reg <= xor_ln3471_8_reg_2080_pp0_iter11_reg;
        xor_ln3471_9_reg_2101_pp0_iter12_reg <= xor_ln3471_9_reg_2101;
        xor_ln3471_reg_1865_pp0_iter10_reg <= xor_ln3471_reg_1865_pp0_iter9_reg;
        xor_ln3471_reg_1865_pp0_iter11_reg <= xor_ln3471_reg_1865_pp0_iter10_reg;
        xor_ln3471_reg_1865_pp0_iter12_reg <= xor_ln3471_reg_1865_pp0_iter11_reg;
        xor_ln3471_reg_1865_pp0_iter7_reg <= xor_ln3471_reg_1865;
        xor_ln3471_reg_1865_pp0_iter8_reg <= xor_ln3471_reg_1865_pp0_iter7_reg;
        xor_ln3471_reg_1865_pp0_iter9_reg <= xor_ln3471_reg_1865_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln79_reg_1806 <= icmp_ln79_fu_309_p2;
        icmp_ln79_reg_1806_pp0_iter1_reg <= icmp_ln79_reg_1806;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_reg_1806 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_1_reg_1810 <= p_1_fu_329_p3;
        q_1_reg_1815 <= q_1_fu_351_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1806_pp0_iter6_reg == 1'd0))) begin
        select_ln3450_3_reg_1985 <= select_ln3450_3_fu_823_p3;
        tmp_8_reg_1990 <= select_ln3450_3_fu_823_p3[32'd14];
        xor_ln3471_1_reg_1953 <= xor_ln3471_1_fu_687_p2;
        xor_ln3471_2_reg_1969 <= xor_ln3471_2_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1806_pp0_iter7_reg == 1'd0))) begin
        select_ln3450_5_reg_2024 <= select_ln3450_5_fu_976_p3;
        tmp_10_reg_2029 <= select_ln3450_5_fu_976_p3[32'd20];
        xor_ln3471_3_reg_1996 <= xor_ln3471_3_fu_839_p2;
        xor_ln3471_4_reg_2010 <= xor_ln3471_4_fu_913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1806_pp0_iter8_reg == 1'd0))) begin
        select_ln3450_7_reg_2059 <= select_ln3450_7_fu_1133_p3;
        tmp_12_reg_2064 <= select_ln3450_7_fu_1133_p3[32'd26];
        xor_ln3471_5_reg_2035 <= xor_ln3471_5_fu_992_p2;
        xor_ln3471_6_reg_2047 <= xor_ln3471_6_fu_1068_p2;
    end
end

always @ (*) begin
    if ((icmp_ln79_fu_309_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_fu_297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_fu_297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1806 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradx1_mat_4211_blk_n = gradx1_mat_4211_empty_n;
    end else begin
        gradx1_mat_4211_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1806 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradx1_mat_4211_read = 1'b1;
    end else begin
        gradx1_mat_4211_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1806 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grady1_mat_4214_blk_n = grady1_mat_4214_empty_n;
    end else begin
        grady1_mat_4214_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1806 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grady1_mat_4214_read = 1'b1;
    end else begin
        grady1_mat_4214_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1761_ce = 1'b1;
    end else begin
        grp_fu_1761_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1767_ce = 1'b1;
    end else begin
        grp_fu_1767_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1806_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        magnitude_mat_4216_blk_n = magnitude_mat_4216_full_n;
    end else begin
        magnitude_mat_4216_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1806_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        magnitude_mat_4216_write = 1'b1;
    end else begin
        magnitude_mat_4216_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln72_fu_297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln79_fu_309_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln79_fu_309_p2 == 1'd1)) | ((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign R_1_10_fu_1315_p3 = {{empty_reg_2096}, {tmp_11_cast_reg_1933_pp0_iter10_reg}};

assign R_1_11_fu_1396_p3 = {{empty_43_fu_1392_p1}, {tmp_12_cast_reg_1938_pp0_iter10_reg}};

assign R_1_12_fu_1480_p3 = {{empty_44_reg_2123}, {tmp_1313_cast_reg_1943_pp0_iter11_reg}};

assign R_1_13_fu_1563_p3 = {{empty_45_fu_1559_p1}, {tmp_14_cast_reg_1948_pp0_iter11_reg}};

assign R_1_14_fu_1649_p3 = {{empty_46_reg_2146}, {trunc_ln67_reg_1837_pp0_iter12_reg}};

assign R_1_1_cast_fu_437_p1 = $signed(R_1_1_fu_429_p3);

assign R_1_1_fu_429_p3 = {{tmp_fu_419_p4}, {tmp_13_cast_fu_383_p4}};

assign R_1_2_cast_fu_520_p1 = $signed(R_1_2_fu_512_p3);

assign R_1_2_fu_512_p3 = {{select_ln3450_fu_481_p3}, {tmp_2_cast_fu_503_p4}};

assign R_1_3_cast_fu_700_p1 = $signed(R_1_3_fu_693_p3);

assign R_1_3_fu_693_p3 = {{select_ln3450_1_fu_674_p3}, {tmp_3_cast_reg_1893}};

assign R_1_4_cast_fu_775_p1 = $signed(R_1_4_fu_768_p3);

assign R_1_4_fu_768_p3 = {{select_ln3450_2_fu_746_p3}, {tmp_4_cast_reg_1898}};

assign R_1_5_cast_fu_850_p1 = $signed(R_1_5_fu_844_p3);

assign R_1_5_fu_844_p3 = {{select_ln3450_3_reg_1985}, {tmp_5_cast_reg_1903_pp0_iter7_reg}};

assign R_1_6_cast_fu_926_p1 = $signed(R_1_6_fu_919_p3);

assign R_1_6_fu_919_p3 = {{select_ln3450_4_fu_898_p3}, {tmp_6_cast_reg_1908_pp0_iter7_reg}};

assign R_1_7_cast_fu_1003_p1 = $signed(R_1_7_fu_997_p3);

assign R_1_7_fu_997_p3 = {{select_ln3450_5_reg_2024}, {tmp_7_cast_reg_1913_pp0_iter8_reg}};

assign R_1_8_cast_fu_1081_p1 = $signed(R_1_8_fu_1074_p3);

assign R_1_8_fu_1074_p3 = {{select_ln3450_6_fu_1053_p3}, {tmp_8_cast_reg_1918_pp0_iter8_reg}};

assign R_1_9_cast_fu_1160_p1 = $signed(R_1_9_fu_1154_p3);

assign R_1_9_fu_1154_p3 = {{select_ln3450_7_reg_2059}, {tmp_9_cast_reg_1923_pp0_iter9_reg}};

assign R_1_s_fu_1233_p3 = {{select_ln3450_8_fu_1212_p3}, {tmp_10_cast_reg_1928_pp0_iter9_reg}};

assign R_2_0_cast_fu_409_p1 = R_2_fu_401_p3;

assign R_2_fu_401_p3 = {{tmp_2_fu_392_p4}, {2'd0}};

assign add_ln3469_10_fu_1365_p2 = (R_1_10_fu_1315_p3 + zext_ln3469_10_fu_1361_p1);

assign add_ln3469_11_fu_1449_p2 = (R_1_11_fu_1396_p3 + zext_ln3469_11_fu_1445_p1);

assign add_ln3469_12_fu_1532_p2 = (R_1_12_fu_1480_p3 + zext_ln3469_12_fu_1528_p1);

assign add_ln3469_13_fu_1618_p2 = (R_1_13_fu_1563_p3 + zext_ln3469_13_fu_1614_p1);

assign add_ln3469_14_fu_1703_p2 = (R_1_14_fu_1649_p3 + zext_ln3469_14_fu_1699_p1);

assign add_ln3469_1_fu_560_p2 = ($signed(R_1_2_cast_fu_520_p1) + $signed(zext_ln3469_1_fu_556_p1));

assign add_ln3469_2_fu_740_p2 = ($signed(R_1_3_cast_fu_700_p1) + $signed(zext_ln3469_2_fu_736_p1));

assign add_ln3469_3_fu_817_p2 = ($signed(R_1_4_cast_fu_775_p1) + $signed(zext_ln3469_3_fu_813_p1));

assign add_ln3469_4_fu_892_p2 = ($signed(R_1_5_cast_fu_850_p1) + $signed(zext_ln3469_4_fu_888_p1));

assign add_ln3469_5_fu_970_p2 = ($signed(R_1_6_cast_fu_926_p1) + $signed(zext_ln3469_5_fu_966_p1));

assign add_ln3469_6_fu_1047_p2 = ($signed(R_1_7_cast_fu_1003_p1) + $signed(zext_ln3469_6_fu_1043_p1));

assign add_ln3469_7_fu_1127_p2 = ($signed(R_1_8_cast_fu_1081_p1) + $signed(zext_ln3469_7_fu_1123_p1));

assign add_ln3469_8_fu_1206_p2 = ($signed(R_1_9_cast_fu_1160_p1) + $signed(zext_ln3469_8_fu_1202_p1));

assign add_ln3469_9_fu_1284_p2 = (R_1_s_fu_1233_p3 + zext_ln3469_9_fu_1280_p1);

assign add_ln3469_fu_475_p2 = ($signed(R_1_1_cast_fu_437_p1) + $signed(zext_ln3469_fu_471_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln79_reg_1806_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (magnitude_mat_4216_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln79_reg_1806 == 1'd0) & (grady1_mat_4214_empty_n == 1'b0)) | ((icmp_ln79_reg_1806 == 1'd0) & (gradx1_mat_4211_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln79_reg_1806_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (magnitude_mat_4216_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln79_reg_1806 == 1'd0) & (grady1_mat_4214_empty_n == 1'b0)) | ((icmp_ln79_reg_1806 == 1'd0) & (gradx1_mat_4211_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln79_reg_1806_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (magnitude_mat_4216_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln79_reg_1806 == 1'd0) & (grady1_mat_4214_empty_n == 1'b0)) | ((icmp_ln79_reg_1806 == 1'd0) & (gradx1_mat_4211_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp0_stage0_iter13 = ((icmp_ln79_reg_1806_pp0_iter12_reg == 1'd0) & (magnitude_mat_4216_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((icmp_ln79_reg_1806 == 1'd0) & (grady1_mat_4214_empty_n == 1'b0)) | ((icmp_ln79_reg_1806 == 1'd0) & (gradx1_mat_4211_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign empty_43_fu_1392_p1 = select_ln3450_10_fu_1371_p3[29:0];

assign empty_44_fu_1471_p1 = select_ln3450_11_fu_1455_p3[29:0];

assign empty_45_fu_1559_p1 = select_ln3450_12_fu_1538_p3[29:0];

assign empty_46_fu_1640_p1 = select_ln3450_13_fu_1624_p3[29:0];

assign empty_fu_1306_p1 = select_ln3450_9_fu_1290_p3[29:0];

assign grp_fu_1761_p0 = sext_ln106_fu_359_p1;

assign grp_fu_1761_p1 = sext_ln106_fu_359_p1;

assign grp_fu_1767_p0 = sext_ln105_fu_362_p1;

assign grp_fu_1767_p1 = sext_ln105_fu_362_p1;

assign i_2_fu_291_p2 = (i_reg_269 + 10'd1);

assign icmp_ln3471_fu_377_p2 = ((tmp_4_fu_368_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_297_p2 = ((i_reg_269 == 10'd720) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_309_p2 = ((j_reg_280 == 11'd1280) ? 1'b1 : 1'b0);

assign j_2_fu_303_p2 = (j_reg_280 + 11'd1);

assign magnitude_mat_4216_din = {{{{{{{{{{{{{{{{icmp_ln3471_reg_1842_pp0_iter12_reg}, {xor_ln3471_reg_1865_pp0_iter12_reg}}, {xor_ln3471_1_reg_1953_pp0_iter12_reg}}, {xor_ln3471_2_reg_1969_pp0_iter12_reg}}, {xor_ln3471_3_reg_1996_pp0_iter12_reg}}, {xor_ln3471_4_reg_2010_pp0_iter12_reg}}, {xor_ln3471_5_reg_2035_pp0_iter12_reg}}, {xor_ln3471_6_reg_2047_pp0_iter12_reg}}, {xor_ln3471_7_reg_2070_pp0_iter12_reg}}, {xor_ln3471_8_reg_2080_pp0_iter12_reg}}, {xor_ln3471_9_reg_2101_pp0_iter12_reg}}, {xor_ln3471_10_reg_2109_pp0_iter12_reg}}, {xor_ln3471_11_reg_2128}}, {xor_ln3471_12_reg_2134}}, {xor_ln3471_13_fu_1644_p2}}, {xor_ln3471_14_fu_1732_p2}};

assign or_ln3457_10_fu_1339_p2 = (tmpQ_10_fu_1321_p13 | 13'd1);

assign or_ln3457_11_fu_1423_p2 = (tmpQ_11_fu_1403_p14 | 14'd1);

assign or_ln3457_12_fu_1506_p2 = (tmpQ_12_fu_1486_p15 | 15'd1);

assign or_ln3457_13_fu_1592_p2 = (tmpQ_13_fu_1570_p16 | 16'd1);

assign or_ln3457_14_fu_1677_p2 = (tmpQ_14_fu_1655_p17 | 17'd1);

assign or_ln3457_1_fu_534_p2 = (tmpQ_1_fu_524_p4 | 4'd1);

assign or_ln3457_2_fu_714_p2 = (tmpQ_3_fu_704_p5 | 5'd1);

assign or_ln3457_3_fu_791_p2 = (tmpQ_4_fu_779_p6 | 6'd1);

assign or_ln3457_4_fu_866_p2 = (tmpQ_5_fu_854_p7 | 7'd1);

assign or_ln3457_5_fu_944_p2 = (tmpQ_6_fu_930_p8 | 8'd1);

assign or_ln3457_6_fu_1021_p2 = (tmpQ_7_fu_1007_p9 | 9'd1);

assign or_ln3457_7_fu_1101_p2 = (tmpQ_8_fu_1085_p10 | 10'd1);

assign or_ln3457_8_fu_1180_p2 = (tmpQ_9_fu_1164_p11 | 11'd1);

assign or_ln3457_9_fu_1258_p2 = (tmpQ_2_fu_1240_p12 | 12'd1);

assign or_ln3457_fu_449_p2 = (tmpQ_s_fu_441_p3 | 3'd1);

assign or_ln3467_10_fu_1355_p2 = (tmpQ_10_fu_1321_p13 | 13'd3);

assign or_ln3467_11_fu_1439_p2 = (tmpQ_11_fu_1403_p14 | 14'd3);

assign or_ln3467_12_fu_1522_p2 = (tmpQ_12_fu_1486_p15 | 15'd3);

assign or_ln3467_13_fu_1608_p2 = (tmpQ_13_fu_1570_p16 | 16'd3);

assign or_ln3467_14_fu_1693_p2 = (tmpQ_14_fu_1655_p17 | 17'd3);

assign or_ln3467_1_fu_550_p2 = (tmpQ_1_fu_524_p4 | 4'd3);

assign or_ln3467_2_fu_730_p2 = (tmpQ_3_fu_704_p5 | 5'd3);

assign or_ln3467_3_fu_807_p2 = (tmpQ_4_fu_779_p6 | 6'd3);

assign or_ln3467_4_fu_882_p2 = (tmpQ_5_fu_854_p7 | 7'd3);

assign or_ln3467_5_fu_960_p2 = (tmpQ_6_fu_930_p8 | 8'd3);

assign or_ln3467_6_fu_1037_p2 = (tmpQ_7_fu_1007_p9 | 9'd3);

assign or_ln3467_7_fu_1117_p2 = (tmpQ_8_fu_1085_p10 | 10'd3);

assign or_ln3467_8_fu_1196_p2 = (tmpQ_9_fu_1164_p11 | 11'd3);

assign or_ln3467_9_fu_1274_p2 = (tmpQ_2_fu_1240_p12 | 12'd3);

assign or_ln3467_fu_465_p2 = (tmpQ_s_fu_441_p3 | 3'd3);

assign p_1_fu_329_p3 = ((tmp_1_fu_315_p3[0:0] == 1'b1) ? sub_ln98_fu_323_p2 : gradx1_mat_4211_dout);

assign q_1_fu_351_p3 = ((tmp_3_fu_337_p3[0:0] == 1'b1) ? sub_ln99_fu_345_p2 : grady1_mat_4214_dout);

assign select_ln3450_10_fu_1371_p3 = ((tmp_14_reg_2090[0:0] == 1'b1) ? add_ln3469_10_fu_1365_p2 : sub_ln3459_10_fu_1349_p2);

assign select_ln3450_11_fu_1455_p3 = ((tmp_15_fu_1378_p3[0:0] == 1'b1) ? add_ln3469_11_fu_1449_p2 : sub_ln3459_11_fu_1433_p2);

assign select_ln3450_12_fu_1538_p3 = ((tmp_16_reg_2117[0:0] == 1'b1) ? add_ln3469_12_fu_1532_p2 : sub_ln3459_12_fu_1516_p2);

assign select_ln3450_13_fu_1624_p3 = ((tmp_17_fu_1545_p3[0:0] == 1'b1) ? add_ln3469_13_fu_1618_p2 : sub_ln3459_13_fu_1602_p2);

assign select_ln3450_14_fu_1725_p3 = ((tmp_18_reg_2140[0:0] == 1'b1) ? tmp_19_fu_1709_p3 : tmp_20_fu_1717_p3);

assign select_ln3450_1_fu_674_p3 = ((tmp_5_reg_1860[0:0] == 1'b1) ? add_ln3469_1_reg_1888 : sub_ln3459_1_reg_1883);

assign select_ln3450_2_fu_746_p3 = ((tmp_6_fu_679_p3[0:0] == 1'b1) ? add_ln3469_2_fu_740_p2 : sub_ln3459_2_fu_724_p2);

assign select_ln3450_3_fu_823_p3 = ((tmp_7_fu_754_p3[0:0] == 1'b1) ? add_ln3469_3_fu_817_p2 : sub_ln3459_3_fu_801_p2);

assign select_ln3450_4_fu_898_p3 = ((tmp_8_reg_1990[0:0] == 1'b1) ? add_ln3469_4_fu_892_p2 : sub_ln3459_4_fu_876_p2);

assign select_ln3450_5_fu_976_p3 = ((tmp_9_fu_905_p3[0:0] == 1'b1) ? add_ln3469_5_fu_970_p2 : sub_ln3459_5_fu_954_p2);

assign select_ln3450_6_fu_1053_p3 = ((tmp_10_reg_2029[0:0] == 1'b1) ? add_ln3469_6_fu_1047_p2 : sub_ln3459_6_fu_1031_p2);

assign select_ln3450_7_fu_1133_p3 = ((tmp_11_fu_1060_p3[0:0] == 1'b1) ? add_ln3469_7_fu_1127_p2 : sub_ln3459_7_fu_1111_p2);

assign select_ln3450_8_fu_1212_p3 = ((tmp_12_reg_2064[0:0] == 1'b1) ? add_ln3469_8_fu_1206_p2 : sub_ln3459_8_fu_1190_p2);

assign select_ln3450_9_fu_1290_p3 = ((tmp_13_fu_1219_p3[0:0] == 1'b1) ? add_ln3469_9_fu_1284_p2 : sub_ln3459_9_fu_1268_p2);

assign select_ln3450_fu_481_p3 = ((icmp_ln3471_fu_377_p2[0:0] == 1'b1) ? sub_ln3459_fu_459_p2 : add_ln3469_fu_475_p2);

assign sext_ln105_fu_362_p1 = $signed(p_1_reg_1810_pp0_iter2_reg);

assign sext_ln106_fu_359_p1 = $signed(q_1_reg_1815);

assign sub_ln3459_10_fu_1349_p2 = (R_1_10_fu_1315_p3 - zext_ln3459_10_fu_1345_p1);

assign sub_ln3459_11_fu_1433_p2 = (R_1_11_fu_1396_p3 - zext_ln3459_11_fu_1429_p1);

assign sub_ln3459_12_fu_1516_p2 = (R_1_12_fu_1480_p3 - zext_ln3459_12_fu_1512_p1);

assign sub_ln3459_13_fu_1602_p2 = (R_1_13_fu_1563_p3 - zext_ln3459_13_fu_1598_p1);

assign sub_ln3459_14_fu_1687_p2 = (R_1_14_fu_1649_p3 - zext_ln3459_14_fu_1683_p1);

assign sub_ln3459_1_fu_544_p2 = ($signed(R_1_2_cast_fu_520_p1) - $signed(zext_ln3459_1_fu_540_p1));

assign sub_ln3459_2_fu_724_p2 = ($signed(R_1_3_cast_fu_700_p1) - $signed(zext_ln3459_2_fu_720_p1));

assign sub_ln3459_3_fu_801_p2 = ($signed(R_1_4_cast_fu_775_p1) - $signed(zext_ln3459_3_fu_797_p1));

assign sub_ln3459_4_fu_876_p2 = ($signed(R_1_5_cast_fu_850_p1) - $signed(zext_ln3459_4_fu_872_p1));

assign sub_ln3459_5_fu_954_p2 = ($signed(R_1_6_cast_fu_926_p1) - $signed(zext_ln3459_5_fu_950_p1));

assign sub_ln3459_6_fu_1031_p2 = ($signed(R_1_7_cast_fu_1003_p1) - $signed(zext_ln3459_6_fu_1027_p1));

assign sub_ln3459_7_fu_1111_p2 = ($signed(R_1_8_cast_fu_1081_p1) - $signed(zext_ln3459_7_fu_1107_p1));

assign sub_ln3459_8_fu_1190_p2 = ($signed(R_1_9_cast_fu_1160_p1) - $signed(zext_ln3459_8_fu_1186_p1));

assign sub_ln3459_9_fu_1268_p2 = (R_1_s_fu_1233_p3 - zext_ln3459_9_fu_1264_p1);

assign sub_ln3459_fu_459_p2 = ($signed(R_1_1_cast_fu_437_p1) - $signed(zext_ln3459_fu_455_p1));

assign sub_ln98_fu_323_p2 = (16'd0 - gradx1_mat_4211_dout);

assign sub_ln99_fu_345_p2 = (16'd0 - grady1_mat_4214_dout);

assign tmpQ_10_fu_1321_p13 = {{{{{{{{{{{{icmp_ln3471_reg_1842_pp0_iter10_reg}, {xor_ln3471_reg_1865_pp0_iter10_reg}}, {xor_ln3471_1_reg_1953_pp0_iter10_reg}}, {xor_ln3471_2_reg_1969_pp0_iter10_reg}}, {xor_ln3471_3_reg_1996_pp0_iter10_reg}}, {xor_ln3471_4_reg_2010_pp0_iter10_reg}}, {xor_ln3471_5_reg_2035_pp0_iter10_reg}}, {xor_ln3471_6_reg_2047_pp0_iter10_reg}}, {xor_ln3471_7_reg_2070}}, {xor_ln3471_8_reg_2080}}, {xor_ln3471_9_fu_1310_p2}}, {2'd0}};

assign tmpQ_11_fu_1403_p14 = {{{{{{{{{{{{{icmp_ln3471_reg_1842_pp0_iter10_reg}, {xor_ln3471_reg_1865_pp0_iter10_reg}}, {xor_ln3471_1_reg_1953_pp0_iter10_reg}}, {xor_ln3471_2_reg_1969_pp0_iter10_reg}}, {xor_ln3471_3_reg_1996_pp0_iter10_reg}}, {xor_ln3471_4_reg_2010_pp0_iter10_reg}}, {xor_ln3471_5_reg_2035_pp0_iter10_reg}}, {xor_ln3471_6_reg_2047_pp0_iter10_reg}}, {xor_ln3471_7_reg_2070}}, {xor_ln3471_8_reg_2080}}, {xor_ln3471_9_fu_1310_p2}}, {xor_ln3471_10_fu_1386_p2}}, {2'd0}};

assign tmpQ_12_fu_1486_p15 = {{{{{{{{{{{{{{icmp_ln3471_reg_1842_pp0_iter11_reg}, {xor_ln3471_reg_1865_pp0_iter11_reg}}, {xor_ln3471_1_reg_1953_pp0_iter11_reg}}, {xor_ln3471_2_reg_1969_pp0_iter11_reg}}, {xor_ln3471_3_reg_1996_pp0_iter11_reg}}, {xor_ln3471_4_reg_2010_pp0_iter11_reg}}, {xor_ln3471_5_reg_2035_pp0_iter11_reg}}, {xor_ln3471_6_reg_2047_pp0_iter11_reg}}, {xor_ln3471_7_reg_2070_pp0_iter11_reg}}, {xor_ln3471_8_reg_2080_pp0_iter11_reg}}, {xor_ln3471_9_reg_2101}}, {xor_ln3471_10_reg_2109}}, {xor_ln3471_11_fu_1475_p2}}, {2'd0}};

assign tmpQ_13_fu_1570_p16 = {{{{{{{{{{{{{{{icmp_ln3471_reg_1842_pp0_iter11_reg}, {xor_ln3471_reg_1865_pp0_iter11_reg}}, {xor_ln3471_1_reg_1953_pp0_iter11_reg}}, {xor_ln3471_2_reg_1969_pp0_iter11_reg}}, {xor_ln3471_3_reg_1996_pp0_iter11_reg}}, {xor_ln3471_4_reg_2010_pp0_iter11_reg}}, {xor_ln3471_5_reg_2035_pp0_iter11_reg}}, {xor_ln3471_6_reg_2047_pp0_iter11_reg}}, {xor_ln3471_7_reg_2070_pp0_iter11_reg}}, {xor_ln3471_8_reg_2080_pp0_iter11_reg}}, {xor_ln3471_9_reg_2101}}, {xor_ln3471_10_reg_2109}}, {xor_ln3471_11_fu_1475_p2}}, {xor_ln3471_12_fu_1553_p2}}, {2'd0}};

assign tmpQ_14_fu_1655_p17 = {{{{{{{{{{{{{{{{icmp_ln3471_reg_1842_pp0_iter12_reg}, {xor_ln3471_reg_1865_pp0_iter12_reg}}, {xor_ln3471_1_reg_1953_pp0_iter12_reg}}, {xor_ln3471_2_reg_1969_pp0_iter12_reg}}, {xor_ln3471_3_reg_1996_pp0_iter12_reg}}, {xor_ln3471_4_reg_2010_pp0_iter12_reg}}, {xor_ln3471_5_reg_2035_pp0_iter12_reg}}, {xor_ln3471_6_reg_2047_pp0_iter12_reg}}, {xor_ln3471_7_reg_2070_pp0_iter12_reg}}, {xor_ln3471_8_reg_2080_pp0_iter12_reg}}, {xor_ln3471_9_reg_2101_pp0_iter12_reg}}, {xor_ln3471_10_reg_2109_pp0_iter12_reg}}, {xor_ln3471_11_reg_2128}}, {xor_ln3471_12_reg_2134}}, {xor_ln3471_13_fu_1644_p2}}, {2'd0}};

assign tmpQ_1_fu_524_p4 = {{{icmp_ln3471_fu_377_p2}, {xor_ln3471_fu_497_p2}}, {2'd0}};

assign tmpQ_2_fu_1240_p12 = {{{{{{{{{{{icmp_ln3471_reg_1842_pp0_iter9_reg}, {xor_ln3471_reg_1865_pp0_iter9_reg}}, {xor_ln3471_1_reg_1953_pp0_iter9_reg}}, {xor_ln3471_2_reg_1969_pp0_iter9_reg}}, {xor_ln3471_3_reg_1996_pp0_iter9_reg}}, {xor_ln3471_4_reg_2010_pp0_iter9_reg}}, {xor_ln3471_5_reg_2035}}, {xor_ln3471_6_reg_2047}}, {xor_ln3471_7_fu_1149_p2}}, {xor_ln3471_8_fu_1227_p2}}, {2'd0}};

assign tmpQ_3_fu_704_p5 = {{{{icmp_ln3471_reg_1842}, {xor_ln3471_reg_1865}}, {xor_ln3471_1_fu_687_p2}}, {2'd0}};

assign tmpQ_4_fu_779_p6 = {{{{{icmp_ln3471_reg_1842}, {xor_ln3471_reg_1865}}, {xor_ln3471_1_fu_687_p2}}, {xor_ln3471_2_fu_762_p2}}, {2'd0}};

assign tmpQ_5_fu_854_p7 = {{{{{{icmp_ln3471_reg_1842_pp0_iter7_reg}, {xor_ln3471_reg_1865_pp0_iter7_reg}}, {xor_ln3471_1_reg_1953}}, {xor_ln3471_2_reg_1969}}, {xor_ln3471_3_fu_839_p2}}, {2'd0}};

assign tmpQ_6_fu_930_p8 = {{{{{{{icmp_ln3471_reg_1842_pp0_iter7_reg}, {xor_ln3471_reg_1865_pp0_iter7_reg}}, {xor_ln3471_1_reg_1953}}, {xor_ln3471_2_reg_1969}}, {xor_ln3471_3_fu_839_p2}}, {xor_ln3471_4_fu_913_p2}}, {2'd0}};

assign tmpQ_7_fu_1007_p9 = {{{{{{{{icmp_ln3471_reg_1842_pp0_iter8_reg}, {xor_ln3471_reg_1865_pp0_iter8_reg}}, {xor_ln3471_1_reg_1953_pp0_iter8_reg}}, {xor_ln3471_2_reg_1969_pp0_iter8_reg}}, {xor_ln3471_3_reg_1996}}, {xor_ln3471_4_reg_2010}}, {xor_ln3471_5_fu_992_p2}}, {2'd0}};

assign tmpQ_8_fu_1085_p10 = {{{{{{{{{icmp_ln3471_reg_1842_pp0_iter8_reg}, {xor_ln3471_reg_1865_pp0_iter8_reg}}, {xor_ln3471_1_reg_1953_pp0_iter8_reg}}, {xor_ln3471_2_reg_1969_pp0_iter8_reg}}, {xor_ln3471_3_reg_1996}}, {xor_ln3471_4_reg_2010}}, {xor_ln3471_5_fu_992_p2}}, {xor_ln3471_6_fu_1068_p2}}, {2'd0}};

assign tmpQ_9_fu_1164_p11 = {{{{{{{{{{icmp_ln3471_reg_1842_pp0_iter9_reg}, {xor_ln3471_reg_1865_pp0_iter9_reg}}, {xor_ln3471_1_reg_1953_pp0_iter9_reg}}, {xor_ln3471_2_reg_1969_pp0_iter9_reg}}, {xor_ln3471_3_reg_1996_pp0_iter9_reg}}, {xor_ln3471_4_reg_2010_pp0_iter9_reg}}, {xor_ln3471_5_reg_2035}}, {xor_ln3471_6_reg_2047}}, {xor_ln3471_7_fu_1149_p2}}, {2'd0}};

assign tmpQ_s_fu_441_p3 = {{icmp_ln3471_fu_377_p2}, {2'd0}};

assign tmpR_1_fu_413_p2 = ($signed(R_2_0_cast_fu_409_p1) + $signed(5'd28));

assign tmp_11_fu_1060_p3 = select_ln3450_6_fu_1053_p3[32'd23];

assign tmp_13_cast_fu_383_p4 = {{grp_fu_1767_p3[29:28]}};

assign tmp_13_fu_1219_p3 = select_ln3450_8_fu_1212_p3[32'd29];

assign tmp_15_fu_1378_p3 = select_ln3450_10_fu_1371_p3[32'd31];

assign tmp_17_fu_1545_p3 = select_ln3450_12_fu_1538_p3[32'd31];

assign tmp_19_fu_1709_p3 = add_ln3469_14_fu_1703_p2[32'd31];

assign tmp_1_fu_315_p3 = gradx1_mat_4211_dout[32'd15];

assign tmp_20_fu_1717_p3 = sub_ln3459_14_fu_1687_p2[32'd31];

assign tmp_2_cast_fu_503_p4 = {{grp_fu_1767_p3[27:26]}};

assign tmp_2_fu_392_p4 = {{grp_fu_1767_p3[31:30]}};

assign tmp_3_fu_337_p3 = grady1_mat_4214_dout[32'd15];

assign tmp_4_fu_368_p4 = {{grp_fu_1767_p3[31:30]}};

assign tmp_5_fu_489_p3 = select_ln3450_fu_481_p3[32'd5];

assign tmp_6_fu_679_p3 = select_ln3450_1_fu_674_p3[32'd8];

assign tmp_7_fu_754_p3 = select_ln3450_2_fu_746_p3[32'd11];

assign tmp_9_fu_905_p3 = select_ln3450_4_fu_898_p3[32'd17];

assign tmp_fu_419_p4 = {{tmpR_1_fu_413_p2[4:2]}};

assign trunc_ln67_fu_365_p1 = grp_fu_1767_p3[1:0];

assign xor_ln3471_10_fu_1386_p2 = (tmp_15_fu_1378_p3 ^ 1'd1);

assign xor_ln3471_11_fu_1475_p2 = (tmp_16_reg_2117 ^ 1'd1);

assign xor_ln3471_12_fu_1553_p2 = (tmp_17_fu_1545_p3 ^ 1'd1);

assign xor_ln3471_13_fu_1644_p2 = (tmp_18_reg_2140 ^ 1'd1);

assign xor_ln3471_14_fu_1732_p2 = (select_ln3450_14_fu_1725_p3 ^ 1'd1);

assign xor_ln3471_1_fu_687_p2 = (tmp_6_fu_679_p3 ^ 1'd1);

assign xor_ln3471_2_fu_762_p2 = (tmp_7_fu_754_p3 ^ 1'd1);

assign xor_ln3471_3_fu_839_p2 = (tmp_8_reg_1990 ^ 1'd1);

assign xor_ln3471_4_fu_913_p2 = (tmp_9_fu_905_p3 ^ 1'd1);

assign xor_ln3471_5_fu_992_p2 = (tmp_10_reg_2029 ^ 1'd1);

assign xor_ln3471_6_fu_1068_p2 = (tmp_11_fu_1060_p3 ^ 1'd1);

assign xor_ln3471_7_fu_1149_p2 = (tmp_12_reg_2064 ^ 1'd1);

assign xor_ln3471_8_fu_1227_p2 = (tmp_13_fu_1219_p3 ^ 1'd1);

assign xor_ln3471_9_fu_1310_p2 = (tmp_14_reg_2090 ^ 1'd1);

assign xor_ln3471_fu_497_p2 = (tmp_5_fu_489_p3 ^ 1'd1);

assign zext_ln3459_10_fu_1345_p1 = or_ln3457_10_fu_1339_p2;

assign zext_ln3459_11_fu_1429_p1 = or_ln3457_11_fu_1423_p2;

assign zext_ln3459_12_fu_1512_p1 = or_ln3457_12_fu_1506_p2;

assign zext_ln3459_13_fu_1598_p1 = or_ln3457_13_fu_1592_p2;

assign zext_ln3459_14_fu_1683_p1 = or_ln3457_14_fu_1677_p2;

assign zext_ln3459_1_fu_540_p1 = or_ln3457_1_fu_534_p2;

assign zext_ln3459_2_fu_720_p1 = or_ln3457_2_fu_714_p2;

assign zext_ln3459_3_fu_797_p1 = or_ln3457_3_fu_791_p2;

assign zext_ln3459_4_fu_872_p1 = or_ln3457_4_fu_866_p2;

assign zext_ln3459_5_fu_950_p1 = or_ln3457_5_fu_944_p2;

assign zext_ln3459_6_fu_1027_p1 = or_ln3457_6_fu_1021_p2;

assign zext_ln3459_7_fu_1107_p1 = or_ln3457_7_fu_1101_p2;

assign zext_ln3459_8_fu_1186_p1 = or_ln3457_8_fu_1180_p2;

assign zext_ln3459_9_fu_1264_p1 = or_ln3457_9_fu_1258_p2;

assign zext_ln3459_fu_455_p1 = or_ln3457_fu_449_p2;

assign zext_ln3469_10_fu_1361_p1 = or_ln3467_10_fu_1355_p2;

assign zext_ln3469_11_fu_1445_p1 = or_ln3467_11_fu_1439_p2;

assign zext_ln3469_12_fu_1528_p1 = or_ln3467_12_fu_1522_p2;

assign zext_ln3469_13_fu_1614_p1 = or_ln3467_13_fu_1608_p2;

assign zext_ln3469_14_fu_1699_p1 = or_ln3467_14_fu_1693_p2;

assign zext_ln3469_1_fu_556_p1 = or_ln3467_1_fu_550_p2;

assign zext_ln3469_2_fu_736_p1 = or_ln3467_2_fu_730_p2;

assign zext_ln3469_3_fu_813_p1 = or_ln3467_3_fu_807_p2;

assign zext_ln3469_4_fu_888_p1 = or_ln3467_4_fu_882_p2;

assign zext_ln3469_5_fu_966_p1 = or_ln3467_5_fu_960_p2;

assign zext_ln3469_6_fu_1043_p1 = or_ln3467_6_fu_1037_p2;

assign zext_ln3469_7_fu_1123_p1 = or_ln3467_7_fu_1117_p2;

assign zext_ln3469_8_fu_1202_p1 = or_ln3467_8_fu_1196_p2;

assign zext_ln3469_9_fu_1280_p1 = or_ln3467_9_fu_1274_p2;

assign zext_ln3469_fu_471_p1 = or_ln3467_fu_465_p2;

endmodule //edge_canny_detector_xFMagnitudeKernel_2_2_720_1280_3_3_1_5_5_1280_3840_s
