// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        gray_img_src_4207_dout,
        gray_img_src_4207_empty_n,
        gray_img_src_4207_read,
        gaussian_mat_4209_din,
        gaussian_mat_4209_full_n,
        gaussian_mat_4209_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_state4 = 6'd4;
parameter    ap_ST_fsm_state5 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state11 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] gray_img_src_4207_dout;
input   gray_img_src_4207_empty_n;
output   gray_img_src_4207_read;
output  [7:0] gaussian_mat_4209_din;
input   gaussian_mat_4209_full_n;
output   gaussian_mat_4209_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg gray_img_src_4207_read;
reg[7:0] gaussian_mat_4209_din;
reg gaussian_mat_4209_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    gray_img_src_4207_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln878_reg_843;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln878_7_reg_889;
reg   [0:0] cmp_i_i338_i_reg_880;
reg    gaussian_mat_4209_blk_n;
reg    ap_enable_reg_pp1_iter4;
reg   [0:0] icmp_ln870_9_reg_917;
reg   [0:0] icmp_ln870_9_reg_917_pp1_iter3_reg;
wire    ap_CS_fsm_state11;
reg   [10:0] col_V_reg_239;
reg   [10:0] col_V_10_reg_274;
reg   [10:0] col_V_10_reg_274_pp1_iter1_reg;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_predicate_op88_read_state7;
reg    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
wire    ap_block_state9_pp1_stage0_iter3;
reg    ap_block_state10_pp1_stage0_iter4;
reg    ap_block_pp1_stage0_11001;
reg   [7:0] b1_V_reg_286;
reg   [7:0] b0_V_reg_298;
reg   [7:0] m1_V_reg_311;
reg   [7:0] m0_V_reg_323;
reg   [7:0] t1_V_reg_336;
reg   [7:0] t0_V_reg_348;
reg   [9:0] A2_reg_361;
wire   [10:0] col_V_9_fu_409_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln878_fu_415_p2;
wire   [63:0] zext_ln534_fu_421_p1;
reg   [63:0] zext_ln534_reg_847;
wire   [0:0] icmp_ln209_fu_426_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] cmp_i_i338_i_fu_507_p2;
wire   [10:0] col_V_11_fu_513_p2;
reg   [10:0] col_V_11_reg_884;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln878_7_fu_519_p2;
reg   [0:0] icmp_ln878_7_reg_889_pp1_iter1_reg;
reg   [0:0] icmp_ln878_7_reg_889_pp1_iter2_reg;
reg   [0:0] icmp_ln878_7_reg_889_pp1_iter3_reg;
reg   [1:0] bottom_load_2_reg_893;
wire   [0:0] icmp_ln870_9_fu_546_p2;
wire   [7:0] src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_return;
reg   [7:0] src_buf1_V_2_reg_921;
reg    ap_enable_reg_pp1_iter3;
wire   [7:0] src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return;
reg   [7:0] src_buf2_V_2_reg_926;
wire   [7:0] b2_V_xfExtractPixels_1_1_0_s_fu_394_ap_return;
reg   [7:0] b2_V_reg_931;
wire   [9:0] add_ln50_3_fu_656_p2;
reg   [9:0] add_ln50_3_reg_936;
wire   [10:0] add_ln52_2_fu_678_p2;
reg   [10:0] add_ln52_2_reg_941;
wire   [9:0] phitmp1_fu_684_p3;
reg   [9:0] phitmp1_reg_946;
wire   [10:0] row_V_3_fu_723_p2;
wire   [12:0] row_ind_V_4_fu_830_p3;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter2;
reg    ap_condition_pp1_exit_iter3_state9;
wire   [10:0] buf_V_0_address0;
reg    buf_V_0_ce0;
wire   [7:0] buf_V_0_q0;
reg   [10:0] buf_V_0_address1;
reg    buf_V_0_ce1;
reg    buf_V_0_we1;
reg   [7:0] buf_V_0_d1;
wire   [10:0] buf_V_1_address0;
reg    buf_V_1_ce0;
wire   [7:0] buf_V_1_q0;
reg   [10:0] buf_V_1_address1;
reg    buf_V_1_ce1;
reg    buf_V_1_we1;
reg   [7:0] buf_V_1_d1;
wire   [10:0] buf_V_2_address0;
reg    buf_V_2_ce0;
wire   [7:0] buf_V_2_q0;
reg   [10:0] buf_V_2_address1;
reg    buf_V_2_ce1;
reg    buf_V_2_we1;
reg   [7:0] buf_V_2_d1;
wire    src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_ready;
wire    src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_ready;
wire    b2_V_xfExtractPixels_1_1_0_s_fu_394_ap_ready;
reg   [10:0] row_V_reg_250;
wire    ap_CS_fsm_state4;
wire   [12:0] ap_phi_mux_row_ind_V_phi_fu_266_p4;
reg   [12:0] row_ind_V_reg_262;
reg   [10:0] ap_phi_mux_col_V_10_phi_fu_278_p4;
reg   [7:0] ap_phi_mux_b1_V_phi_fu_290_p4;
reg   [7:0] ap_phi_mux_b0_V_phi_fu_302_p4;
reg   [7:0] ap_phi_mux_m1_V_phi_fu_315_p4;
reg   [7:0] ap_phi_mux_m0_V_phi_fu_327_p4;
reg   [7:0] ap_phi_mux_t1_V_phi_fu_340_p4;
reg   [7:0] ap_phi_mux_t0_V_phi_fu_352_p4;
wire   [7:0] ap_phi_reg_pp1_iter0_buf2_V_reg_373;
reg   [7:0] ap_phi_reg_pp1_iter1_buf2_V_reg_373;
reg   [7:0] ap_phi_reg_pp1_iter2_buf2_V_reg_373;
reg   [7:0] ap_phi_reg_pp1_iter3_buf2_V_reg_373;
wire   [7:0] buf0_V_fu_552_p5;
wire   [7:0] buf1_V_fu_565_p5;
wire   [63:0] zext_ln534_6_fu_525_p1;
wire   [63:0] zext_ln534_5_fu_532_p1;
wire   [63:0] zext_ln117_fu_539_p1;
reg   [1:0] tp_fu_104;
wire   [1:0] tp_1_fu_468_p3;
reg   [1:0] mid_fu_108;
wire   [1:0] mid_2_fu_476_p3;
reg   [1:0] bottom_fu_112;
wire   [1:0] bottom_2_fu_484_p3;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln870_fu_462_p2;
wire   [8:0] zext_ln45_fu_578_p1;
wire   [8:0] zext_ln46_fu_586_p1;
wire   [8:0] A00_fu_598_p2;
wire   [8:0] zext_ln45_1_fu_582_p1;
wire   [8:0] zext_ln1460_1_fu_590_p1;
wire   [8:0] add_ln49_fu_608_p2;
wire   [9:0] zext_ln49_fu_614_p1;
wire   [9:0] zext_ln46_1_fu_604_p1;
wire   [8:0] zext_ln48_fu_628_p1;
wire   [8:0] zext_ln47_fu_624_p1;
wire   [8:0] add_ln48_fu_636_p2;
wire   [8:0] zext_ln48_1_fu_632_p1;
wire   [8:0] zext_ln1460_2_fu_594_p1;
wire   [8:0] add_ln50_2_fu_646_p2;
wire   [9:0] zext_ln50_4_fu_652_p1;
wire   [9:0] zext_ln50_3_fu_642_p1;
wire   [9:0] A0_1_fu_618_p2;
wire   [9:0] A2_1_fu_662_p3;
wire   [10:0] zext_ln52_6_fu_674_p1;
wire   [10:0] zext_ln52_4_fu_670_p1;
wire   [10:0] A1_1_fu_692_p3;
wire   [11:0] zext_ln52_7_fu_703_p1;
wire   [11:0] zext_ln52_5_fu_699_p1;
wire   [11:0] add_ln52_3_fu_706_p2;
wire   [8:0] zext_ln1460_fu_737_p1;
wire   [8:0] zext_ln878_1_fu_733_p1;
wire   [8:0] zext_ln50_fu_747_p1;
wire   [8:0] zext_ln878_fu_729_p1;
wire   [8:0] add_ln50_fu_755_p2;
wire   [9:0] zext_ln50_2_fu_761_p1;
wire   [9:0] zext_ln50_1_fu_751_p1;
wire   [9:0] add_ln50_1_fu_765_p2;
wire   [8:0] A0_fu_741_p2;
wire   [10:0] A1_fu_771_p3;
wire   [10:0] zext_ln52_2_fu_787_p1;
wire   [10:0] zext_ln52_fu_779_p1;
wire   [10:0] add_ln52_fu_791_p2;
wire   [11:0] zext_ln52_3_fu_797_p1;
wire   [11:0] zext_ln52_1_fu_783_p1;
wire   [11:0] add_ln52_1_fu_801_p2;
wire   [12:0] row_ind_V_3_fu_818_p2;
wire   [0:0] icmp_ln870_8_fu_824_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_175;
reg    ap_condition_187;
reg    ap_condition_723;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_0_address0),
    .ce0(buf_V_0_ce0),
    .q0(buf_V_0_q0),
    .address1(buf_V_0_address1),
    .ce1(buf_V_0_ce1),
    .we1(buf_V_0_we1),
    .d1(buf_V_0_d1)
);

edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_address0),
    .ce0(buf_V_1_ce0),
    .q0(buf_V_1_q0),
    .address1(buf_V_1_address1),
    .ce1(buf_V_1_ce1),
    .we1(buf_V_1_we1),
    .d1(buf_V_1_d1)
);

edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s_buf_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_address0),
    .ce0(buf_V_2_ce0),
    .q0(buf_V_2_q0),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .we1(buf_V_2_we1),
    .d1(buf_V_2_d1)
);

edge_canny_detector_xfExtractPixels_1_1_0_s src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384(
    .ap_ready(src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_ready),
    .p_read1(buf0_V_fu_552_p5),
    .ap_return(src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_return)
);

edge_canny_detector_xfExtractPixels_1_1_0_s src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389(
    .ap_ready(src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_ready),
    .p_read1(buf1_V_fu_565_p5),
    .ap_return(src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return)
);

edge_canny_detector_xfExtractPixels_1_1_0_s b2_V_xfExtractPixels_1_1_0_s_fu_394(
    .ap_ready(b2_V_xfExtractPixels_1_1_0_s_fu_394_ap_ready),
    .p_read1(ap_phi_reg_pp1_iter3_buf2_V_reg_373),
    .ap_return(b2_V_xfExtractPixels_1_1_0_s_fu_394_ap_return)
);

edge_canny_detector_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U30(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(tp_fu_104),
    .dout(buf0_V_fu_552_p5)
);

edge_canny_detector_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U31(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(mid_fu_108),
    .dout(buf1_V_fu_565_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter3_state9)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0)))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter3_state9))) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
                A2_reg_361[9 : 2] <= phitmp1_reg_946[9 : 2];
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
                A2_reg_361[2] <= 1'b0;
        A2_reg_361[3] <= 1'b0;
        A2_reg_361[4] <= 1'b0;
        A2_reg_361[5] <= 1'b0;
        A2_reg_361[6] <= 1'b0;
        A2_reg_361[7] <= 1'b0;
        A2_reg_361[8] <= 1'b0;
        A2_reg_361[9] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_175)) begin
        if (((cmp_i_i338_i_reg_880 == 1'd0) & (icmp_ln878_7_fu_519_p2 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_buf2_V_reg_373 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_buf2_V_reg_373 <= ap_phi_reg_pp1_iter0_buf2_V_reg_373;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_187)) begin
        if (((cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_buf2_V_reg_373 <= gray_img_src_4207_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_buf2_V_reg_373 <= ap_phi_reg_pp1_iter1_buf2_V_reg_373;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
        b0_V_reg_298 <= b1_V_reg_286;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        b0_V_reg_298 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
        b1_V_reg_286 <= b2_V_reg_931;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        b1_V_reg_286 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        if ((~(ap_phi_mux_row_ind_V_phi_fu_266_p4 == 13'd2) & ~(ap_phi_mux_row_ind_V_phi_fu_266_p4 == 13'd0))) begin
            bottom_fu_112 <= bottom_2_fu_484_p3;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_266_p4 == 13'd2)) begin
            bottom_fu_112 <= 2'd2;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_266_p4 == 13'd0)) begin
            bottom_fu_112 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_10_reg_274 <= col_V_11_reg_884;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        col_V_10_reg_274 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln878_fu_415_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        col_V_reg_239 <= col_V_9_fu_409_p2;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        col_V_reg_239 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
        m0_V_reg_323 <= m1_V_reg_311;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        m0_V_reg_323 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
        m1_V_reg_311 <= src_buf2_V_2_reg_926;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        m1_V_reg_311 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        if ((~(ap_phi_mux_row_ind_V_phi_fu_266_p4 == 13'd2) & ~(ap_phi_mux_row_ind_V_phi_fu_266_p4 == 13'd0))) begin
            mid_fu_108 <= mid_2_fu_476_p3;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_266_p4 == 13'd2)) begin
            mid_fu_108 <= 2'd1;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_266_p4 == 13'd0)) begin
            mid_fu_108 <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        row_V_reg_250 <= 11'd1;
    end else if (((gaussian_mat_4209_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        row_V_reg_250 <= row_V_3_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        row_ind_V_reg_262 <= 13'd2;
    end else if (((gaussian_mat_4209_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        row_ind_V_reg_262 <= row_ind_V_4_fu_830_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
        t0_V_reg_348 <= t1_V_reg_336;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        t0_V_reg_348 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
        t1_V_reg_336 <= src_buf1_V_2_reg_921;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        t1_V_reg_336 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        if ((~(ap_phi_mux_row_ind_V_phi_fu_266_p4 == 13'd2) & ~(ap_phi_mux_row_ind_V_phi_fu_266_p4 == 13'd0))) begin
            tp_fu_104 <= tp_1_fu_468_p3;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_266_p4 == 13'd2)) begin
            tp_fu_104 <= 2'd0;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_266_p4 == 13'd0)) begin
            tp_fu_104 <= 2'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_7_reg_889_pp1_iter2_reg == 1'd0))) begin
        add_ln50_3_reg_936 <= add_ln50_3_fu_656_p2;
        add_ln52_2_reg_941 <= add_ln52_2_fu_678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_buf2_V_reg_373 <= ap_phi_reg_pp1_iter2_buf2_V_reg_373;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln878_7_reg_889_pp1_iter2_reg == 1'd0))) begin
        b2_V_reg_931 <= b2_V_xfExtractPixels_1_1_0_s_fu_394_ap_return;
        phitmp1_reg_946[9 : 2] <= phitmp1_fu_684_p3[9 : 2];
        src_buf1_V_2_reg_921 <= src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_return;
        src_buf2_V_2_reg_926 <= src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln878_7_fu_519_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        bottom_load_2_reg_893 <= bottom_fu_112;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd0))) begin
        cmp_i_i338_i_reg_880 <= cmp_i_i338_i_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_10_reg_274_pp1_iter1_reg <= col_V_10_reg_274;
        icmp_ln878_7_reg_889 <= icmp_ln878_7_fu_519_p2;
        icmp_ln878_7_reg_889_pp1_iter1_reg <= icmp_ln878_7_reg_889;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        col_V_11_reg_884 <= col_V_11_fu_513_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_7_reg_889_pp1_iter1_reg == 1'd0))) begin
        icmp_ln870_9_reg_917 <= icmp_ln870_9_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln870_9_reg_917_pp1_iter3_reg <= icmp_ln870_9_reg_917;
        icmp_ln878_7_reg_889_pp1_iter2_reg <= icmp_ln878_7_reg_889_pp1_iter1_reg;
        icmp_ln878_7_reg_889_pp1_iter3_reg <= icmp_ln878_7_reg_889_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln878_reg_843 <= icmp_ln878_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln878_fu_415_p2 == 1'd0))) begin
        zext_ln534_reg_847[10 : 0] <= zext_ln534_fu_421_p1[10 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln878_fu_415_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_condition_pp1_exit_iter3_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter3_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln878_7_fu_519_p2 == 1'd1))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_b0_V_phi_fu_302_p4 = b1_V_reg_286;
    end else begin
        ap_phi_mux_b0_V_phi_fu_302_p4 = b0_V_reg_298;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_b1_V_phi_fu_290_p4 = b2_V_reg_931;
    end else begin
        ap_phi_mux_b1_V_phi_fu_290_p4 = b1_V_reg_286;
    end
end

always @ (*) begin
    if (((icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_col_V_10_phi_fu_278_p4 = col_V_11_reg_884;
    end else begin
        ap_phi_mux_col_V_10_phi_fu_278_p4 = col_V_10_reg_274;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_m0_V_phi_fu_327_p4 = m1_V_reg_311;
    end else begin
        ap_phi_mux_m0_V_phi_fu_327_p4 = m0_V_reg_323;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_m1_V_phi_fu_315_p4 = src_buf2_V_2_reg_926;
    end else begin
        ap_phi_mux_m1_V_phi_fu_315_p4 = m1_V_reg_311;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_t0_V_phi_fu_352_p4 = t1_V_reg_336;
    end else begin
        ap_phi_mux_t0_V_phi_fu_352_p4 = t0_V_reg_348;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln878_7_reg_889_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_t1_V_phi_fu_340_p4 = src_buf1_V_2_reg_921;
    end else begin
        ap_phi_mux_t1_V_phi_fu_340_p4 = t1_V_reg_336;
    end
end

always @ (*) begin
    if (((cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd0))) begin
        buf_V_0_address1 = zext_ln534_5_fu_532_p1;
    end else if (((cmp_i_i338_i_reg_880 == 1'd0) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd0))) begin
        buf_V_0_address1 = zext_ln534_6_fu_525_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_V_0_address1 = zext_ln534_fu_421_p1;
    end else begin
        buf_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_0_ce0 = 1'b1;
    end else begin
        buf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd0)) | ((cmp_i_i338_i_reg_880 == 1'd0) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        buf_V_0_ce1 = 1'b1;
    end else begin
        buf_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd0))) begin
        buf_V_0_d1 = gray_img_src_4207_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((cmp_i_i338_i_reg_880 == 1'd0) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd0)))) begin
        buf_V_0_d1 = 8'd0;
    end else begin
        buf_V_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd0)) | ((cmp_i_i338_i_reg_880 == 1'd0) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln878_fu_415_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        buf_V_0_we1 = 1'b1;
    end else begin
        buf_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd1))) begin
        buf_V_1_address1 = zext_ln534_5_fu_532_p1;
    end else if (((cmp_i_i338_i_reg_880 == 1'd0) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd1))) begin
        buf_V_1_address1 = zext_ln534_6_fu_525_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_1_address1 = zext_ln534_reg_847;
    end else begin
        buf_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd1)) | ((cmp_i_i338_i_reg_880 == 1'd0) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i338_i_reg_880 == 1'd0) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd1))) begin
        buf_V_1_d1 = 8'd0;
    end else if ((((cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_V_1_d1 = gray_img_src_4207_dout;
    end else begin
        buf_V_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd1)) | ((icmp_ln878_reg_843 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((cmp_i_i338_i_reg_880 == 1'd0) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (bottom_load_2_reg_893 == 2'd1)))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_723)) begin
        if ((cmp_i_i338_i_reg_880 == 1'd1)) begin
            buf_V_2_address1 = zext_ln534_5_fu_532_p1;
        end else if ((cmp_i_i338_i_reg_880 == 1'd0)) begin
            buf_V_2_address1 = zext_ln534_6_fu_525_p1;
        end else begin
            buf_V_2_address1 = 'bx;
        end
    end else begin
        buf_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(bottom_load_2_reg_893 == 2'd1) & ~(bottom_load_2_reg_893 == 2'd0) & (cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(bottom_load_2_reg_893 == 2'd1) & ~(bottom_load_2_reg_893 == 2'd0) & (cmp_i_i338_i_reg_880 == 1'd0) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_723)) begin
        if ((cmp_i_i338_i_reg_880 == 1'd1)) begin
            buf_V_2_d1 = gray_img_src_4207_dout;
        end else if ((cmp_i_i338_i_reg_880 == 1'd0)) begin
            buf_V_2_d1 = 8'd0;
        end else begin
            buf_V_2_d1 = 'bx;
        end
    end else begin
        buf_V_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(bottom_load_2_reg_893 == 2'd1) & ~(bottom_load_2_reg_893 == 2'd0) & (cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(bottom_load_2_reg_893 == 2'd1) & ~(bottom_load_2_reg_893 == 2'd0) & (cmp_i_i338_i_reg_880 == 1'd0) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((icmp_ln870_9_reg_917_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0)))) begin
        gaussian_mat_4209_blk_n = gaussian_mat_4209_full_n;
    end else begin
        gaussian_mat_4209_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((gaussian_mat_4209_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        gaussian_mat_4209_din = {{add_ln52_1_fu_801_p2[11:4]}};
    end else if (((icmp_ln870_9_reg_917_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001))) begin
        gaussian_mat_4209_din = {{add_ln52_3_fu_706_p2[11:4]}};
    end else begin
        gaussian_mat_4209_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln870_9_reg_917_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((gaussian_mat_4209_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        gaussian_mat_4209_write = 1'b1;
    end else begin
        gaussian_mat_4209_write = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln878_reg_843 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gray_img_src_4207_blk_n = gray_img_src_4207_empty_n;
    end else begin
        gray_img_src_4207_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op88_read_state7 == 1'b1)) | ((icmp_ln878_reg_843 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gray_img_src_4207_read = 1'b1;
    end else begin
        gray_img_src_4207_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln878_fu_415_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln878_fu_415_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln209_fu_426_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((gaussian_mat_4209_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A00_fu_598_p2 = (zext_ln45_fu_578_p1 + zext_ln46_fu_586_p1);

assign A0_1_fu_618_p2 = (zext_ln49_fu_614_p1 + zext_ln46_1_fu_604_p1);

assign A0_fu_741_p2 = (zext_ln1460_fu_737_p1 + zext_ln878_1_fu_733_p1);

assign A1_1_fu_692_p3 = {{add_ln50_3_reg_936}, {1'd0}};

assign A1_fu_771_p3 = {{add_ln50_1_fu_765_p2}, {1'd0}};

assign A2_1_fu_662_p3 = {{ap_phi_mux_m1_V_phi_fu_315_p4}, {2'd0}};

assign add_ln48_fu_636_p2 = (zext_ln48_fu_628_p1 + zext_ln47_fu_624_p1);

assign add_ln49_fu_608_p2 = (zext_ln45_1_fu_582_p1 + zext_ln1460_1_fu_590_p1);

assign add_ln50_1_fu_765_p2 = (zext_ln50_2_fu_761_p1 + zext_ln50_1_fu_751_p1);

assign add_ln50_2_fu_646_p2 = (zext_ln48_1_fu_632_p1 + zext_ln1460_2_fu_594_p1);

assign add_ln50_3_fu_656_p2 = (zext_ln50_4_fu_652_p1 + zext_ln50_3_fu_642_p1);

assign add_ln50_fu_755_p2 = (zext_ln50_fu_747_p1 + zext_ln878_fu_729_p1);

assign add_ln52_1_fu_801_p2 = (zext_ln52_3_fu_797_p1 + zext_ln52_1_fu_783_p1);

assign add_ln52_2_fu_678_p2 = (zext_ln52_6_fu_674_p1 + zext_ln52_4_fu_670_p1);

assign add_ln52_3_fu_706_p2 = (zext_ln52_7_fu_703_p1 + zext_ln52_5_fu_699_p1);

assign add_ln52_fu_791_p2 = (zext_ln52_2_fu_787_p1 + zext_ln52_fu_779_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln878_reg_843 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (gray_img_src_4207_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln878_reg_843 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (gray_img_src_4207_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((icmp_ln870_9_reg_917_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (gaussian_mat_4209_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gray_img_src_4207_empty_n == 1'b0) & (ap_predicate_op88_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((icmp_ln870_9_reg_917_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (gaussian_mat_4209_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gray_img_src_4207_empty_n == 1'b0) & (ap_predicate_op88_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((icmp_ln870_9_reg_917_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (gaussian_mat_4209_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gray_img_src_4207_empty_n == 1'b0) & (ap_predicate_op88_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp1_stage0_iter4 = ((icmp_ln870_9_reg_917_pp1_iter3_reg == 1'd0) & (gaussian_mat_4209_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln878_reg_843 == 1'd0) & (gray_img_src_4207_empty_n == 1'b0));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = ((gray_img_src_4207_empty_n == 1'b0) & (ap_predicate_op88_read_state7 == 1'b1));
end

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_175 = ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_187 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_723 = (~(bottom_load_2_reg_893 == 2'd1) & ~(bottom_load_2_reg_893 == 2'd0) & (icmp_ln878_7_reg_889 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_row_ind_V_phi_fu_266_p4 = row_ind_V_reg_262;

assign ap_phi_reg_pp1_iter0_buf2_V_reg_373 = 'bx;

always @ (*) begin
    ap_predicate_op88_read_state7 = ((cmp_i_i338_i_reg_880 == 1'd1) & (icmp_ln878_7_reg_889 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign bottom_2_fu_484_p3 = ((icmp_ln870_fu_462_p2[0:0] == 1'b1) ? 2'd1 : bottom_fu_112);

assign buf_V_0_address0 = zext_ln117_fu_539_p1;

assign buf_V_1_address0 = zext_ln117_fu_539_p1;

assign buf_V_2_address0 = zext_ln117_fu_539_p1;

assign cmp_i_i338_i_fu_507_p2 = ((row_V_reg_250 < 11'd1080) ? 1'b1 : 1'b0);

assign col_V_11_fu_513_p2 = (ap_phi_mux_col_V_10_phi_fu_278_p4 + 11'd1);

assign col_V_9_fu_409_p2 = (col_V_reg_239 + 11'd1);

assign icmp_ln209_fu_426_p2 = ((row_V_reg_250 == 11'd1081) ? 1'b1 : 1'b0);

assign icmp_ln870_8_fu_824_p2 = ((row_ind_V_3_fu_818_p2 == 13'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_9_fu_546_p2 = ((col_V_10_reg_274_pp1_iter1_reg == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_462_p2 = ((row_ind_V_reg_262 == 13'd1) ? 1'b1 : 1'b0);

assign icmp_ln878_7_fu_519_p2 = ((ap_phi_mux_col_V_10_phi_fu_278_p4 == 11'd1920) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_415_p2 = ((col_V_reg_239 == 11'd1920) ? 1'b1 : 1'b0);

assign mid_2_fu_476_p3 = ((icmp_ln870_fu_462_p2[0:0] == 1'b1) ? 2'd0 : mid_fu_108);

assign phitmp1_fu_684_p3 = {{src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return}, {2'd0}};

assign row_V_3_fu_723_p2 = (row_V_reg_250 + 11'd1);

assign row_ind_V_3_fu_818_p2 = (row_ind_V_reg_262 + 13'd1);

assign row_ind_V_4_fu_830_p3 = ((icmp_ln870_8_fu_824_p2[0:0] == 1'b1) ? 13'd0 : row_ind_V_3_fu_818_p2);

assign start_out = real_start;

assign tp_1_fu_468_p3 = ((icmp_ln870_fu_462_p2[0:0] == 1'b1) ? 2'd2 : tp_fu_104);

assign zext_ln117_fu_539_p1 = col_V_10_reg_274_pp1_iter1_reg;

assign zext_ln1460_1_fu_590_p1 = b2_V_xfExtractPixels_1_1_0_s_fu_394_ap_return;

assign zext_ln1460_2_fu_594_p1 = src_buf2_V_2_xfExtractPixels_1_1_0_s_fu_389_ap_return;

assign zext_ln1460_fu_737_p1 = b0_V_reg_298;

assign zext_ln45_1_fu_582_p1 = src_buf1_V_2_xfExtractPixels_1_1_0_s_fu_384_ap_return;

assign zext_ln45_fu_578_p1 = ap_phi_mux_t0_V_phi_fu_352_p4;

assign zext_ln46_1_fu_604_p1 = A00_fu_598_p2;

assign zext_ln46_fu_586_p1 = ap_phi_mux_b0_V_phi_fu_302_p4;

assign zext_ln47_fu_624_p1 = ap_phi_mux_b1_V_phi_fu_290_p4;

assign zext_ln48_1_fu_632_p1 = ap_phi_mux_t1_V_phi_fu_340_p4;

assign zext_ln48_fu_628_p1 = ap_phi_mux_m0_V_phi_fu_327_p4;

assign zext_ln49_fu_614_p1 = add_ln49_fu_608_p2;

assign zext_ln50_1_fu_751_p1 = m0_V_reg_323;

assign zext_ln50_2_fu_761_p1 = add_ln50_fu_755_p2;

assign zext_ln50_3_fu_642_p1 = add_ln48_fu_636_p2;

assign zext_ln50_4_fu_652_p1 = add_ln50_2_fu_646_p2;

assign zext_ln50_fu_747_p1 = t1_V_reg_336;

assign zext_ln52_1_fu_783_p1 = A1_fu_771_p3;

assign zext_ln52_2_fu_787_p1 = A2_reg_361;

assign zext_ln52_3_fu_797_p1 = add_ln52_fu_791_p2;

assign zext_ln52_4_fu_670_p1 = A0_1_fu_618_p2;

assign zext_ln52_5_fu_699_p1 = A1_1_fu_692_p3;

assign zext_ln52_6_fu_674_p1 = A2_1_fu_662_p3;

assign zext_ln52_7_fu_703_p1 = add_ln52_2_reg_941;

assign zext_ln52_fu_779_p1 = A0_fu_741_p2;

assign zext_ln534_5_fu_532_p1 = col_V_10_reg_274;

assign zext_ln534_6_fu_525_p1 = col_V_10_reg_274;

assign zext_ln534_fu_421_p1 = col_V_reg_239;

assign zext_ln878_1_fu_733_p1 = t0_V_reg_348;

assign zext_ln878_fu_729_p1 = b1_V_reg_286;

always @ (posedge ap_clk) begin
    A2_reg_361[1:0] <= 2'b00;
    zext_ln534_reg_847[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    phitmp1_reg_946[1:0] <= 2'b00;
end

endmodule //edge_canny_detector_xFAverageGaussianMask3x3_0_0_1080_1920_0_1_1_1920_s
