// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module edge_canny_detector_xFMagnitudeKernel_2_2_1080_1920_3_3_1_5_5_1920_3840_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        gradx1_mat_4211_dout,
        gradx1_mat_4211_empty_n,
        gradx1_mat_4211_read,
        grady1_mat_4214_dout,
        grady1_mat_4214_empty_n,
        grady1_mat_4214_read,
        magnitude_mat_4216_din,
        magnitude_mat_4216_full_n,
        magnitude_mat_4216_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state15 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] gradx1_mat_4211_dout;
input   gradx1_mat_4211_empty_n;
output   gradx1_mat_4211_read;
input  [15:0] grady1_mat_4214_dout;
input   grady1_mat_4214_empty_n;
output   grady1_mat_4214_read;
output  [15:0] magnitude_mat_4216_din;
input   magnitude_mat_4216_full_n;
output   magnitude_mat_4216_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg gradx1_mat_4211_read;
reg grady1_mat_4214_read;
reg magnitude_mat_4216_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gradx1_mat_4211_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln79_reg_1810;
reg    grady1_mat_4214_blk_n;
reg    magnitude_mat_4216_blk_n;
reg    ap_enable_reg_pp0_iter11;
reg   [0:0] icmp_ln79_reg_1810_pp0_iter10_reg;
reg   [10:0] j_reg_278;
wire   [10:0] i_2_fu_289_p2;
reg   [10:0] i_2_reg_1796;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln72_fu_295_p2;
wire   [10:0] j_2_fu_301_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
reg    ap_block_state14_pp0_stage0_iter11;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln79_fu_307_p2;
reg   [0:0] icmp_ln79_reg_1810_pp0_iter1_reg;
reg   [0:0] icmp_ln79_reg_1810_pp0_iter2_reg;
reg   [0:0] icmp_ln79_reg_1810_pp0_iter3_reg;
reg   [0:0] icmp_ln79_reg_1810_pp0_iter4_reg;
reg   [0:0] icmp_ln79_reg_1810_pp0_iter5_reg;
reg   [0:0] icmp_ln79_reg_1810_pp0_iter6_reg;
reg   [0:0] icmp_ln79_reg_1810_pp0_iter7_reg;
reg   [0:0] icmp_ln79_reg_1810_pp0_iter8_reg;
reg   [0:0] icmp_ln79_reg_1810_pp0_iter9_reg;
wire   [15:0] p_1_fu_327_p3;
reg   [15:0] p_1_reg_1814;
wire  signed [31:0] sext_ln106_fu_357_p1;
wire  signed [31:0] sext_ln105_fu_361_p1;
wire  signed [31:0] grp_fu_1765_p2;
wire   [1:0] trunc_ln67_fu_364_p1;
reg   [1:0] trunc_ln67_reg_1836;
reg   [1:0] trunc_ln67_reg_1836_pp0_iter6_reg;
reg   [1:0] trunc_ln67_reg_1836_pp0_iter7_reg;
reg   [1:0] trunc_ln67_reg_1836_pp0_iter8_reg;
reg   [1:0] trunc_ln67_reg_1836_pp0_iter9_reg;
wire   [0:0] icmp_ln3471_fu_376_p2;
reg   [0:0] icmp_ln3471_reg_1841;
reg   [0:0] icmp_ln3471_reg_1841_pp0_iter6_reg;
reg   [0:0] icmp_ln3471_reg_1841_pp0_iter7_reg;
reg   [0:0] icmp_ln3471_reg_1841_pp0_iter8_reg;
reg   [0:0] icmp_ln3471_reg_1841_pp0_iter9_reg;
reg   [0:0] icmp_ln3471_reg_1841_pp0_iter10_reg;
wire   [0:0] xor_ln3471_fu_496_p2;
reg   [0:0] xor_ln3471_reg_1859;
reg   [0:0] xor_ln3471_reg_1859_pp0_iter6_reg;
reg   [0:0] xor_ln3471_reg_1859_pp0_iter7_reg;
reg   [0:0] xor_ln3471_reg_1859_pp0_iter8_reg;
reg   [0:0] xor_ln3471_reg_1859_pp0_iter9_reg;
reg   [0:0] xor_ln3471_reg_1859_pp0_iter10_reg;
wire   [8:0] select_ln3450_1_fu_565_p3;
reg   [8:0] select_ln3450_1_reg_1877;
reg   [0:0] tmp_6_reg_1882;
reg   [1:0] tmp_3_cast_reg_1888;
reg   [1:0] tmp_4_cast_reg_1893;
reg   [1:0] tmp_5_cast_reg_1898;
reg   [1:0] tmp_6_cast_reg_1903;
reg   [1:0] tmp_6_cast_reg_1903_pp0_iter6_reg;
reg   [1:0] tmp_7_cast_reg_1908;
reg   [1:0] tmp_7_cast_reg_1908_pp0_iter6_reg;
reg   [1:0] tmp_8_cast_reg_1913;
reg   [1:0] tmp_8_cast_reg_1913_pp0_iter6_reg;
reg   [1:0] tmp_8_cast_reg_1913_pp0_iter7_reg;
reg   [1:0] tmp_9_cast_reg_1918;
reg   [1:0] tmp_9_cast_reg_1918_pp0_iter6_reg;
reg   [1:0] tmp_9_cast_reg_1918_pp0_iter7_reg;
reg   [1:0] tmp_10_cast_reg_1923;
reg   [1:0] tmp_10_cast_reg_1923_pp0_iter6_reg;
reg   [1:0] tmp_10_cast_reg_1923_pp0_iter7_reg;
reg   [1:0] tmp_11_cast_reg_1928;
reg   [1:0] tmp_11_cast_reg_1928_pp0_iter6_reg;
reg   [1:0] tmp_11_cast_reg_1928_pp0_iter7_reg;
reg   [1:0] tmp_11_cast_reg_1928_pp0_iter8_reg;
reg   [1:0] tmp_12_cast_reg_1933;
reg   [1:0] tmp_12_cast_reg_1933_pp0_iter6_reg;
reg   [1:0] tmp_12_cast_reg_1933_pp0_iter7_reg;
reg   [1:0] tmp_12_cast_reg_1933_pp0_iter8_reg;
reg   [1:0] tmp_1313_cast_reg_1938;
reg   [1:0] tmp_1313_cast_reg_1938_pp0_iter6_reg;
reg   [1:0] tmp_1313_cast_reg_1938_pp0_iter7_reg;
reg   [1:0] tmp_1313_cast_reg_1938_pp0_iter8_reg;
reg   [1:0] tmp_1313_cast_reg_1938_pp0_iter9_reg;
reg   [1:0] tmp_14_cast_reg_1943;
reg   [1:0] tmp_14_cast_reg_1943_pp0_iter6_reg;
reg   [1:0] tmp_14_cast_reg_1943_pp0_iter7_reg;
reg   [1:0] tmp_14_cast_reg_1943_pp0_iter8_reg;
reg   [1:0] tmp_14_cast_reg_1943_pp0_iter9_reg;
wire   [0:0] xor_ln3471_1_fu_689_p2;
reg   [0:0] xor_ln3471_1_reg_1948;
reg   [0:0] xor_ln3471_1_reg_1948_pp0_iter7_reg;
reg   [0:0] xor_ln3471_1_reg_1948_pp0_iter8_reg;
reg   [0:0] xor_ln3471_1_reg_1948_pp0_iter9_reg;
reg   [0:0] xor_ln3471_1_reg_1948_pp0_iter10_reg;
wire   [0:0] xor_ln3471_2_fu_761_p2;
reg   [0:0] xor_ln3471_2_reg_1963;
reg   [0:0] xor_ln3471_2_reg_1963_pp0_iter7_reg;
reg   [0:0] xor_ln3471_2_reg_1963_pp0_iter8_reg;
reg   [0:0] xor_ln3471_2_reg_1963_pp0_iter9_reg;
reg   [0:0] xor_ln3471_2_reg_1963_pp0_iter10_reg;
wire   [0:0] xor_ln3471_3_fu_838_p2;
reg   [0:0] xor_ln3471_3_reg_1978;
reg   [0:0] xor_ln3471_3_reg_1978_pp0_iter7_reg;
reg   [0:0] xor_ln3471_3_reg_1978_pp0_iter8_reg;
reg   [0:0] xor_ln3471_3_reg_1978_pp0_iter9_reg;
reg   [0:0] xor_ln3471_3_reg_1978_pp0_iter10_reg;
wire   [17:0] select_ln3450_4_fu_901_p3;
reg   [17:0] select_ln3450_4_reg_1993;
reg   [0:0] tmp_9_reg_1998;
wire   [0:0] xor_ln3471_4_fu_917_p2;
reg   [0:0] xor_ln3471_4_reg_2004;
reg   [0:0] xor_ln3471_4_reg_2004_pp0_iter8_reg;
reg   [0:0] xor_ln3471_4_reg_2004_pp0_iter9_reg;
reg   [0:0] xor_ln3471_4_reg_2004_pp0_iter10_reg;
wire   [0:0] xor_ln3471_5_fu_992_p2;
reg   [0:0] xor_ln3471_5_reg_2017;
reg   [0:0] xor_ln3471_5_reg_2017_pp0_iter8_reg;
reg   [0:0] xor_ln3471_5_reg_2017_pp0_iter9_reg;
reg   [0:0] xor_ln3471_5_reg_2017_pp0_iter10_reg;
wire   [23:0] select_ln3450_6_fu_1056_p3;
reg   [23:0] select_ln3450_6_reg_2030;
wire   [0:0] tmp_11_fu_1064_p3;
reg   [0:0] tmp_11_reg_2035;
wire   [0:0] xor_ln3471_6_fu_1072_p2;
reg   [0:0] xor_ln3471_6_reg_2040;
reg   [0:0] xor_ln3471_6_reg_2040_pp0_iter8_reg;
reg   [0:0] xor_ln3471_6_reg_2040_pp0_iter9_reg;
reg   [0:0] xor_ln3471_6_reg_2040_pp0_iter10_reg;
wire   [0:0] xor_ln3471_7_fu_1149_p2;
reg   [0:0] xor_ln3471_7_reg_2053;
reg   [0:0] xor_ln3471_7_reg_2053_pp0_iter9_reg;
reg   [0:0] xor_ln3471_7_reg_2053_pp0_iter10_reg;
wire   [0:0] xor_ln3471_8_fu_1230_p2;
reg   [0:0] xor_ln3471_8_reg_2063;
reg   [0:0] xor_ln3471_8_reg_2063_pp0_iter9_reg;
reg   [0:0] xor_ln3471_8_reg_2063_pp0_iter10_reg;
reg   [0:0] tmp_14_reg_2073;
wire   [29:0] empty_fu_1309_p1;
reg   [29:0] empty_reg_2079;
wire   [0:0] xor_ln3471_9_fu_1313_p2;
reg   [0:0] xor_ln3471_9_reg_2084;
reg   [0:0] xor_ln3471_9_reg_2084_pp0_iter10_reg;
wire   [0:0] xor_ln3471_10_fu_1389_p2;
reg   [0:0] xor_ln3471_10_reg_2092;
reg   [0:0] xor_ln3471_10_reg_2092_pp0_iter10_reg;
wire   [0:0] tmp_16_fu_1466_p3;
reg   [0:0] tmp_16_reg_2100;
wire   [0:0] xor_ln3471_11_fu_1474_p2;
reg   [0:0] xor_ln3471_11_reg_2105;
reg   [0:0] xor_ln3471_11_reg_2105_pp0_iter10_reg;
wire   [29:0] empty_44_fu_1480_p1;
reg   [29:0] empty_44_reg_2113;
wire   [0:0] xor_ln3471_12_fu_1556_p2;
reg   [0:0] xor_ln3471_12_reg_2118;
wire   [0:0] xor_ln3471_13_fu_1642_p2;
reg   [0:0] xor_ln3471_13_reg_2123;
wire   [0:0] xor_ln3471_14_fu_1738_p2;
reg   [0:0] xor_ln3471_14_reg_2128;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg   [10:0] i_reg_267;
reg    ap_block_state1;
wire    ap_CS_fsm_state15;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] tmp_1_fu_313_p3;
wire   [15:0] sub_ln98_fu_321_p2;
wire   [0:0] tmp_3_fu_335_p3;
wire   [15:0] sub_ln99_fu_343_p2;
wire   [15:0] q_1_fu_349_p3;
wire  signed [31:0] grp_fu_1771_p3;
wire   [1:0] tmp_4_fu_367_p4;
wire   [1:0] tmp_2_fu_391_p4;
wire   [3:0] R_2_fu_400_p3;
wire   [4:0] R_2_0_cast_fu_408_p1;
wire   [4:0] tmpR_1_fu_412_p2;
wire   [2:0] tmp_fu_418_p4;
wire   [1:0] tmp_13_cast_fu_382_p4;
wire   [4:0] R_1_1_fu_428_p3;
wire   [2:0] tmpQ_s_fu_440_p3;
wire   [2:0] or_ln3457_fu_448_p2;
wire  signed [5:0] R_1_1_cast_fu_436_p1;
wire   [5:0] zext_ln3459_fu_454_p1;
wire   [2:0] or_ln3467_fu_464_p2;
wire   [5:0] zext_ln3469_fu_470_p1;
wire   [5:0] sub_ln3459_fu_458_p2;
wire   [5:0] add_ln3469_fu_474_p2;
wire   [5:0] select_ln3450_fu_480_p3;
wire   [0:0] tmp_5_fu_488_p3;
wire   [1:0] tmp_2_cast_fu_502_p4;
wire   [7:0] R_1_2_fu_511_p3;
wire   [3:0] tmpQ_1_fu_523_p4;
wire   [3:0] or_ln3457_1_fu_533_p2;
wire  signed [8:0] R_1_2_cast_fu_519_p1;
wire   [8:0] zext_ln3459_1_fu_539_p1;
wire   [3:0] or_ln3467_1_fu_549_p2;
wire   [8:0] zext_ln3469_1_fu_555_p1;
wire   [8:0] add_ln3469_1_fu_559_p2;
wire   [8:0] sub_ln3459_1_fu_543_p2;
wire   [10:0] R_1_3_fu_694_p3;
wire   [4:0] tmpQ_3_fu_704_p5;
wire   [4:0] or_ln3457_2_fu_714_p2;
wire  signed [11:0] R_1_3_cast_fu_700_p1;
wire   [11:0] zext_ln3459_2_fu_720_p1;
wire   [4:0] or_ln3467_2_fu_730_p2;
wire   [11:0] zext_ln3469_2_fu_736_p1;
wire   [11:0] add_ln3469_2_fu_740_p2;
wire   [11:0] sub_ln3459_2_fu_724_p2;
wire   [11:0] select_ln3450_2_fu_746_p3;
wire   [0:0] tmp_7_fu_753_p3;
wire   [13:0] R_1_4_fu_767_p3;
wire   [5:0] tmpQ_4_fu_778_p6;
wire   [5:0] or_ln3457_3_fu_790_p2;
wire  signed [14:0] R_1_4_cast_fu_774_p1;
wire   [14:0] zext_ln3459_3_fu_796_p1;
wire   [5:0] or_ln3467_3_fu_806_p2;
wire   [14:0] zext_ln3469_3_fu_812_p1;
wire   [14:0] add_ln3469_3_fu_816_p2;
wire   [14:0] sub_ln3459_3_fu_800_p2;
wire   [14:0] select_ln3450_3_fu_822_p3;
wire   [0:0] tmp_8_fu_830_p3;
wire   [16:0] R_1_5_fu_844_p3;
wire   [6:0] tmpQ_5_fu_855_p7;
wire   [6:0] or_ln3457_4_fu_869_p2;
wire  signed [17:0] R_1_5_cast_fu_851_p1;
wire   [17:0] zext_ln3459_4_fu_875_p1;
wire   [6:0] or_ln3467_4_fu_885_p2;
wire   [17:0] zext_ln3469_4_fu_891_p1;
wire   [17:0] add_ln3469_4_fu_895_p2;
wire   [17:0] sub_ln3459_4_fu_879_p2;
wire   [19:0] R_1_6_fu_922_p3;
wire   [7:0] tmpQ_6_fu_932_p8;
wire   [7:0] or_ln3457_5_fu_945_p2;
wire  signed [20:0] R_1_6_cast_fu_928_p1;
wire   [20:0] zext_ln3459_5_fu_951_p1;
wire   [7:0] or_ln3467_5_fu_961_p2;
wire   [20:0] zext_ln3469_5_fu_967_p1;
wire   [20:0] add_ln3469_5_fu_971_p2;
wire   [20:0] sub_ln3459_5_fu_955_p2;
wire   [20:0] select_ln3450_5_fu_977_p3;
wire   [0:0] tmp_10_fu_984_p3;
wire   [22:0] R_1_7_fu_998_p3;
wire   [8:0] tmpQ_7_fu_1009_p9;
wire   [8:0] or_ln3457_6_fu_1024_p2;
wire  signed [23:0] R_1_7_cast_fu_1005_p1;
wire   [23:0] zext_ln3459_6_fu_1030_p1;
wire   [8:0] or_ln3467_6_fu_1040_p2;
wire   [23:0] zext_ln3469_6_fu_1046_p1;
wire   [23:0] add_ln3469_6_fu_1050_p2;
wire   [23:0] sub_ln3459_6_fu_1034_p2;
wire   [25:0] R_1_8_fu_1078_p3;
wire   [9:0] tmpQ_8_fu_1088_p10;
wire   [9:0] or_ln3457_7_fu_1102_p2;
wire  signed [26:0] R_1_8_cast_fu_1084_p1;
wire   [26:0] zext_ln3459_7_fu_1108_p1;
wire   [9:0] or_ln3467_7_fu_1118_p2;
wire   [26:0] zext_ln3469_7_fu_1124_p1;
wire   [26:0] add_ln3469_7_fu_1128_p2;
wire   [26:0] sub_ln3459_7_fu_1112_p2;
wire   [26:0] select_ln3450_7_fu_1134_p3;
wire   [0:0] tmp_12_fu_1141_p3;
wire   [28:0] R_1_9_fu_1155_p3;
wire   [10:0] tmpQ_9_fu_1166_p11;
wire   [10:0] or_ln3457_8_fu_1182_p2;
wire  signed [29:0] R_1_9_cast_fu_1162_p1;
wire   [29:0] zext_ln3459_8_fu_1188_p1;
wire   [10:0] or_ln3467_8_fu_1198_p2;
wire   [29:0] zext_ln3469_8_fu_1204_p1;
wire   [29:0] add_ln3469_8_fu_1208_p2;
wire   [29:0] sub_ln3459_8_fu_1192_p2;
wire   [29:0] select_ln3450_8_fu_1214_p3;
wire   [0:0] tmp_13_fu_1222_p3;
wire   [11:0] tmpQ_2_fu_1243_p12;
wire   [11:0] or_ln3457_9_fu_1261_p2;
wire   [31:0] R_1_s_fu_1236_p3;
wire   [31:0] zext_ln3459_9_fu_1267_p1;
wire   [11:0] or_ln3467_9_fu_1277_p2;
wire   [31:0] zext_ln3469_9_fu_1283_p1;
wire   [31:0] add_ln3469_9_fu_1287_p2;
wire   [31:0] sub_ln3459_9_fu_1271_p2;
wire   [31:0] select_ln3450_9_fu_1293_p3;
wire   [12:0] tmpQ_10_fu_1324_p13;
wire   [12:0] or_ln3457_10_fu_1342_p2;
wire   [31:0] R_1_10_fu_1318_p3;
wire   [31:0] zext_ln3459_10_fu_1348_p1;
wire   [12:0] or_ln3467_10_fu_1358_p2;
wire   [31:0] zext_ln3469_10_fu_1364_p1;
wire   [31:0] add_ln3469_10_fu_1368_p2;
wire   [31:0] sub_ln3459_10_fu_1352_p2;
wire   [31:0] select_ln3450_10_fu_1374_p3;
wire   [0:0] tmp_15_fu_1381_p3;
wire   [29:0] empty_43_fu_1395_p1;
wire   [13:0] tmpQ_11_fu_1406_p14;
wire   [13:0] or_ln3457_11_fu_1426_p2;
wire   [31:0] R_1_11_fu_1399_p3;
wire   [31:0] zext_ln3459_11_fu_1432_p1;
wire   [13:0] or_ln3467_11_fu_1442_p2;
wire   [31:0] zext_ln3469_11_fu_1448_p1;
wire   [31:0] add_ln3469_11_fu_1452_p2;
wire   [31:0] sub_ln3459_11_fu_1436_p2;
wire   [31:0] select_ln3450_11_fu_1458_p3;
wire   [14:0] tmpQ_12_fu_1490_p15;
wire   [14:0] or_ln3457_12_fu_1509_p2;
wire   [31:0] R_1_12_fu_1484_p3;
wire   [31:0] zext_ln3459_12_fu_1515_p1;
wire   [14:0] or_ln3467_12_fu_1525_p2;
wire   [31:0] zext_ln3469_12_fu_1531_p1;
wire   [31:0] add_ln3469_12_fu_1535_p2;
wire   [31:0] sub_ln3459_12_fu_1519_p2;
wire   [31:0] select_ln3450_12_fu_1541_p3;
wire   [0:0] tmp_17_fu_1548_p3;
wire   [29:0] empty_45_fu_1562_p1;
wire   [15:0] tmpQ_13_fu_1573_p16;
wire   [15:0] or_ln3457_13_fu_1594_p2;
wire   [31:0] R_1_13_fu_1566_p3;
wire   [31:0] zext_ln3459_13_fu_1600_p1;
wire   [15:0] or_ln3467_13_fu_1610_p2;
wire   [31:0] zext_ln3469_13_fu_1616_p1;
wire   [31:0] add_ln3469_13_fu_1620_p2;
wire   [31:0] sub_ln3459_13_fu_1604_p2;
wire   [31:0] select_ln3450_13_fu_1626_p3;
wire   [0:0] tmp_18_fu_1634_p3;
wire   [29:0] empty_46_fu_1648_p1;
wire   [16:0] tmpQ_14_fu_1659_p17;
wire   [16:0] or_ln3457_14_fu_1682_p2;
wire   [31:0] R_1_14_fu_1652_p3;
wire   [31:0] zext_ln3459_14_fu_1688_p1;
wire   [16:0] or_ln3467_14_fu_1698_p2;
wire   [31:0] zext_ln3469_14_fu_1704_p1;
wire   [31:0] add_ln3469_14_fu_1708_p2;
wire   [31:0] sub_ln3459_14_fu_1692_p2;
wire   [0:0] tmp_19_fu_1714_p3;
wire   [0:0] tmp_20_fu_1722_p3;
wire   [0:0] select_ln3450_14_fu_1730_p3;
wire  signed [15:0] grp_fu_1765_p0;
wire  signed [15:0] grp_fu_1765_p1;
wire  signed [15:0] grp_fu_1771_p0;
wire  signed [15:0] grp_fu_1771_p1;
reg    grp_fu_1765_ce;
reg    grp_fu_1771_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
end

edge_canny_detector_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1765_p0),
    .din1(grp_fu_1765_p1),
    .ce(grp_fu_1765_ce),
    .dout(grp_fu_1765_p2)
);

edge_canny_detector_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1771_p0),
    .din1(grp_fu_1771_p1),
    .din2(grp_fu_1765_p2),
    .ce(grp_fu_1771_ce),
    .dout(grp_fu_1771_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln72_fu_295_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln72_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end else if (((icmp_ln72_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_reg_267 <= i_2_reg_1796;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_267 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln79_fu_307_p2 == 1'd0))) begin
        j_reg_278 <= j_2_fu_301_p2;
    end else if (((icmp_ln72_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_278 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1810_pp0_iter8_reg == 1'd0))) begin
        empty_44_reg_2113 <= empty_44_fu_1480_p1;
        tmp_16_reg_2100 <= select_ln3450_11_fu_1458_p3[32'd31];
        xor_ln3471_10_reg_2092 <= xor_ln3471_10_fu_1389_p2;
        xor_ln3471_11_reg_2105 <= xor_ln3471_11_fu_1474_p2;
        xor_ln3471_9_reg_2084 <= xor_ln3471_9_fu_1313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1810_pp0_iter7_reg == 1'd0))) begin
        empty_reg_2079 <= empty_fu_1309_p1;
        tmp_14_reg_2073 <= select_ln3450_9_fu_1293_p3[32'd31];
        xor_ln3471_7_reg_2053 <= xor_ln3471_7_fu_1149_p2;
        xor_ln3471_8_reg_2063 <= xor_ln3471_8_fu_1230_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_1796 <= i_2_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1810_pp0_iter4_reg == 1'd0))) begin
        icmp_ln3471_reg_1841 <= icmp_ln3471_fu_376_p2;
        select_ln3450_1_reg_1877 <= select_ln3450_1_fu_565_p3;
        tmp_10_cast_reg_1923 <= {{grp_fu_1771_p3[11:10]}};
        tmp_11_cast_reg_1928 <= {{grp_fu_1771_p3[9:8]}};
        tmp_12_cast_reg_1933 <= {{grp_fu_1771_p3[7:6]}};
        tmp_1313_cast_reg_1938 <= {{grp_fu_1771_p3[5:4]}};
        tmp_14_cast_reg_1943 <= {{grp_fu_1771_p3[3:2]}};
        tmp_3_cast_reg_1888 <= {{grp_fu_1771_p3[25:24]}};
        tmp_4_cast_reg_1893 <= {{grp_fu_1771_p3[23:22]}};
        tmp_5_cast_reg_1898 <= {{grp_fu_1771_p3[21:20]}};
        tmp_6_cast_reg_1903 <= {{grp_fu_1771_p3[19:18]}};
        tmp_6_reg_1882 <= select_ln3450_1_fu_565_p3[32'd8];
        tmp_7_cast_reg_1908 <= {{grp_fu_1771_p3[17:16]}};
        tmp_8_cast_reg_1913 <= {{grp_fu_1771_p3[15:14]}};
        tmp_9_cast_reg_1918 <= {{grp_fu_1771_p3[13:12]}};
        trunc_ln67_reg_1836 <= trunc_ln67_fu_364_p1;
        xor_ln3471_reg_1859 <= xor_ln3471_fu_496_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln3471_reg_1841_pp0_iter10_reg <= icmp_ln3471_reg_1841_pp0_iter9_reg;
        icmp_ln3471_reg_1841_pp0_iter6_reg <= icmp_ln3471_reg_1841;
        icmp_ln3471_reg_1841_pp0_iter7_reg <= icmp_ln3471_reg_1841_pp0_iter6_reg;
        icmp_ln3471_reg_1841_pp0_iter8_reg <= icmp_ln3471_reg_1841_pp0_iter7_reg;
        icmp_ln3471_reg_1841_pp0_iter9_reg <= icmp_ln3471_reg_1841_pp0_iter8_reg;
        icmp_ln79_reg_1810_pp0_iter10_reg <= icmp_ln79_reg_1810_pp0_iter9_reg;
        icmp_ln79_reg_1810_pp0_iter2_reg <= icmp_ln79_reg_1810_pp0_iter1_reg;
        icmp_ln79_reg_1810_pp0_iter3_reg <= icmp_ln79_reg_1810_pp0_iter2_reg;
        icmp_ln79_reg_1810_pp0_iter4_reg <= icmp_ln79_reg_1810_pp0_iter3_reg;
        icmp_ln79_reg_1810_pp0_iter5_reg <= icmp_ln79_reg_1810_pp0_iter4_reg;
        icmp_ln79_reg_1810_pp0_iter6_reg <= icmp_ln79_reg_1810_pp0_iter5_reg;
        icmp_ln79_reg_1810_pp0_iter7_reg <= icmp_ln79_reg_1810_pp0_iter6_reg;
        icmp_ln79_reg_1810_pp0_iter8_reg <= icmp_ln79_reg_1810_pp0_iter7_reg;
        icmp_ln79_reg_1810_pp0_iter9_reg <= icmp_ln79_reg_1810_pp0_iter8_reg;
        tmp_10_cast_reg_1923_pp0_iter6_reg <= tmp_10_cast_reg_1923;
        tmp_10_cast_reg_1923_pp0_iter7_reg <= tmp_10_cast_reg_1923_pp0_iter6_reg;
        tmp_11_cast_reg_1928_pp0_iter6_reg <= tmp_11_cast_reg_1928;
        tmp_11_cast_reg_1928_pp0_iter7_reg <= tmp_11_cast_reg_1928_pp0_iter6_reg;
        tmp_11_cast_reg_1928_pp0_iter8_reg <= tmp_11_cast_reg_1928_pp0_iter7_reg;
        tmp_12_cast_reg_1933_pp0_iter6_reg <= tmp_12_cast_reg_1933;
        tmp_12_cast_reg_1933_pp0_iter7_reg <= tmp_12_cast_reg_1933_pp0_iter6_reg;
        tmp_12_cast_reg_1933_pp0_iter8_reg <= tmp_12_cast_reg_1933_pp0_iter7_reg;
        tmp_1313_cast_reg_1938_pp0_iter6_reg <= tmp_1313_cast_reg_1938;
        tmp_1313_cast_reg_1938_pp0_iter7_reg <= tmp_1313_cast_reg_1938_pp0_iter6_reg;
        tmp_1313_cast_reg_1938_pp0_iter8_reg <= tmp_1313_cast_reg_1938_pp0_iter7_reg;
        tmp_1313_cast_reg_1938_pp0_iter9_reg <= tmp_1313_cast_reg_1938_pp0_iter8_reg;
        tmp_14_cast_reg_1943_pp0_iter6_reg <= tmp_14_cast_reg_1943;
        tmp_14_cast_reg_1943_pp0_iter7_reg <= tmp_14_cast_reg_1943_pp0_iter6_reg;
        tmp_14_cast_reg_1943_pp0_iter8_reg <= tmp_14_cast_reg_1943_pp0_iter7_reg;
        tmp_14_cast_reg_1943_pp0_iter9_reg <= tmp_14_cast_reg_1943_pp0_iter8_reg;
        tmp_6_cast_reg_1903_pp0_iter6_reg <= tmp_6_cast_reg_1903;
        tmp_7_cast_reg_1908_pp0_iter6_reg <= tmp_7_cast_reg_1908;
        tmp_8_cast_reg_1913_pp0_iter6_reg <= tmp_8_cast_reg_1913;
        tmp_8_cast_reg_1913_pp0_iter7_reg <= tmp_8_cast_reg_1913_pp0_iter6_reg;
        tmp_9_cast_reg_1918_pp0_iter6_reg <= tmp_9_cast_reg_1918;
        tmp_9_cast_reg_1918_pp0_iter7_reg <= tmp_9_cast_reg_1918_pp0_iter6_reg;
        trunc_ln67_reg_1836_pp0_iter6_reg <= trunc_ln67_reg_1836;
        trunc_ln67_reg_1836_pp0_iter7_reg <= trunc_ln67_reg_1836_pp0_iter6_reg;
        trunc_ln67_reg_1836_pp0_iter8_reg <= trunc_ln67_reg_1836_pp0_iter7_reg;
        trunc_ln67_reg_1836_pp0_iter9_reg <= trunc_ln67_reg_1836_pp0_iter8_reg;
        xor_ln3471_10_reg_2092_pp0_iter10_reg <= xor_ln3471_10_reg_2092;
        xor_ln3471_11_reg_2105_pp0_iter10_reg <= xor_ln3471_11_reg_2105;
        xor_ln3471_1_reg_1948_pp0_iter10_reg <= xor_ln3471_1_reg_1948_pp0_iter9_reg;
        xor_ln3471_1_reg_1948_pp0_iter7_reg <= xor_ln3471_1_reg_1948;
        xor_ln3471_1_reg_1948_pp0_iter8_reg <= xor_ln3471_1_reg_1948_pp0_iter7_reg;
        xor_ln3471_1_reg_1948_pp0_iter9_reg <= xor_ln3471_1_reg_1948_pp0_iter8_reg;
        xor_ln3471_2_reg_1963_pp0_iter10_reg <= xor_ln3471_2_reg_1963_pp0_iter9_reg;
        xor_ln3471_2_reg_1963_pp0_iter7_reg <= xor_ln3471_2_reg_1963;
        xor_ln3471_2_reg_1963_pp0_iter8_reg <= xor_ln3471_2_reg_1963_pp0_iter7_reg;
        xor_ln3471_2_reg_1963_pp0_iter9_reg <= xor_ln3471_2_reg_1963_pp0_iter8_reg;
        xor_ln3471_3_reg_1978_pp0_iter10_reg <= xor_ln3471_3_reg_1978_pp0_iter9_reg;
        xor_ln3471_3_reg_1978_pp0_iter7_reg <= xor_ln3471_3_reg_1978;
        xor_ln3471_3_reg_1978_pp0_iter8_reg <= xor_ln3471_3_reg_1978_pp0_iter7_reg;
        xor_ln3471_3_reg_1978_pp0_iter9_reg <= xor_ln3471_3_reg_1978_pp0_iter8_reg;
        xor_ln3471_4_reg_2004_pp0_iter10_reg <= xor_ln3471_4_reg_2004_pp0_iter9_reg;
        xor_ln3471_4_reg_2004_pp0_iter8_reg <= xor_ln3471_4_reg_2004;
        xor_ln3471_4_reg_2004_pp0_iter9_reg <= xor_ln3471_4_reg_2004_pp0_iter8_reg;
        xor_ln3471_5_reg_2017_pp0_iter10_reg <= xor_ln3471_5_reg_2017_pp0_iter9_reg;
        xor_ln3471_5_reg_2017_pp0_iter8_reg <= xor_ln3471_5_reg_2017;
        xor_ln3471_5_reg_2017_pp0_iter9_reg <= xor_ln3471_5_reg_2017_pp0_iter8_reg;
        xor_ln3471_6_reg_2040_pp0_iter10_reg <= xor_ln3471_6_reg_2040_pp0_iter9_reg;
        xor_ln3471_6_reg_2040_pp0_iter8_reg <= xor_ln3471_6_reg_2040;
        xor_ln3471_6_reg_2040_pp0_iter9_reg <= xor_ln3471_6_reg_2040_pp0_iter8_reg;
        xor_ln3471_7_reg_2053_pp0_iter10_reg <= xor_ln3471_7_reg_2053_pp0_iter9_reg;
        xor_ln3471_7_reg_2053_pp0_iter9_reg <= xor_ln3471_7_reg_2053;
        xor_ln3471_8_reg_2063_pp0_iter10_reg <= xor_ln3471_8_reg_2063_pp0_iter9_reg;
        xor_ln3471_8_reg_2063_pp0_iter9_reg <= xor_ln3471_8_reg_2063;
        xor_ln3471_9_reg_2084_pp0_iter10_reg <= xor_ln3471_9_reg_2084;
        xor_ln3471_reg_1859_pp0_iter10_reg <= xor_ln3471_reg_1859_pp0_iter9_reg;
        xor_ln3471_reg_1859_pp0_iter6_reg <= xor_ln3471_reg_1859;
        xor_ln3471_reg_1859_pp0_iter7_reg <= xor_ln3471_reg_1859_pp0_iter6_reg;
        xor_ln3471_reg_1859_pp0_iter8_reg <= xor_ln3471_reg_1859_pp0_iter7_reg;
        xor_ln3471_reg_1859_pp0_iter9_reg <= xor_ln3471_reg_1859_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln79_reg_1810 <= icmp_ln79_fu_307_p2;
        icmp_ln79_reg_1810_pp0_iter1_reg <= icmp_ln79_reg_1810;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_reg_1810 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_1_reg_1814 <= p_1_fu_327_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1810_pp0_iter5_reg == 1'd0))) begin
        select_ln3450_4_reg_1993 <= select_ln3450_4_fu_901_p3;
        tmp_9_reg_1998 <= select_ln3450_4_fu_901_p3[32'd17];
        xor_ln3471_1_reg_1948 <= xor_ln3471_1_fu_689_p2;
        xor_ln3471_2_reg_1963 <= xor_ln3471_2_fu_761_p2;
        xor_ln3471_3_reg_1978 <= xor_ln3471_3_fu_838_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1810_pp0_iter6_reg == 1'd0))) begin
        select_ln3450_6_reg_2030 <= select_ln3450_6_fu_1056_p3;
        tmp_11_reg_2035 <= select_ln3450_6_fu_1056_p3[32'd23];
        xor_ln3471_4_reg_2004 <= xor_ln3471_4_fu_917_p2;
        xor_ln3471_5_reg_2017 <= xor_ln3471_5_fu_992_p2;
        xor_ln3471_6_reg_2040 <= xor_ln3471_6_fu_1072_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_reg_1810_pp0_iter9_reg == 1'd0))) begin
        xor_ln3471_12_reg_2118 <= xor_ln3471_12_fu_1556_p2;
        xor_ln3471_13_reg_2123 <= xor_ln3471_13_fu_1642_p2;
        xor_ln3471_14_reg_2128 <= xor_ln3471_14_fu_1738_p2;
    end
end

always @ (*) begin
    if ((icmp_ln79_fu_307_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_fu_295_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln72_fu_295_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1810 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradx1_mat_4211_blk_n = gradx1_mat_4211_empty_n;
    end else begin
        gradx1_mat_4211_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1810 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradx1_mat_4211_read = 1'b1;
    end else begin
        gradx1_mat_4211_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1810 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grady1_mat_4214_blk_n = grady1_mat_4214_empty_n;
    end else begin
        grady1_mat_4214_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1810 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grady1_mat_4214_read = 1'b1;
    end else begin
        grady1_mat_4214_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1765_ce = 1'b1;
    end else begin
        grp_fu_1765_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1771_ce = 1'b1;
    end else begin
        grp_fu_1771_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1810_pp0_iter10_reg == 1'd0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        magnitude_mat_4216_blk_n = magnitude_mat_4216_full_n;
    end else begin
        magnitude_mat_4216_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_1810_pp0_iter10_reg == 1'd0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        magnitude_mat_4216_write = 1'b1;
    end else begin
        magnitude_mat_4216_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln72_fu_295_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln79_fu_307_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln79_fu_307_p2 == 1'd1)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign R_1_10_fu_1318_p3 = {{empty_reg_2079}, {tmp_11_cast_reg_1928_pp0_iter8_reg}};

assign R_1_11_fu_1399_p3 = {{empty_43_fu_1395_p1}, {tmp_12_cast_reg_1933_pp0_iter8_reg}};

assign R_1_12_fu_1484_p3 = {{empty_44_reg_2113}, {tmp_1313_cast_reg_1938_pp0_iter9_reg}};

assign R_1_13_fu_1566_p3 = {{empty_45_fu_1562_p1}, {tmp_14_cast_reg_1943_pp0_iter9_reg}};

assign R_1_14_fu_1652_p3 = {{empty_46_fu_1648_p1}, {trunc_ln67_reg_1836_pp0_iter9_reg}};

assign R_1_1_cast_fu_436_p1 = $signed(R_1_1_fu_428_p3);

assign R_1_1_fu_428_p3 = {{tmp_fu_418_p4}, {tmp_13_cast_fu_382_p4}};

assign R_1_2_cast_fu_519_p1 = $signed(R_1_2_fu_511_p3);

assign R_1_2_fu_511_p3 = {{select_ln3450_fu_480_p3}, {tmp_2_cast_fu_502_p4}};

assign R_1_3_cast_fu_700_p1 = $signed(R_1_3_fu_694_p3);

assign R_1_3_fu_694_p3 = {{select_ln3450_1_reg_1877}, {tmp_3_cast_reg_1888}};

assign R_1_4_cast_fu_774_p1 = $signed(R_1_4_fu_767_p3);

assign R_1_4_fu_767_p3 = {{select_ln3450_2_fu_746_p3}, {tmp_4_cast_reg_1893}};

assign R_1_5_cast_fu_851_p1 = $signed(R_1_5_fu_844_p3);

assign R_1_5_fu_844_p3 = {{select_ln3450_3_fu_822_p3}, {tmp_5_cast_reg_1898}};

assign R_1_6_cast_fu_928_p1 = $signed(R_1_6_fu_922_p3);

assign R_1_6_fu_922_p3 = {{select_ln3450_4_reg_1993}, {tmp_6_cast_reg_1903_pp0_iter6_reg}};

assign R_1_7_cast_fu_1005_p1 = $signed(R_1_7_fu_998_p3);

assign R_1_7_fu_998_p3 = {{select_ln3450_5_fu_977_p3}, {tmp_7_cast_reg_1908_pp0_iter6_reg}};

assign R_1_8_cast_fu_1084_p1 = $signed(R_1_8_fu_1078_p3);

assign R_1_8_fu_1078_p3 = {{select_ln3450_6_reg_2030}, {tmp_8_cast_reg_1913_pp0_iter7_reg}};

assign R_1_9_cast_fu_1162_p1 = $signed(R_1_9_fu_1155_p3);

assign R_1_9_fu_1155_p3 = {{select_ln3450_7_fu_1134_p3}, {tmp_9_cast_reg_1918_pp0_iter7_reg}};

assign R_1_s_fu_1236_p3 = {{select_ln3450_8_fu_1214_p3}, {tmp_10_cast_reg_1923_pp0_iter7_reg}};

assign R_2_0_cast_fu_408_p1 = R_2_fu_400_p3;

assign R_2_fu_400_p3 = {{tmp_2_fu_391_p4}, {2'd0}};

assign add_ln3469_10_fu_1368_p2 = (R_1_10_fu_1318_p3 + zext_ln3469_10_fu_1364_p1);

assign add_ln3469_11_fu_1452_p2 = (R_1_11_fu_1399_p3 + zext_ln3469_11_fu_1448_p1);

assign add_ln3469_12_fu_1535_p2 = (R_1_12_fu_1484_p3 + zext_ln3469_12_fu_1531_p1);

assign add_ln3469_13_fu_1620_p2 = (R_1_13_fu_1566_p3 + zext_ln3469_13_fu_1616_p1);

assign add_ln3469_14_fu_1708_p2 = (R_1_14_fu_1652_p3 + zext_ln3469_14_fu_1704_p1);

assign add_ln3469_1_fu_559_p2 = ($signed(R_1_2_cast_fu_519_p1) + $signed(zext_ln3469_1_fu_555_p1));

assign add_ln3469_2_fu_740_p2 = ($signed(R_1_3_cast_fu_700_p1) + $signed(zext_ln3469_2_fu_736_p1));

assign add_ln3469_3_fu_816_p2 = ($signed(R_1_4_cast_fu_774_p1) + $signed(zext_ln3469_3_fu_812_p1));

assign add_ln3469_4_fu_895_p2 = ($signed(R_1_5_cast_fu_851_p1) + $signed(zext_ln3469_4_fu_891_p1));

assign add_ln3469_5_fu_971_p2 = ($signed(R_1_6_cast_fu_928_p1) + $signed(zext_ln3469_5_fu_967_p1));

assign add_ln3469_6_fu_1050_p2 = ($signed(R_1_7_cast_fu_1005_p1) + $signed(zext_ln3469_6_fu_1046_p1));

assign add_ln3469_7_fu_1128_p2 = ($signed(R_1_8_cast_fu_1084_p1) + $signed(zext_ln3469_7_fu_1124_p1));

assign add_ln3469_8_fu_1208_p2 = ($signed(R_1_9_cast_fu_1162_p1) + $signed(zext_ln3469_8_fu_1204_p1));

assign add_ln3469_9_fu_1287_p2 = (R_1_s_fu_1236_p3 + zext_ln3469_9_fu_1283_p1);

assign add_ln3469_fu_474_p2 = ($signed(R_1_1_cast_fu_436_p1) + $signed(zext_ln3469_fu_470_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln79_reg_1810_pp0_iter10_reg == 1'd0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (magnitude_mat_4216_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln79_reg_1810 == 1'd0) & (grady1_mat_4214_empty_n == 1'b0)) | ((icmp_ln79_reg_1810 == 1'd0) & (gradx1_mat_4211_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln79_reg_1810_pp0_iter10_reg == 1'd0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (magnitude_mat_4216_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln79_reg_1810 == 1'd0) & (grady1_mat_4214_empty_n == 1'b0)) | ((icmp_ln79_reg_1810 == 1'd0) & (gradx1_mat_4211_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln79_reg_1810_pp0_iter10_reg == 1'd0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (magnitude_mat_4216_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln79_reg_1810 == 1'd0) & (grady1_mat_4214_empty_n == 1'b0)) | ((icmp_ln79_reg_1810 == 1'd0) & (gradx1_mat_4211_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter11 = ((icmp_ln79_reg_1810_pp0_iter10_reg == 1'd0) & (magnitude_mat_4216_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((icmp_ln79_reg_1810 == 1'd0) & (grady1_mat_4214_empty_n == 1'b0)) | ((icmp_ln79_reg_1810 == 1'd0) & (gradx1_mat_4211_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign empty_43_fu_1395_p1 = select_ln3450_10_fu_1374_p3[29:0];

assign empty_44_fu_1480_p1 = select_ln3450_11_fu_1458_p3[29:0];

assign empty_45_fu_1562_p1 = select_ln3450_12_fu_1541_p3[29:0];

assign empty_46_fu_1648_p1 = select_ln3450_13_fu_1626_p3[29:0];

assign empty_fu_1309_p1 = select_ln3450_9_fu_1293_p3[29:0];

assign grp_fu_1765_p0 = sext_ln106_fu_357_p1;

assign grp_fu_1765_p1 = sext_ln106_fu_357_p1;

assign grp_fu_1771_p0 = sext_ln105_fu_361_p1;

assign grp_fu_1771_p1 = sext_ln105_fu_361_p1;

assign i_2_fu_289_p2 = (i_reg_267 + 11'd1);

assign icmp_ln3471_fu_376_p2 = ((tmp_4_fu_367_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_295_p2 = ((i_reg_267 == 11'd1080) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_307_p2 = ((j_reg_278 == 11'd1920) ? 1'b1 : 1'b0);

assign j_2_fu_301_p2 = (j_reg_278 + 11'd1);

assign magnitude_mat_4216_din = {{{{{{{{{{{{{{{{icmp_ln3471_reg_1841_pp0_iter10_reg}, {xor_ln3471_reg_1859_pp0_iter10_reg}}, {xor_ln3471_1_reg_1948_pp0_iter10_reg}}, {xor_ln3471_2_reg_1963_pp0_iter10_reg}}, {xor_ln3471_3_reg_1978_pp0_iter10_reg}}, {xor_ln3471_4_reg_2004_pp0_iter10_reg}}, {xor_ln3471_5_reg_2017_pp0_iter10_reg}}, {xor_ln3471_6_reg_2040_pp0_iter10_reg}}, {xor_ln3471_7_reg_2053_pp0_iter10_reg}}, {xor_ln3471_8_reg_2063_pp0_iter10_reg}}, {xor_ln3471_9_reg_2084_pp0_iter10_reg}}, {xor_ln3471_10_reg_2092_pp0_iter10_reg}}, {xor_ln3471_11_reg_2105_pp0_iter10_reg}}, {xor_ln3471_12_reg_2118}}, {xor_ln3471_13_reg_2123}}, {xor_ln3471_14_reg_2128}};

assign or_ln3457_10_fu_1342_p2 = (tmpQ_10_fu_1324_p13 | 13'd1);

assign or_ln3457_11_fu_1426_p2 = (tmpQ_11_fu_1406_p14 | 14'd1);

assign or_ln3457_12_fu_1509_p2 = (tmpQ_12_fu_1490_p15 | 15'd1);

assign or_ln3457_13_fu_1594_p2 = (tmpQ_13_fu_1573_p16 | 16'd1);

assign or_ln3457_14_fu_1682_p2 = (tmpQ_14_fu_1659_p17 | 17'd1);

assign or_ln3457_1_fu_533_p2 = (tmpQ_1_fu_523_p4 | 4'd1);

assign or_ln3457_2_fu_714_p2 = (tmpQ_3_fu_704_p5 | 5'd1);

assign or_ln3457_3_fu_790_p2 = (tmpQ_4_fu_778_p6 | 6'd1);

assign or_ln3457_4_fu_869_p2 = (tmpQ_5_fu_855_p7 | 7'd1);

assign or_ln3457_5_fu_945_p2 = (tmpQ_6_fu_932_p8 | 8'd1);

assign or_ln3457_6_fu_1024_p2 = (tmpQ_7_fu_1009_p9 | 9'd1);

assign or_ln3457_7_fu_1102_p2 = (tmpQ_8_fu_1088_p10 | 10'd1);

assign or_ln3457_8_fu_1182_p2 = (tmpQ_9_fu_1166_p11 | 11'd1);

assign or_ln3457_9_fu_1261_p2 = (tmpQ_2_fu_1243_p12 | 12'd1);

assign or_ln3457_fu_448_p2 = (tmpQ_s_fu_440_p3 | 3'd1);

assign or_ln3467_10_fu_1358_p2 = (tmpQ_10_fu_1324_p13 | 13'd3);

assign or_ln3467_11_fu_1442_p2 = (tmpQ_11_fu_1406_p14 | 14'd3);

assign or_ln3467_12_fu_1525_p2 = (tmpQ_12_fu_1490_p15 | 15'd3);

assign or_ln3467_13_fu_1610_p2 = (tmpQ_13_fu_1573_p16 | 16'd3);

assign or_ln3467_14_fu_1698_p2 = (tmpQ_14_fu_1659_p17 | 17'd3);

assign or_ln3467_1_fu_549_p2 = (tmpQ_1_fu_523_p4 | 4'd3);

assign or_ln3467_2_fu_730_p2 = (tmpQ_3_fu_704_p5 | 5'd3);

assign or_ln3467_3_fu_806_p2 = (tmpQ_4_fu_778_p6 | 6'd3);

assign or_ln3467_4_fu_885_p2 = (tmpQ_5_fu_855_p7 | 7'd3);

assign or_ln3467_5_fu_961_p2 = (tmpQ_6_fu_932_p8 | 8'd3);

assign or_ln3467_6_fu_1040_p2 = (tmpQ_7_fu_1009_p9 | 9'd3);

assign or_ln3467_7_fu_1118_p2 = (tmpQ_8_fu_1088_p10 | 10'd3);

assign or_ln3467_8_fu_1198_p2 = (tmpQ_9_fu_1166_p11 | 11'd3);

assign or_ln3467_9_fu_1277_p2 = (tmpQ_2_fu_1243_p12 | 12'd3);

assign or_ln3467_fu_464_p2 = (tmpQ_s_fu_440_p3 | 3'd3);

assign p_1_fu_327_p3 = ((tmp_1_fu_313_p3[0:0] == 1'b1) ? sub_ln98_fu_321_p2 : gradx1_mat_4211_dout);

assign q_1_fu_349_p3 = ((tmp_3_fu_335_p3[0:0] == 1'b1) ? sub_ln99_fu_343_p2 : grady1_mat_4214_dout);

assign select_ln3450_10_fu_1374_p3 = ((tmp_14_reg_2073[0:0] == 1'b1) ? add_ln3469_10_fu_1368_p2 : sub_ln3459_10_fu_1352_p2);

assign select_ln3450_11_fu_1458_p3 = ((tmp_15_fu_1381_p3[0:0] == 1'b1) ? add_ln3469_11_fu_1452_p2 : sub_ln3459_11_fu_1436_p2);

assign select_ln3450_12_fu_1541_p3 = ((tmp_16_reg_2100[0:0] == 1'b1) ? add_ln3469_12_fu_1535_p2 : sub_ln3459_12_fu_1519_p2);

assign select_ln3450_13_fu_1626_p3 = ((tmp_17_fu_1548_p3[0:0] == 1'b1) ? add_ln3469_13_fu_1620_p2 : sub_ln3459_13_fu_1604_p2);

assign select_ln3450_14_fu_1730_p3 = ((tmp_18_fu_1634_p3[0:0] == 1'b1) ? tmp_19_fu_1714_p3 : tmp_20_fu_1722_p3);

assign select_ln3450_1_fu_565_p3 = ((tmp_5_fu_488_p3[0:0] == 1'b1) ? add_ln3469_1_fu_559_p2 : sub_ln3459_1_fu_543_p2);

assign select_ln3450_2_fu_746_p3 = ((tmp_6_reg_1882[0:0] == 1'b1) ? add_ln3469_2_fu_740_p2 : sub_ln3459_2_fu_724_p2);

assign select_ln3450_3_fu_822_p3 = ((tmp_7_fu_753_p3[0:0] == 1'b1) ? add_ln3469_3_fu_816_p2 : sub_ln3459_3_fu_800_p2);

assign select_ln3450_4_fu_901_p3 = ((tmp_8_fu_830_p3[0:0] == 1'b1) ? add_ln3469_4_fu_895_p2 : sub_ln3459_4_fu_879_p2);

assign select_ln3450_5_fu_977_p3 = ((tmp_9_reg_1998[0:0] == 1'b1) ? add_ln3469_5_fu_971_p2 : sub_ln3459_5_fu_955_p2);

assign select_ln3450_6_fu_1056_p3 = ((tmp_10_fu_984_p3[0:0] == 1'b1) ? add_ln3469_6_fu_1050_p2 : sub_ln3459_6_fu_1034_p2);

assign select_ln3450_7_fu_1134_p3 = ((tmp_11_reg_2035[0:0] == 1'b1) ? add_ln3469_7_fu_1128_p2 : sub_ln3459_7_fu_1112_p2);

assign select_ln3450_8_fu_1214_p3 = ((tmp_12_fu_1141_p3[0:0] == 1'b1) ? add_ln3469_8_fu_1208_p2 : sub_ln3459_8_fu_1192_p2);

assign select_ln3450_9_fu_1293_p3 = ((tmp_13_fu_1222_p3[0:0] == 1'b1) ? add_ln3469_9_fu_1287_p2 : sub_ln3459_9_fu_1271_p2);

assign select_ln3450_fu_480_p3 = ((icmp_ln3471_fu_376_p2[0:0] == 1'b1) ? sub_ln3459_fu_458_p2 : add_ln3469_fu_474_p2);

assign sext_ln105_fu_361_p1 = $signed(p_1_reg_1814);

assign sext_ln106_fu_357_p1 = $signed(q_1_fu_349_p3);

assign sub_ln3459_10_fu_1352_p2 = (R_1_10_fu_1318_p3 - zext_ln3459_10_fu_1348_p1);

assign sub_ln3459_11_fu_1436_p2 = (R_1_11_fu_1399_p3 - zext_ln3459_11_fu_1432_p1);

assign sub_ln3459_12_fu_1519_p2 = (R_1_12_fu_1484_p3 - zext_ln3459_12_fu_1515_p1);

assign sub_ln3459_13_fu_1604_p2 = (R_1_13_fu_1566_p3 - zext_ln3459_13_fu_1600_p1);

assign sub_ln3459_14_fu_1692_p2 = (R_1_14_fu_1652_p3 - zext_ln3459_14_fu_1688_p1);

assign sub_ln3459_1_fu_543_p2 = ($signed(R_1_2_cast_fu_519_p1) - $signed(zext_ln3459_1_fu_539_p1));

assign sub_ln3459_2_fu_724_p2 = ($signed(R_1_3_cast_fu_700_p1) - $signed(zext_ln3459_2_fu_720_p1));

assign sub_ln3459_3_fu_800_p2 = ($signed(R_1_4_cast_fu_774_p1) - $signed(zext_ln3459_3_fu_796_p1));

assign sub_ln3459_4_fu_879_p2 = ($signed(R_1_5_cast_fu_851_p1) - $signed(zext_ln3459_4_fu_875_p1));

assign sub_ln3459_5_fu_955_p2 = ($signed(R_1_6_cast_fu_928_p1) - $signed(zext_ln3459_5_fu_951_p1));

assign sub_ln3459_6_fu_1034_p2 = ($signed(R_1_7_cast_fu_1005_p1) - $signed(zext_ln3459_6_fu_1030_p1));

assign sub_ln3459_7_fu_1112_p2 = ($signed(R_1_8_cast_fu_1084_p1) - $signed(zext_ln3459_7_fu_1108_p1));

assign sub_ln3459_8_fu_1192_p2 = ($signed(R_1_9_cast_fu_1162_p1) - $signed(zext_ln3459_8_fu_1188_p1));

assign sub_ln3459_9_fu_1271_p2 = (R_1_s_fu_1236_p3 - zext_ln3459_9_fu_1267_p1);

assign sub_ln3459_fu_458_p2 = ($signed(R_1_1_cast_fu_436_p1) - $signed(zext_ln3459_fu_454_p1));

assign sub_ln98_fu_321_p2 = (16'd0 - gradx1_mat_4211_dout);

assign sub_ln99_fu_343_p2 = (16'd0 - grady1_mat_4214_dout);

assign tmpQ_10_fu_1324_p13 = {{{{{{{{{{{{icmp_ln3471_reg_1841_pp0_iter8_reg}, {xor_ln3471_reg_1859_pp0_iter8_reg}}, {xor_ln3471_1_reg_1948_pp0_iter8_reg}}, {xor_ln3471_2_reg_1963_pp0_iter8_reg}}, {xor_ln3471_3_reg_1978_pp0_iter8_reg}}, {xor_ln3471_4_reg_2004_pp0_iter8_reg}}, {xor_ln3471_5_reg_2017_pp0_iter8_reg}}, {xor_ln3471_6_reg_2040_pp0_iter8_reg}}, {xor_ln3471_7_reg_2053}}, {xor_ln3471_8_reg_2063}}, {xor_ln3471_9_fu_1313_p2}}, {2'd0}};

assign tmpQ_11_fu_1406_p14 = {{{{{{{{{{{{{icmp_ln3471_reg_1841_pp0_iter8_reg}, {xor_ln3471_reg_1859_pp0_iter8_reg}}, {xor_ln3471_1_reg_1948_pp0_iter8_reg}}, {xor_ln3471_2_reg_1963_pp0_iter8_reg}}, {xor_ln3471_3_reg_1978_pp0_iter8_reg}}, {xor_ln3471_4_reg_2004_pp0_iter8_reg}}, {xor_ln3471_5_reg_2017_pp0_iter8_reg}}, {xor_ln3471_6_reg_2040_pp0_iter8_reg}}, {xor_ln3471_7_reg_2053}}, {xor_ln3471_8_reg_2063}}, {xor_ln3471_9_fu_1313_p2}}, {xor_ln3471_10_fu_1389_p2}}, {2'd0}};

assign tmpQ_12_fu_1490_p15 = {{{{{{{{{{{{{{icmp_ln3471_reg_1841_pp0_iter9_reg}, {xor_ln3471_reg_1859_pp0_iter9_reg}}, {xor_ln3471_1_reg_1948_pp0_iter9_reg}}, {xor_ln3471_2_reg_1963_pp0_iter9_reg}}, {xor_ln3471_3_reg_1978_pp0_iter9_reg}}, {xor_ln3471_4_reg_2004_pp0_iter9_reg}}, {xor_ln3471_5_reg_2017_pp0_iter9_reg}}, {xor_ln3471_6_reg_2040_pp0_iter9_reg}}, {xor_ln3471_7_reg_2053_pp0_iter9_reg}}, {xor_ln3471_8_reg_2063_pp0_iter9_reg}}, {xor_ln3471_9_reg_2084}}, {xor_ln3471_10_reg_2092}}, {xor_ln3471_11_reg_2105}}, {2'd0}};

assign tmpQ_13_fu_1573_p16 = {{{{{{{{{{{{{{{icmp_ln3471_reg_1841_pp0_iter9_reg}, {xor_ln3471_reg_1859_pp0_iter9_reg}}, {xor_ln3471_1_reg_1948_pp0_iter9_reg}}, {xor_ln3471_2_reg_1963_pp0_iter9_reg}}, {xor_ln3471_3_reg_1978_pp0_iter9_reg}}, {xor_ln3471_4_reg_2004_pp0_iter9_reg}}, {xor_ln3471_5_reg_2017_pp0_iter9_reg}}, {xor_ln3471_6_reg_2040_pp0_iter9_reg}}, {xor_ln3471_7_reg_2053_pp0_iter9_reg}}, {xor_ln3471_8_reg_2063_pp0_iter9_reg}}, {xor_ln3471_9_reg_2084}}, {xor_ln3471_10_reg_2092}}, {xor_ln3471_11_reg_2105}}, {xor_ln3471_12_fu_1556_p2}}, {2'd0}};

assign tmpQ_14_fu_1659_p17 = {{{{{{{{{{{{{{{{icmp_ln3471_reg_1841_pp0_iter9_reg}, {xor_ln3471_reg_1859_pp0_iter9_reg}}, {xor_ln3471_1_reg_1948_pp0_iter9_reg}}, {xor_ln3471_2_reg_1963_pp0_iter9_reg}}, {xor_ln3471_3_reg_1978_pp0_iter9_reg}}, {xor_ln3471_4_reg_2004_pp0_iter9_reg}}, {xor_ln3471_5_reg_2017_pp0_iter9_reg}}, {xor_ln3471_6_reg_2040_pp0_iter9_reg}}, {xor_ln3471_7_reg_2053_pp0_iter9_reg}}, {xor_ln3471_8_reg_2063_pp0_iter9_reg}}, {xor_ln3471_9_reg_2084}}, {xor_ln3471_10_reg_2092}}, {xor_ln3471_11_reg_2105}}, {xor_ln3471_12_fu_1556_p2}}, {xor_ln3471_13_fu_1642_p2}}, {2'd0}};

assign tmpQ_1_fu_523_p4 = {{{icmp_ln3471_fu_376_p2}, {xor_ln3471_fu_496_p2}}, {2'd0}};

assign tmpQ_2_fu_1243_p12 = {{{{{{{{{{{icmp_ln3471_reg_1841_pp0_iter7_reg}, {xor_ln3471_reg_1859_pp0_iter7_reg}}, {xor_ln3471_1_reg_1948_pp0_iter7_reg}}, {xor_ln3471_2_reg_1963_pp0_iter7_reg}}, {xor_ln3471_3_reg_1978_pp0_iter7_reg}}, {xor_ln3471_4_reg_2004}}, {xor_ln3471_5_reg_2017}}, {xor_ln3471_6_reg_2040}}, {xor_ln3471_7_fu_1149_p2}}, {xor_ln3471_8_fu_1230_p2}}, {2'd0}};

assign tmpQ_3_fu_704_p5 = {{{{icmp_ln3471_reg_1841}, {xor_ln3471_reg_1859}}, {xor_ln3471_1_fu_689_p2}}, {2'd0}};

assign tmpQ_4_fu_778_p6 = {{{{{icmp_ln3471_reg_1841}, {xor_ln3471_reg_1859}}, {xor_ln3471_1_fu_689_p2}}, {xor_ln3471_2_fu_761_p2}}, {2'd0}};

assign tmpQ_5_fu_855_p7 = {{{{{{icmp_ln3471_reg_1841}, {xor_ln3471_reg_1859}}, {xor_ln3471_1_fu_689_p2}}, {xor_ln3471_2_fu_761_p2}}, {xor_ln3471_3_fu_838_p2}}, {2'd0}};

assign tmpQ_6_fu_932_p8 = {{{{{{{icmp_ln3471_reg_1841_pp0_iter6_reg}, {xor_ln3471_reg_1859_pp0_iter6_reg}}, {xor_ln3471_1_reg_1948}}, {xor_ln3471_2_reg_1963}}, {xor_ln3471_3_reg_1978}}, {xor_ln3471_4_fu_917_p2}}, {2'd0}};

assign tmpQ_7_fu_1009_p9 = {{{{{{{{icmp_ln3471_reg_1841_pp0_iter6_reg}, {xor_ln3471_reg_1859_pp0_iter6_reg}}, {xor_ln3471_1_reg_1948}}, {xor_ln3471_2_reg_1963}}, {xor_ln3471_3_reg_1978}}, {xor_ln3471_4_fu_917_p2}}, {xor_ln3471_5_fu_992_p2}}, {2'd0}};

assign tmpQ_8_fu_1088_p10 = {{{{{{{{{icmp_ln3471_reg_1841_pp0_iter7_reg}, {xor_ln3471_reg_1859_pp0_iter7_reg}}, {xor_ln3471_1_reg_1948_pp0_iter7_reg}}, {xor_ln3471_2_reg_1963_pp0_iter7_reg}}, {xor_ln3471_3_reg_1978_pp0_iter7_reg}}, {xor_ln3471_4_reg_2004}}, {xor_ln3471_5_reg_2017}}, {xor_ln3471_6_reg_2040}}, {2'd0}};

assign tmpQ_9_fu_1166_p11 = {{{{{{{{{{icmp_ln3471_reg_1841_pp0_iter7_reg}, {xor_ln3471_reg_1859_pp0_iter7_reg}}, {xor_ln3471_1_reg_1948_pp0_iter7_reg}}, {xor_ln3471_2_reg_1963_pp0_iter7_reg}}, {xor_ln3471_3_reg_1978_pp0_iter7_reg}}, {xor_ln3471_4_reg_2004}}, {xor_ln3471_5_reg_2017}}, {xor_ln3471_6_reg_2040}}, {xor_ln3471_7_fu_1149_p2}}, {2'd0}};

assign tmpQ_s_fu_440_p3 = {{icmp_ln3471_fu_376_p2}, {2'd0}};

assign tmpR_1_fu_412_p2 = ($signed(R_2_0_cast_fu_408_p1) + $signed(5'd28));

assign tmp_10_fu_984_p3 = select_ln3450_5_fu_977_p3[32'd20];

assign tmp_11_fu_1064_p3 = select_ln3450_6_fu_1056_p3[32'd23];

assign tmp_12_fu_1141_p3 = select_ln3450_7_fu_1134_p3[32'd26];

assign tmp_13_cast_fu_382_p4 = {{grp_fu_1771_p3[29:28]}};

assign tmp_13_fu_1222_p3 = select_ln3450_8_fu_1214_p3[32'd29];

assign tmp_15_fu_1381_p3 = select_ln3450_10_fu_1374_p3[32'd31];

assign tmp_16_fu_1466_p3 = select_ln3450_11_fu_1458_p3[32'd31];

assign tmp_17_fu_1548_p3 = select_ln3450_12_fu_1541_p3[32'd31];

assign tmp_18_fu_1634_p3 = select_ln3450_13_fu_1626_p3[32'd31];

assign tmp_19_fu_1714_p3 = add_ln3469_14_fu_1708_p2[32'd31];

assign tmp_1_fu_313_p3 = gradx1_mat_4211_dout[32'd15];

assign tmp_20_fu_1722_p3 = sub_ln3459_14_fu_1692_p2[32'd31];

assign tmp_2_cast_fu_502_p4 = {{grp_fu_1771_p3[27:26]}};

assign tmp_2_fu_391_p4 = {{grp_fu_1771_p3[31:30]}};

assign tmp_3_fu_335_p3 = grady1_mat_4214_dout[32'd15];

assign tmp_4_fu_367_p4 = {{grp_fu_1771_p3[31:30]}};

assign tmp_5_fu_488_p3 = select_ln3450_fu_480_p3[32'd5];

assign tmp_7_fu_753_p3 = select_ln3450_2_fu_746_p3[32'd11];

assign tmp_8_fu_830_p3 = select_ln3450_3_fu_822_p3[32'd14];

assign tmp_fu_418_p4 = {{tmpR_1_fu_412_p2[4:2]}};

assign trunc_ln67_fu_364_p1 = grp_fu_1771_p3[1:0];

assign xor_ln3471_10_fu_1389_p2 = (tmp_15_fu_1381_p3 ^ 1'd1);

assign xor_ln3471_11_fu_1474_p2 = (tmp_16_fu_1466_p3 ^ 1'd1);

assign xor_ln3471_12_fu_1556_p2 = (tmp_17_fu_1548_p3 ^ 1'd1);

assign xor_ln3471_13_fu_1642_p2 = (tmp_18_fu_1634_p3 ^ 1'd1);

assign xor_ln3471_14_fu_1738_p2 = (select_ln3450_14_fu_1730_p3 ^ 1'd1);

assign xor_ln3471_1_fu_689_p2 = (tmp_6_reg_1882 ^ 1'd1);

assign xor_ln3471_2_fu_761_p2 = (tmp_7_fu_753_p3 ^ 1'd1);

assign xor_ln3471_3_fu_838_p2 = (tmp_8_fu_830_p3 ^ 1'd1);

assign xor_ln3471_4_fu_917_p2 = (tmp_9_reg_1998 ^ 1'd1);

assign xor_ln3471_5_fu_992_p2 = (tmp_10_fu_984_p3 ^ 1'd1);

assign xor_ln3471_6_fu_1072_p2 = (tmp_11_fu_1064_p3 ^ 1'd1);

assign xor_ln3471_7_fu_1149_p2 = (tmp_12_fu_1141_p3 ^ 1'd1);

assign xor_ln3471_8_fu_1230_p2 = (tmp_13_fu_1222_p3 ^ 1'd1);

assign xor_ln3471_9_fu_1313_p2 = (tmp_14_reg_2073 ^ 1'd1);

assign xor_ln3471_fu_496_p2 = (tmp_5_fu_488_p3 ^ 1'd1);

assign zext_ln3459_10_fu_1348_p1 = or_ln3457_10_fu_1342_p2;

assign zext_ln3459_11_fu_1432_p1 = or_ln3457_11_fu_1426_p2;

assign zext_ln3459_12_fu_1515_p1 = or_ln3457_12_fu_1509_p2;

assign zext_ln3459_13_fu_1600_p1 = or_ln3457_13_fu_1594_p2;

assign zext_ln3459_14_fu_1688_p1 = or_ln3457_14_fu_1682_p2;

assign zext_ln3459_1_fu_539_p1 = or_ln3457_1_fu_533_p2;

assign zext_ln3459_2_fu_720_p1 = or_ln3457_2_fu_714_p2;

assign zext_ln3459_3_fu_796_p1 = or_ln3457_3_fu_790_p2;

assign zext_ln3459_4_fu_875_p1 = or_ln3457_4_fu_869_p2;

assign zext_ln3459_5_fu_951_p1 = or_ln3457_5_fu_945_p2;

assign zext_ln3459_6_fu_1030_p1 = or_ln3457_6_fu_1024_p2;

assign zext_ln3459_7_fu_1108_p1 = or_ln3457_7_fu_1102_p2;

assign zext_ln3459_8_fu_1188_p1 = or_ln3457_8_fu_1182_p2;

assign zext_ln3459_9_fu_1267_p1 = or_ln3457_9_fu_1261_p2;

assign zext_ln3459_fu_454_p1 = or_ln3457_fu_448_p2;

assign zext_ln3469_10_fu_1364_p1 = or_ln3467_10_fu_1358_p2;

assign zext_ln3469_11_fu_1448_p1 = or_ln3467_11_fu_1442_p2;

assign zext_ln3469_12_fu_1531_p1 = or_ln3467_12_fu_1525_p2;

assign zext_ln3469_13_fu_1616_p1 = or_ln3467_13_fu_1610_p2;

assign zext_ln3469_14_fu_1704_p1 = or_ln3467_14_fu_1698_p2;

assign zext_ln3469_1_fu_555_p1 = or_ln3467_1_fu_549_p2;

assign zext_ln3469_2_fu_736_p1 = or_ln3467_2_fu_730_p2;

assign zext_ln3469_3_fu_812_p1 = or_ln3467_3_fu_806_p2;

assign zext_ln3469_4_fu_891_p1 = or_ln3467_4_fu_885_p2;

assign zext_ln3469_5_fu_967_p1 = or_ln3467_5_fu_961_p2;

assign zext_ln3469_6_fu_1046_p1 = or_ln3467_6_fu_1040_p2;

assign zext_ln3469_7_fu_1124_p1 = or_ln3467_7_fu_1118_p2;

assign zext_ln3469_8_fu_1204_p1 = or_ln3467_8_fu_1198_p2;

assign zext_ln3469_9_fu_1283_p1 = or_ln3467_9_fu_1277_p2;

assign zext_ln3469_fu_470_p1 = or_ln3467_fu_464_p2;

endmodule //edge_canny_detector_xFMagnitudeKernel_2_2_1080_1920_3_3_1_5_5_1920_3840_s
