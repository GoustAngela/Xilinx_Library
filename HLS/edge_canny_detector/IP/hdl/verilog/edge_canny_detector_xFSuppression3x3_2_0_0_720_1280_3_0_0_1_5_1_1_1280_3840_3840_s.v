// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module edge_canny_detector_xFSuppression3x3_2_0_0_720_1280_3_0_0_1_5_1_1_1280_3840_3840_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        magnitude_mat_data_dout,
        magnitude_mat_data_empty_n,
        magnitude_mat_data_read,
        phase_mat_data_dout,
        phase_mat_data_empty_n,
        phase_mat_data_read,
        nms_mat_data_din,
        nms_mat_data_full_n,
        nms_mat_data_write,
        lowthreshold_dout,
        lowthreshold_empty_n,
        lowthreshold_read,
        highthreshold_dout,
        highthreshold_empty_n,
        highthreshold_read
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_pp0_stage0 = 8'd2;
parameter    ap_ST_fsm_state4 = 8'd4;
parameter    ap_ST_fsm_state5 = 8'd8;
parameter    ap_ST_fsm_pp1_stage0 = 8'd16;
parameter    ap_ST_fsm_state13 = 8'd32;
parameter    ap_ST_fsm_state14 = 8'd64;
parameter    ap_ST_fsm_state15 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] magnitude_mat_data_dout;
input   magnitude_mat_data_empty_n;
output   magnitude_mat_data_read;
input  [7:0] phase_mat_data_dout;
input   phase_mat_data_empty_n;
output   phase_mat_data_read;
output  [7:0] nms_mat_data_din;
input   nms_mat_data_full_n;
output   nms_mat_data_write;
input  [7:0] lowthreshold_dout;
input   lowthreshold_empty_n;
output   lowthreshold_read;
input  [7:0] highthreshold_dout;
input   highthreshold_empty_n;
output   highthreshold_read;

reg ap_done;
reg ap_idle;
reg start_write;
reg magnitude_mat_data_read;
reg phase_mat_data_read;
reg nms_mat_data_write;
reg lowthreshold_read;
reg highthreshold_read;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    magnitude_mat_data_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln878_reg_847;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln878_1_reg_907;
reg   [0:0] cmp_i_i147_i_i_i_reg_885;
reg    phase_mat_data_blk_n;
reg    nms_mat_data_blk_n;
reg    ap_enable_reg_pp1_iter6;
reg   [0:0] icmp_ln870_4_reg_932;
reg   [0:0] icmp_ln870_4_reg_932_pp1_iter5_reg;
wire    ap_CS_fsm_state15;
reg    lowthreshold_blk_n;
reg    highthreshold_blk_n;
reg   [10:0] col_V_reg_342;
reg   [10:0] col_V_2_reg_401;
reg   [10:0] col_V_2_reg_401_pp1_iter1_reg;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_predicate_op118_read_state7;
reg    ap_predicate_op129_read_state7;
reg    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
wire    ap_block_state9_pp1_stage0_iter3;
wire    ap_block_state10_pp1_stage0_iter4;
wire    ap_block_state11_pp1_stage0_iter5;
reg    ap_block_state12_pp1_stage0_iter6;
reg    ap_block_pp1_stage0_11001;
reg   [7:0] agg_tmp31_i_i_0_i_i_reg_413;
reg   [15:0] agg_tmp23_i_i_0_i_i_reg_425;
reg   [15:0] agg_tmp23_i_i_0_i_i_reg_425_pp1_iter4_reg;
reg   [15:0] agg_tmp20_i_i_0_i_i_reg_437;
reg   [15:0] agg_tmp12_i_i_0_i_i_reg_450;
reg   [15:0] agg_tmp12_i_i_0_i_i_reg_450_pp1_iter4_reg;
reg   [15:0] agg_tmp9_i_i_0_i_i_reg_462;
reg   [15:0] agg_tmp2_i_i_0_i_i_reg_475;
reg   [15:0] agg_tmp2_i_i_0_i_i_reg_475_pp1_iter4_reg;
reg   [15:0] agg_tmp109_0_i_i_reg_487;
wire   [7:0] grp_xFFindmax3x3_3_0_0_s_fu_500_ap_return;
reg   [7:0] reg_555;
reg    ap_enable_reg_pp1_iter5;
reg   [0:0] icmp_ln878_1_reg_907_pp1_iter4_reg;
wire    ap_CS_fsm_state14;
reg   [7:0] lowthreshold_read_reg_832;
reg   [7:0] highthreshold_read_reg_837;
wire   [10:0] col_V_1_fu_560_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln878_fu_566_p2;
wire   [63:0] zext_ln534_fu_572_p1;
reg   [63:0] zext_ln534_reg_851;
wire   [0:0] icmp_ln334_fu_577_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] cmp_i_i147_i_i_i_fu_658_p2;
wire   [1:0] trunc_ln187_fu_664_p1;
reg   [1:0] trunc_ln187_reg_889;
wire   [0:0] trunc_ln188_fu_668_p1;
reg   [0:0] trunc_ln188_reg_893;
wire   [0:0] trunc_ln204_fu_672_p1;
reg   [0:0] trunc_ln204_reg_897;
wire   [10:0] col_V_3_fu_676_p2;
reg   [10:0] col_V_3_reg_902;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln878_1_fu_682_p2;
reg   [0:0] icmp_ln878_1_reg_907_pp1_iter1_reg;
reg   [0:0] icmp_ln878_1_reg_907_pp1_iter2_reg;
reg   [0:0] icmp_ln878_1_reg_907_pp1_iter3_reg;
wire   [63:0] zext_ln195_fu_706_p1;
reg   [63:0] zext_ln195_reg_911;
wire   [0:0] icmp_ln870_4_fu_713_p2;
reg   [0:0] icmp_ln870_4_reg_932_pp1_iter3_reg;
reg   [0:0] icmp_ln870_4_reg_932_pp1_iter4_reg;
wire   [15:0] l00_buf_V_2_xfExtractPixels_1_5_3_s_fu_526_ap_return;
reg   [15:0] l00_buf_V_2_reg_936;
reg    ap_enable_reg_pp1_iter3;
wire   [15:0] l10_buf_V_2_xfExtractPixels_1_5_3_s_fu_531_ap_return;
reg   [15:0] l10_buf_V_2_reg_942;
wire   [15:0] l20_buf_V_2_xfExtractPixels_1_5_3_s_fu_536_ap_return;
reg   [15:0] l20_buf_V_2_reg_948;
wire   [7:0] angle_buf_V_2_xfExtractPixels_1_1_0_s_fu_541_ap_return;
reg   [7:0] angle_buf_V_2_reg_964;
reg    ap_enable_reg_pp1_iter4;
wire   [9:0] row_V_1_fu_766_p2;
reg   [9:0] row_V_1_reg_969;
wire    ap_CS_fsm_state13;
wire   [12:0] row_ind_V_2_fu_796_p3;
reg   [12:0] row_ind_V_2_reg_974;
wire   [12:0] read_ind_V_2_fu_810_p3;
reg   [12:0] read_ind_V_2_reg_979;
wire   [12:0] write_ind_V_2_fu_824_p3;
reg   [12:0] write_ind_V_2_reg_984;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter2;
reg    ap_condition_pp1_exit_iter3_state9;
reg   [10:0] angle_V_0_address0;
reg    angle_V_0_ce0;
reg    angle_V_0_we0;
reg   [7:0] angle_V_0_d0;
wire   [10:0] angle_V_0_address1;
reg    angle_V_0_ce1;
wire   [7:0] angle_V_0_q1;
reg   [10:0] angle_V_1_address0;
reg    angle_V_1_ce0;
reg    angle_V_1_we0;
reg   [7:0] angle_V_1_d0;
wire   [10:0] angle_V_1_address1;
reg    angle_V_1_ce1;
wire   [7:0] angle_V_1_q1;
reg   [10:0] buf_V_0_address0;
reg    buf_V_0_ce0;
reg    buf_V_0_we0;
reg   [15:0] buf_V_0_d0;
wire   [10:0] buf_V_0_address1;
reg    buf_V_0_ce1;
wire   [15:0] buf_V_0_q1;
reg   [10:0] buf_V_1_address0;
reg    buf_V_1_ce0;
reg    buf_V_1_we0;
reg   [15:0] buf_V_1_d0;
wire   [10:0] buf_V_1_address1;
reg    buf_V_1_ce1;
wire   [15:0] buf_V_1_q1;
reg   [10:0] buf_V_2_address0;
reg    buf_V_2_ce0;
reg    buf_V_2_we0;
reg   [15:0] buf_V_2_d0;
wire   [10:0] buf_V_2_address1;
reg    buf_V_2_ce1;
wire   [15:0] buf_V_2_q1;
reg   [15:0] grp_xFFindmax3x3_3_0_0_s_fu_500_p_i00;
reg   [15:0] grp_xFFindmax3x3_3_0_0_s_fu_500_p_i02;
reg   [15:0] grp_xFFindmax3x3_3_0_0_s_fu_500_p_i10;
reg   [15:0] grp_xFFindmax3x3_3_0_0_s_fu_500_p_i12;
reg   [15:0] grp_xFFindmax3x3_3_0_0_s_fu_500_p_i20;
reg   [15:0] grp_xFFindmax3x3_3_0_0_s_fu_500_p_i22;
reg   [7:0] grp_xFFindmax3x3_3_0_0_s_fu_500_angle;
reg    grp_xFFindmax3x3_3_0_0_s_fu_500_ap_ce;
wire    ap_block_state6_pp1_stage0_iter0_ignore_call22;
reg    ap_block_state7_pp1_stage0_iter1_ignore_call22;
wire    ap_block_state8_pp1_stage0_iter2_ignore_call22;
wire    ap_block_state9_pp1_stage0_iter3_ignore_call22;
wire    ap_block_state10_pp1_stage0_iter4_ignore_call22;
wire    ap_block_state11_pp1_stage0_iter5_ignore_call22;
reg    ap_block_state12_pp1_stage0_iter6_ignore_call22;
reg    ap_block_pp1_stage0_11001_ignoreCallOp172;
wire    l00_buf_V_2_xfExtractPixels_1_5_3_s_fu_526_ap_ready;
wire    l10_buf_V_2_xfExtractPixels_1_5_3_s_fu_531_ap_ready;
wire    l20_buf_V_2_xfExtractPixels_1_5_3_s_fu_536_ap_ready;
wire    angle_buf_V_2_xfExtractPixels_1_1_0_s_fu_541_ap_ready;
wire   [7:0] angle_buf_V_2_xfExtractPixels_1_1_0_s_fu_541_p_read1;
reg   [9:0] row_V_reg_353;
wire    ap_CS_fsm_state4;
reg   [12:0] write_ind_V_reg_365;
reg   [12:0] read_ind_V_reg_377;
wire   [12:0] ap_phi_mux_row_ind_V_phi_fu_393_p4;
reg   [12:0] row_ind_V_reg_389;
reg   [10:0] ap_phi_mux_col_V_2_phi_fu_405_p4;
reg   [7:0] ap_phi_mux_agg_tmp31_i_i_0_i_i_phi_fu_417_p4;
reg   [15:0] ap_phi_mux_agg_tmp20_i_i_0_i_i_phi_fu_441_p4;
reg   [15:0] ap_phi_mux_agg_tmp9_i_i_0_i_i_phi_fu_466_p4;
reg   [15:0] ap_phi_mux_agg_tmp109_0_i_i_phi_fu_491_p4;
wire   [15:0] buf0_V_fu_719_p5;
wire   [15:0] buf1_V_fu_732_p5;
wire   [15:0] buf2_V_fu_745_p5;
wire   [63:0] zext_ln534_2_fu_688_p1;
wire   [63:0] zext_ln534_1_fu_697_p1;
reg   [1:0] bottom_fu_118;
wire   [1:0] bottom_1_fu_619_p3;
reg   [1:0] mid_fu_122;
wire   [1:0] mid_1_fu_627_p3;
reg   [1:0] top_fu_126;
wire   [1:0] top_1_fu_635_p3;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln870_fu_613_p2;
wire   [12:0] row_ind_V_1_fu_772_p2;
wire   [0:0] icmp_ln870_1_fu_790_p2;
wire   [12:0] read_ind_V_1_fu_778_p2;
wire   [0:0] icmp_ln870_2_fu_804_p2;
wire   [12:0] write_ind_V_1_fu_784_p2;
wire   [0:0] icmp_ln870_3_fu_818_p2;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_775;
reg    ap_condition_780;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

edge_canny_detector_xFSuppression3x3_2_0_0_720_1280_3_0_0_1_5_1_1_1280_3840_3840_s_angle_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
angle_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(angle_V_0_address0),
    .ce0(angle_V_0_ce0),
    .we0(angle_V_0_we0),
    .d0(angle_V_0_d0),
    .address1(angle_V_0_address1),
    .ce1(angle_V_0_ce1),
    .q1(angle_V_0_q1)
);

edge_canny_detector_xFSuppression3x3_2_0_0_720_1280_3_0_0_1_5_1_1_1280_3840_3840_s_angle_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
angle_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(angle_V_1_address0),
    .ce0(angle_V_1_ce0),
    .we0(angle_V_1_we0),
    .d0(angle_V_1_d0),
    .address1(angle_V_1_address1),
    .ce1(angle_V_1_ce1),
    .q1(angle_V_1_q1)
);

edge_canny_detector_xFSuppression3x3_2_0_0_720_1280_3_0_0_1_5_1_1_1280_3840_3840_s_buf_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_0_address0),
    .ce0(buf_V_0_ce0),
    .we0(buf_V_0_we0),
    .d0(buf_V_0_d0),
    .address1(buf_V_0_address1),
    .ce1(buf_V_0_ce1),
    .q1(buf_V_0_q1)
);

edge_canny_detector_xFSuppression3x3_2_0_0_720_1280_3_0_0_1_5_1_1_1280_3840_3840_s_buf_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_address0),
    .ce0(buf_V_1_ce0),
    .we0(buf_V_1_we0),
    .d0(buf_V_1_d0),
    .address1(buf_V_1_address1),
    .ce1(buf_V_1_ce1),
    .q1(buf_V_1_q1)
);

edge_canny_detector_xFSuppression3x3_2_0_0_720_1280_3_0_0_1_5_1_1_1280_3840_3840_s_buf_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_address0),
    .ce0(buf_V_2_ce0),
    .we0(buf_V_2_we0),
    .d0(buf_V_2_d0),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .q1(buf_V_2_q1)
);

edge_canny_detector_xFFindmax3x3_3_0_0_s grp_xFFindmax3x3_3_0_0_s_fu_500(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_i00(grp_xFFindmax3x3_3_0_0_s_fu_500_p_i00),
    .p_i01(agg_tmp2_i_i_0_i_i_reg_475),
    .p_i02(grp_xFFindmax3x3_3_0_0_s_fu_500_p_i02),
    .p_i10(grp_xFFindmax3x3_3_0_0_s_fu_500_p_i10),
    .p_i11(agg_tmp12_i_i_0_i_i_reg_450),
    .p_i12(grp_xFFindmax3x3_3_0_0_s_fu_500_p_i12),
    .p_i20(grp_xFFindmax3x3_3_0_0_s_fu_500_p_i20),
    .p_i21(agg_tmp23_i_i_0_i_i_reg_425),
    .p_i22(grp_xFFindmax3x3_3_0_0_s_fu_500_p_i22),
    .angle(grp_xFFindmax3x3_3_0_0_s_fu_500_angle),
    .p_low_threshold(lowthreshold_read_reg_832),
    .p_high_threshold(highthreshold_read_reg_837),
    .ap_return(grp_xFFindmax3x3_3_0_0_s_fu_500_ap_return),
    .ap_ce(grp_xFFindmax3x3_3_0_0_s_fu_500_ap_ce)
);

edge_canny_detector_xfExtractPixels_1_5_3_s l00_buf_V_2_xfExtractPixels_1_5_3_s_fu_526(
    .ap_ready(l00_buf_V_2_xfExtractPixels_1_5_3_s_fu_526_ap_ready),
    .p_read1(buf0_V_fu_719_p5),
    .ap_return(l00_buf_V_2_xfExtractPixels_1_5_3_s_fu_526_ap_return)
);

edge_canny_detector_xfExtractPixels_1_5_3_s l10_buf_V_2_xfExtractPixels_1_5_3_s_fu_531(
    .ap_ready(l10_buf_V_2_xfExtractPixels_1_5_3_s_fu_531_ap_ready),
    .p_read1(buf1_V_fu_732_p5),
    .ap_return(l10_buf_V_2_xfExtractPixels_1_5_3_s_fu_531_ap_return)
);

edge_canny_detector_xfExtractPixels_1_5_3_s l20_buf_V_2_xfExtractPixels_1_5_3_s_fu_536(
    .ap_ready(l20_buf_V_2_xfExtractPixels_1_5_3_s_fu_536_ap_ready),
    .p_read1(buf2_V_fu_745_p5),
    .ap_return(l20_buf_V_2_xfExtractPixels_1_5_3_s_fu_536_ap_return)
);

edge_canny_detector_xfExtractPixels_1_1_0_s angle_buf_V_2_xfExtractPixels_1_1_0_s_fu_541(
    .ap_ready(angle_buf_V_2_xfExtractPixels_1_1_0_s_fu_541_ap_ready),
    .p_read1(angle_buf_V_2_xfExtractPixels_1_1_0_s_fu_541_p_read1),
    .ap_return(angle_buf_V_2_xfExtractPixels_1_1_0_s_fu_541_ap_return)
);

edge_canny_detector_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U80(
    .din0(buf_V_0_q1),
    .din1(buf_V_1_q1),
    .din2(buf_V_2_q1),
    .din3(top_fu_126),
    .dout(buf0_V_fu_719_p5)
);

edge_canny_detector_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U81(
    .din0(buf_V_0_q1),
    .din1(buf_V_1_q1),
    .din2(buf_V_2_q1),
    .din3(mid_fu_122),
    .dout(buf1_V_fu_732_p5)
);

edge_canny_detector_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U82(
    .din0(buf_V_0_q1),
    .din1(buf_V_1_q1),
    .din2(buf_V_2_q1),
    .din3(bottom_fu_118),
    .dout(buf2_V_fu_745_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln334_fu_577_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((highthreshold_empty_n == 1'b0) | (lowthreshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((highthreshold_empty_n == 1'b0) | (lowthreshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter3_state9)) begin
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end else if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_1_reg_907_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        agg_tmp109_0_i_i_reg_487 <= agg_tmp2_i_i_0_i_i_reg_475_pp1_iter4_reg;
    end else if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp109_0_i_i_reg_487 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln878_1_reg_907_pp1_iter3_reg == 1'd0))) begin
        agg_tmp12_i_i_0_i_i_reg_450 <= l10_buf_V_2_reg_942;
    end else if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp12_i_i_0_i_i_reg_450 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_1_reg_907_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        agg_tmp20_i_i_0_i_i_reg_437 <= agg_tmp23_i_i_0_i_i_reg_425_pp1_iter4_reg;
    end else if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp20_i_i_0_i_i_reg_437 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln878_1_reg_907_pp1_iter3_reg == 1'd0))) begin
        agg_tmp23_i_i_0_i_i_reg_425 <= l20_buf_V_2_reg_948;
    end else if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp23_i_i_0_i_i_reg_425 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln878_1_reg_907_pp1_iter3_reg == 1'd0))) begin
        agg_tmp2_i_i_0_i_i_reg_475 <= l00_buf_V_2_reg_936;
    end else if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp2_i_i_0_i_i_reg_475 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_1_reg_907_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        agg_tmp31_i_i_0_i_i_reg_413 <= angle_buf_V_2_reg_964;
    end else if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp31_i_i_0_i_i_reg_413 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_1_reg_907_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        agg_tmp9_i_i_0_i_i_reg_462 <= agg_tmp12_i_i_0_i_i_reg_450_pp1_iter4_reg;
    end else if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp9_i_i_0_i_i_reg_462 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        if ((~(ap_phi_mux_row_ind_V_phi_fu_393_p4 == 13'd2) & ~(ap_phi_mux_row_ind_V_phi_fu_393_p4 == 13'd0))) begin
            bottom_fu_118 <= bottom_1_fu_619_p3;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_393_p4 == 13'd2)) begin
            bottom_fu_118 <= 2'd2;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_393_p4 == 13'd0)) begin
            bottom_fu_118 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_2_reg_401 <= col_V_3_reg_902;
    end else if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        col_V_2_reg_401 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln878_fu_566_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        col_V_reg_342 <= col_V_1_fu_560_p2;
    end else if ((~((highthreshold_empty_n == 1'b0) | (lowthreshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        col_V_reg_342 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        if ((~(ap_phi_mux_row_ind_V_phi_fu_393_p4 == 13'd2) & ~(ap_phi_mux_row_ind_V_phi_fu_393_p4 == 13'd0))) begin
            mid_fu_122 <= mid_1_fu_627_p3;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_393_p4 == 13'd2)) begin
            mid_fu_122 <= 2'd1;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_393_p4 == 13'd0)) begin
            mid_fu_122 <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        read_ind_V_reg_377 <= 13'd1;
    end else if (((nms_mat_data_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        read_ind_V_reg_377 <= read_ind_V_2_reg_979;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        row_V_reg_353 <= 10'd1;
    end else if (((nms_mat_data_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        row_V_reg_353 <= row_V_1_reg_969;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        row_ind_V_reg_389 <= 13'd2;
    end else if (((nms_mat_data_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        row_ind_V_reg_389 <= row_ind_V_2_reg_974;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        if ((~(ap_phi_mux_row_ind_V_phi_fu_393_p4 == 13'd2) & ~(ap_phi_mux_row_ind_V_phi_fu_393_p4 == 13'd0))) begin
            top_fu_126 <= top_1_fu_635_p3;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_393_p4 == 13'd2)) begin
            top_fu_126 <= 2'd0;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_393_p4 == 13'd0)) begin
            top_fu_126 <= 2'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        write_ind_V_reg_365 <= 13'd0;
    end else if (((nms_mat_data_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        write_ind_V_reg_365 <= write_ind_V_2_reg_984;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        agg_tmp12_i_i_0_i_i_reg_450_pp1_iter4_reg <= agg_tmp12_i_i_0_i_i_reg_450;
        agg_tmp23_i_i_0_i_i_reg_425_pp1_iter4_reg <= agg_tmp23_i_i_0_i_i_reg_425;
        agg_tmp2_i_i_0_i_i_reg_475_pp1_iter4_reg <= agg_tmp2_i_i_0_i_i_reg_475;
        icmp_ln870_4_reg_932_pp1_iter3_reg <= icmp_ln870_4_reg_932;
        icmp_ln870_4_reg_932_pp1_iter4_reg <= icmp_ln870_4_reg_932_pp1_iter3_reg;
        icmp_ln870_4_reg_932_pp1_iter5_reg <= icmp_ln870_4_reg_932_pp1_iter4_reg;
        icmp_ln878_1_reg_907_pp1_iter2_reg <= icmp_ln878_1_reg_907_pp1_iter1_reg;
        icmp_ln878_1_reg_907_pp1_iter3_reg <= icmp_ln878_1_reg_907_pp1_iter2_reg;
        icmp_ln878_1_reg_907_pp1_iter4_reg <= icmp_ln878_1_reg_907_pp1_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln878_1_reg_907_pp1_iter3_reg == 1'd0))) begin
        angle_buf_V_2_reg_964 <= angle_buf_V_2_xfExtractPixels_1_1_0_s_fu_541_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln334_fu_577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        cmp_i_i147_i_i_i_reg_885 <= cmp_i_i147_i_i_i_fu_658_p2;
        trunc_ln187_reg_889 <= trunc_ln187_fu_664_p1;
        trunc_ln188_reg_893 <= trunc_ln188_fu_668_p1;
        trunc_ln204_reg_897 <= trunc_ln204_fu_672_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_2_reg_401_pp1_iter1_reg <= col_V_2_reg_401;
        icmp_ln878_1_reg_907 <= icmp_ln878_1_fu_682_p2;
        icmp_ln878_1_reg_907_pp1_iter1_reg <= icmp_ln878_1_reg_907;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_3_reg_902 <= col_V_3_fu_676_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        highthreshold_read_reg_837 <= highthreshold_dout;
        lowthreshold_read_reg_832 <= lowthreshold_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_1_reg_907_pp1_iter1_reg == 1'd0))) begin
        icmp_ln870_4_reg_932 <= icmp_ln870_4_fu_713_p2;
        zext_ln195_reg_911[10 : 0] <= zext_ln195_fu_706_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln878_reg_847 <= icmp_ln878_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln878_1_reg_907_pp1_iter2_reg == 1'd0))) begin
        l00_buf_V_2_reg_936 <= l00_buf_V_2_xfExtractPixels_1_5_3_s_fu_526_ap_return;
        l10_buf_V_2_reg_942 <= l10_buf_V_2_xfExtractPixels_1_5_3_s_fu_531_ap_return;
        l20_buf_V_2_reg_948 <= l20_buf_V_2_xfExtractPixels_1_5_3_s_fu_536_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        read_ind_V_2_reg_979 <= read_ind_V_2_fu_810_p3;
        row_V_1_reg_969 <= row_V_1_fu_766_p2;
        row_ind_V_2_reg_974 <= row_ind_V_2_fu_796_p3;
        write_ind_V_2_reg_984 <= write_ind_V_2_fu_824_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln878_1_reg_907_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1)))) begin
        reg_555 <= grp_xFFindmax3x3_3_0_0_s_fu_500_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln878_fu_566_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln534_reg_851[10 : 0] <= zext_ln534_fu_572_p1[10 : 0];
    end
end

always @ (*) begin
    if (((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln188_reg_893 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        angle_V_0_address0 = zext_ln534_1_fu_697_p1;
    end else if (((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln188_reg_893 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        angle_V_0_address0 = zext_ln534_2_fu_688_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        angle_V_0_address0 = zext_ln534_reg_851;
    end else begin
        angle_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln188_reg_893 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln188_reg_893 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        angle_V_0_ce0 = 1'b1;
    end else begin
        angle_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        angle_V_0_ce1 = 1'b1;
    end else begin
        angle_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln188_reg_893 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        angle_V_0_d0 = 8'd0;
    end else if ((((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln188_reg_893 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        angle_V_0_d0 = phase_mat_data_dout;
    end else begin
        angle_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln188_reg_893 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln878_reg_847 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln188_reg_893 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        angle_V_0_we0 = 1'b1;
    end else begin
        angle_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_775)) begin
        if ((cmp_i_i147_i_i_i_reg_885 == 1'd1)) begin
            angle_V_1_address0 = zext_ln534_1_fu_697_p1;
        end else if ((cmp_i_i147_i_i_i_reg_885 == 1'd0)) begin
            angle_V_1_address0 = zext_ln534_2_fu_688_p1;
        end else begin
            angle_V_1_address0 = 'bx;
        end
    end else begin
        angle_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln188_reg_893 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln188_reg_893 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        angle_V_1_ce0 = 1'b1;
    end else begin
        angle_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        angle_V_1_ce1 = 1'b1;
    end else begin
        angle_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_775)) begin
        if ((cmp_i_i147_i_i_i_reg_885 == 1'd1)) begin
            angle_V_1_d0 = phase_mat_data_dout;
        end else if ((cmp_i_i147_i_i_i_reg_885 == 1'd0)) begin
            angle_V_1_d0 = 8'd0;
        end else begin
            angle_V_1_d0 = 'bx;
        end
    end else begin
        angle_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln188_reg_893 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln188_reg_893 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        angle_V_1_we0 = 1'b1;
    end else begin
        angle_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln878_fu_566_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_condition_pp1_exit_iter3_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter3_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln878_1_fu_682_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln334_fu_577_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln878_1_reg_907_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_agg_tmp109_0_i_i_phi_fu_491_p4 = agg_tmp2_i_i_0_i_i_reg_475_pp1_iter4_reg;
    end else begin
        ap_phi_mux_agg_tmp109_0_i_i_phi_fu_491_p4 = agg_tmp109_0_i_i_reg_487;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln878_1_reg_907_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_agg_tmp20_i_i_0_i_i_phi_fu_441_p4 = agg_tmp23_i_i_0_i_i_reg_425_pp1_iter4_reg;
    end else begin
        ap_phi_mux_agg_tmp20_i_i_0_i_i_phi_fu_441_p4 = agg_tmp20_i_i_0_i_i_reg_437;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln878_1_reg_907_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_agg_tmp31_i_i_0_i_i_phi_fu_417_p4 = angle_buf_V_2_reg_964;
    end else begin
        ap_phi_mux_agg_tmp31_i_i_0_i_i_phi_fu_417_p4 = agg_tmp31_i_i_0_i_i_reg_413;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln878_1_reg_907_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_mux_agg_tmp9_i_i_0_i_i_phi_fu_466_p4 = agg_tmp12_i_i_0_i_i_reg_450_pp1_iter4_reg;
    end else begin
        ap_phi_mux_agg_tmp9_i_i_0_i_i_phi_fu_466_p4 = agg_tmp9_i_i_0_i_i_reg_462;
    end
end

always @ (*) begin
    if (((icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_col_V_2_phi_fu_405_p4 = col_V_3_reg_902;
    end else begin
        ap_phi_mux_col_V_2_phi_fu_405_p4 = col_V_2_reg_401;
    end
end

always @ (*) begin
    if (((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln187_reg_889 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_0_address0 = zext_ln534_1_fu_697_p1;
    end else if (((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln187_reg_889 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_0_address0 = zext_ln534_2_fu_688_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_V_0_address0 = zext_ln534_fu_572_p1;
    end else begin
        buf_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln187_reg_889 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln187_reg_889 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        buf_V_0_ce0 = 1'b1;
    end else begin
        buf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_0_ce1 = 1'b1;
    end else begin
        buf_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln187_reg_889 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_0_d0 = magnitude_mat_data_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln187_reg_889 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_0_d0 = 16'd0;
    end else begin
        buf_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln187_reg_889 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln187_reg_889 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln878_fu_566_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        buf_V_0_we0 = 1'b1;
    end else begin
        buf_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln187_reg_889 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_1_address0 = zext_ln534_1_fu_697_p1;
    end else if (((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln187_reg_889 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_1_address0 = zext_ln534_2_fu_688_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_1_address0 = zext_ln534_reg_851;
    end else begin
        buf_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln187_reg_889 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln187_reg_889 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln187_reg_889 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_1_d0 = 16'd0;
    end else if ((((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln187_reg_889 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_V_1_d0 = magnitude_mat_data_dout;
    end else begin
        buf_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln187_reg_889 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln878_reg_847 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln187_reg_889 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_1_we0 = 1'b1;
    end else begin
        buf_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_780)) begin
        if ((cmp_i_i147_i_i_i_reg_885 == 1'd1)) begin
            buf_V_2_address0 = zext_ln534_1_fu_697_p1;
        end else if ((cmp_i_i147_i_i_i_reg_885 == 1'd0)) begin
            buf_V_2_address0 = zext_ln534_2_fu_688_p1;
        end else begin
            buf_V_2_address0 = 'bx;
        end
    end else begin
        buf_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln187_reg_889 == 2'd1) & ~(trunc_ln187_reg_889 == 2'd0) & (cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(trunc_ln187_reg_889 == 2'd1) & ~(trunc_ln187_reg_889 == 2'd0) & (cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_780)) begin
        if ((cmp_i_i147_i_i_i_reg_885 == 1'd1)) begin
            buf_V_2_d0 = magnitude_mat_data_dout;
        end else if ((cmp_i_i147_i_i_i_reg_885 == 1'd0)) begin
            buf_V_2_d0 = 16'd0;
        end else begin
            buf_V_2_d0 = 'bx;
        end
    end else begin
        buf_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln187_reg_889 == 2'd1) & ~(trunc_ln187_reg_889 == 2'd0) & (cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(trunc_ln187_reg_889 == 2'd1) & ~(trunc_ln187_reg_889 == 2'd0) & (cmp_i_i147_i_i_i_reg_885 == 1'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_2_we0 = 1'b1;
    end else begin
        buf_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_angle = agg_tmp31_i_i_0_i_i_reg_413;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln878_1_reg_907_pp1_iter3_reg == 1'd0))) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_angle = ap_phi_mux_agg_tmp31_i_i_0_i_i_phi_fu_417_p4;
    end else begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_angle = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp172) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_ap_ce = 1'b1;
    end else begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i00 = agg_tmp109_0_i_i_reg_487;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln878_1_reg_907_pp1_iter3_reg == 1'd0))) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i00 = ap_phi_mux_agg_tmp109_0_i_i_phi_fu_491_p4;
    end else begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i00 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i02 = 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln878_1_reg_907_pp1_iter3_reg == 1'd0))) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i02 = l00_buf_V_2_reg_936;
    end else begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i02 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i10 = agg_tmp9_i_i_0_i_i_reg_462;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln878_1_reg_907_pp1_iter3_reg == 1'd0))) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i10 = ap_phi_mux_agg_tmp9_i_i_0_i_i_phi_fu_466_p4;
    end else begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i10 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i12 = 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln878_1_reg_907_pp1_iter3_reg == 1'd0))) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i12 = l10_buf_V_2_reg_942;
    end else begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i12 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i20 = agg_tmp20_i_i_0_i_i_reg_437;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln878_1_reg_907_pp1_iter3_reg == 1'd0))) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i20 = ap_phi_mux_agg_tmp20_i_i_0_i_i_phi_fu_441_p4;
    end else begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i20 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i22 = 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln878_1_reg_907_pp1_iter3_reg == 1'd0))) begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i22 = l20_buf_V_2_reg_948;
    end else begin
        grp_xFFindmax3x3_3_0_0_s_fu_500_p_i22 = 'bx;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        highthreshold_blk_n = highthreshold_empty_n;
    end else begin
        highthreshold_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((highthreshold_empty_n == 1'b0) | (lowthreshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        highthreshold_read = 1'b1;
    end else begin
        highthreshold_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln334_fu_577_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        lowthreshold_blk_n = lowthreshold_empty_n;
    end else begin
        lowthreshold_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((highthreshold_empty_n == 1'b0) | (lowthreshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        lowthreshold_read = 1'b1;
    end else begin
        lowthreshold_read = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln878_reg_847 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        magnitude_mat_data_blk_n = magnitude_mat_data_empty_n;
    end else begin
        magnitude_mat_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op118_read_state7 == 1'b1)) | ((icmp_ln878_reg_847 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        magnitude_mat_data_read = 1'b1;
    end else begin
        magnitude_mat_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_pp1_stage0) & (icmp_ln870_4_reg_932_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1)))) begin
        nms_mat_data_blk_n = nms_mat_data_full_n;
    end else begin
        nms_mat_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((nms_mat_data_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln870_4_reg_932_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1)))) begin
        nms_mat_data_write = 1'b1;
    end else begin
        nms_mat_data_write = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln878_reg_847 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        phase_mat_data_blk_n = phase_mat_data_empty_n;
    end else begin
        phase_mat_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op129_read_state7 == 1'b1)) | ((icmp_ln878_reg_847 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        phase_mat_data_read = 1'b1;
    end else begin
        phase_mat_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((highthreshold_empty_n == 1'b0) | (lowthreshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln878_fu_566_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln878_fu_566_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln334_fu_577_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((nms_mat_data_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign angle_V_0_address1 = zext_ln195_reg_911;

assign angle_V_1_address1 = zext_ln195_reg_911;

assign angle_buf_V_2_xfExtractPixels_1_1_0_s_fu_541_p_read1 = ((trunc_ln204_reg_897[0:0] == 1'b1) ? angle_V_1_q1 : angle_V_0_q1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln878_reg_847 == 1'd0) & (phase_mat_data_empty_n == 1'b0)) | ((icmp_ln878_reg_847 == 1'd0) & (magnitude_mat_data_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln878_reg_847 == 1'd0) & (phase_mat_data_empty_n == 1'b0)) | ((icmp_ln878_reg_847 == 1'd0) & (magnitude_mat_data_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((phase_mat_data_empty_n == 1'b0) & (ap_predicate_op129_read_state7 == 1'b1)) | ((magnitude_mat_data_empty_n == 1'b0) & (ap_predicate_op118_read_state7 == 1'b1)))) | ((nms_mat_data_full_n == 1'b0) & (icmp_ln870_4_reg_932_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((phase_mat_data_empty_n == 1'b0) & (ap_predicate_op129_read_state7 == 1'b1)) | ((magnitude_mat_data_empty_n == 1'b0) & (ap_predicate_op118_read_state7 == 1'b1)))) | ((nms_mat_data_full_n == 1'b0) & (icmp_ln870_4_reg_932_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp172 = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((phase_mat_data_empty_n == 1'b0) & (ap_predicate_op129_read_state7 == 1'b1)) | ((magnitude_mat_data_empty_n == 1'b0) & (ap_predicate_op118_read_state7 == 1'b1)))) | ((nms_mat_data_full_n == 1'b0) & (icmp_ln870_4_reg_932_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter1 == 1'b1) & (((phase_mat_data_empty_n == 1'b0) & (ap_predicate_op129_read_state7 == 1'b1)) | ((magnitude_mat_data_empty_n == 1'b0) & (ap_predicate_op118_read_state7 == 1'b1)))) | ((nms_mat_data_full_n == 1'b0) & (icmp_ln870_4_reg_932_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((highthreshold_empty_n == 1'b0) | (lowthreshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state10_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter4_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter5_ignore_call22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp1_stage0_iter6 = ((nms_mat_data_full_n == 1'b0) & (icmp_ln870_4_reg_932_pp1_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp1_stage0_iter6_ignore_call22 = ((nms_mat_data_full_n == 1'b0) & (icmp_ln870_4_reg_932_pp1_iter5_reg == 1'd0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((icmp_ln878_reg_847 == 1'd0) & (phase_mat_data_empty_n == 1'b0)) | ((icmp_ln878_reg_847 == 1'd0) & (magnitude_mat_data_empty_n == 1'b0)));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0_ignore_call22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = (((phase_mat_data_empty_n == 1'b0) & (ap_predicate_op129_read_state7 == 1'b1)) | ((magnitude_mat_data_empty_n == 1'b0) & (ap_predicate_op118_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1_ignore_call22 = (((phase_mat_data_empty_n == 1'b0) & (ap_predicate_op129_read_state7 == 1'b1)) | ((magnitude_mat_data_empty_n == 1'b0) & (ap_predicate_op118_read_state7 == 1'b1)));
end

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter3_ignore_call22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_775 = ((icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (trunc_ln188_reg_893 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_780 = (~(trunc_ln187_reg_889 == 2'd1) & ~(trunc_ln187_reg_889 == 2'd0) & (icmp_ln878_1_reg_907 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_row_ind_V_phi_fu_393_p4 = row_ind_V_reg_389;

always @ (*) begin
    ap_predicate_op118_read_state7 = ((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0));
end

always @ (*) begin
    ap_predicate_op129_read_state7 = ((cmp_i_i147_i_i_i_reg_885 == 1'd1) & (icmp_ln878_1_reg_907 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign bottom_1_fu_619_p3 = ((icmp_ln870_fu_613_p2[0:0] == 1'b1) ? 2'd1 : bottom_fu_118);

assign buf_V_0_address1 = zext_ln195_fu_706_p1;

assign buf_V_1_address1 = zext_ln195_fu_706_p1;

assign buf_V_2_address1 = zext_ln195_fu_706_p1;

assign cmp_i_i147_i_i_i_fu_658_p2 = ((row_V_reg_353 < 10'd720) ? 1'b1 : 1'b0);

assign col_V_1_fu_560_p2 = (col_V_reg_342 + 11'd1);

assign col_V_3_fu_676_p2 = (ap_phi_mux_col_V_2_phi_fu_405_p4 + 11'd1);

assign icmp_ln334_fu_577_p2 = ((row_V_reg_353 == 10'd721) ? 1'b1 : 1'b0);

assign icmp_ln870_1_fu_790_p2 = ((row_ind_V_1_fu_772_p2 == 13'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_2_fu_804_p2 = ((read_ind_V_1_fu_778_p2 == 13'd2) ? 1'b1 : 1'b0);

assign icmp_ln870_3_fu_818_p2 = ((write_ind_V_1_fu_784_p2 == 13'd2) ? 1'b1 : 1'b0);

assign icmp_ln870_4_fu_713_p2 = ((col_V_2_reg_401_pp1_iter1_reg == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_613_p2 = ((row_ind_V_reg_389 == 13'd1) ? 1'b1 : 1'b0);

assign icmp_ln878_1_fu_682_p2 = ((ap_phi_mux_col_V_2_phi_fu_405_p4 == 11'd1280) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_566_p2 = ((col_V_reg_342 == 11'd1280) ? 1'b1 : 1'b0);

assign mid_1_fu_627_p3 = ((icmp_ln870_fu_613_p2[0:0] == 1'b1) ? 2'd0 : mid_fu_122);

assign nms_mat_data_din = reg_555;

assign read_ind_V_1_fu_778_p2 = (read_ind_V_reg_377 + 13'd1);

assign read_ind_V_2_fu_810_p3 = ((icmp_ln870_2_fu_804_p2[0:0] == 1'b1) ? 13'd0 : read_ind_V_1_fu_778_p2);

assign row_V_1_fu_766_p2 = (row_V_reg_353 + 10'd1);

assign row_ind_V_1_fu_772_p2 = (row_ind_V_reg_389 + 13'd1);

assign row_ind_V_2_fu_796_p3 = ((icmp_ln870_1_fu_790_p2[0:0] == 1'b1) ? 13'd0 : row_ind_V_1_fu_772_p2);

assign start_out = real_start;

assign top_1_fu_635_p3 = ((icmp_ln870_fu_613_p2[0:0] == 1'b1) ? 2'd2 : top_fu_126);

assign trunc_ln187_fu_664_p1 = row_ind_V_reg_389[1:0];

assign trunc_ln188_fu_668_p1 = read_ind_V_reg_377[0:0];

assign trunc_ln204_fu_672_p1 = write_ind_V_reg_365[0:0];

assign write_ind_V_1_fu_784_p2 = (write_ind_V_reg_365 + 13'd1);

assign write_ind_V_2_fu_824_p3 = ((icmp_ln870_3_fu_818_p2[0:0] == 1'b1) ? 13'd0 : write_ind_V_1_fu_784_p2);

assign zext_ln195_fu_706_p1 = col_V_2_reg_401_pp1_iter1_reg;

assign zext_ln534_1_fu_697_p1 = col_V_2_reg_401;

assign zext_ln534_2_fu_688_p1 = col_V_2_reg_401;

assign zext_ln534_fu_572_p1 = col_V_reg_342;

always @ (posedge ap_clk) begin
    zext_ln534_reg_851[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln195_reg_911[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //edge_canny_detector_xFSuppression3x3_2_0_0_720_1280_3_0_0_1_5_1_1_1280_3840_3840_s
